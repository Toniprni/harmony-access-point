<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="1c29d1fb-f8ae-4ddb-ac43-1469a15001ec" activeEnvironment="Default" name="TESTS_FS" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@hermesConfig">C:\ec</con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="9581111c-248c-4085-bf9f-dc452577042f" wsaVersion="NONE" name="BackendService_1_1SoapBinding" type="wsdl" bindingName="{http://org.ecodex.backend/1_1/}BackendService_1_1SoapBinding" soapVersion="1_2" anonymous="optional" definition="${#Project#localUrl}/services/backend?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/domibus/services/backend?wsdl"><con:part><con:url>http://localhost:8080/domibus/services/backend?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="BackendService_1_1" targetNamespace="http://org.ecodex.backend/1_1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://org.ecodex.backend/1_1/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:tns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <xsd:annotation>
        <xsd:appinfo>Schema for Domibus messages' headers submission</xsd:appinfo>
        <xsd:documentation xml:lang="en">This schema defines an XML subset of ebMS-3 headers which is used to validate messages submitted to Domibus
            through WS plugin.</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="Messaging" type="Messaging"/>
      <xsd:complexType name="Messaging">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="UserMessage" type="UserMessage"/>
        </xsd:sequence>
        <xsd:attribute name="mustUnderstand" type="xsd:boolean" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="UserMessage">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessageInfo" type="MessageInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyInfo" type="PartyInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="CollaborationInfo" type="CollaborationInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="MessageProperties" type="tns:MessageProperties"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="PayloadInfo" type="tns:PayloadInfo"/>
        </xsd:all>
        <xsd:attribute name="mpc" type="xsd:anyURI" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="MessageInfo">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="0" name="Timestamp" type="xsd:dateTime"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessageId" type="tns:max255-non-empty-string"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="RefToMessageId" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PartyInfo">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="From" type="tns:From"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="To" type="tns:To"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PartyId">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="From">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyId" type="tns:PartyId"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Role" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="To">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyId" type="tns:PartyId"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Role" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="CollaborationInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="AgreementRef" type="tns:AgreementRef"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Service" type="tns:Service"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Action" type="xsd:token"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="ConversationId" type="xsd:token"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="Service">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="AgreementRef">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
            <xsd:attribute name="pmode" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PayloadInfo">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="PartInfo" type="tns:PartInfo"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PartInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="Schema" type="Schema"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="Description" type="tns:Description"/>
          <xsd:element minOccurs="0" name="PartProperties" type="tns:PartProperties"/>
        </xsd:all>
        <xsd:attribute name="href" type="xsd:token" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="Property">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="name" type="tns:max255-non-empty-string" use="required"/>
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PartProperties">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Property" type="tns:Property"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MessageProperties">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Property" type="Property"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Schema">
        <xsd:attribute name="location" type="xsd:anyURI" use="optional"/>
        <xsd:attribute name="version" type="tns:max255-non-empty-string" use="optional"/>
        <xsd:attribute name="namespace" type="tns:max255-non-empty-string" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="Description">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute ref="xml:lang" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="max255-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://org.ecodex.backend/1_1/" xmlns:ns1="http://www.w3.org/2005/05/xmlmime">
      <xsd:import namespace="http://www.w3.org/2005/05/xmlmime"/>
      <xsd:simpleType name="max255-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="FaultDetail">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="code" type="xsd:string"/>
            <xsd:element name="message" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="retrieveMessageRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" nillable="true" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="retrieveMessageResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" type="tns:LargePayloadType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="listPendingMessagesRequest" nillable="false" type="xsd:anyType"/>
      <xsd:element name="listPendingMessagesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="messageErrorsRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="messageStatusRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="submitRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" nillable="true" type="tns:LargePayloadType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="submitResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="PayloadType">
        <xsd:simpleContent>
          <xsd:extension base="ns1:base64Binary">
            <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="LargePayloadType">
        <xsd:sequence>
          <xsd:element name="value" ns1:expectedContentTypes="application/octet-stream" type="xsd:base64Binary"/>
        </xsd:sequence>
        <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
        <xsd:attribute name="contentType" type="xsd:string"/>
      </xsd:complexType>
      <xsd:complexType name="errorResultImpl">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xsd:element minOccurs="0" name="errorDetail" type="xsd:string"/>
          <xsd:element minOccurs="0" name="messageInErrorId" type="xsd:string"/>
          <xsd:element minOccurs="0" name="mshRole" type="tns:mshRole"/>
          <xsd:element minOccurs="0" name="notified" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PayloadURLType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="messageStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="READY_TO_SEND"/>
          <xsd:enumeration value="READY_TO_PULL"/>
          <xsd:enumeration value="BEING_PULLED"/>
          <xsd:enumeration value="SEND_ENQUEUED"/>
          <xsd:enumeration value="SEND_IN_PROGRESS"/>
          <xsd:enumeration value="WAITING_FOR_RECEIPT"/>
          <xsd:enumeration value="ACKNOWLEDGED"/>
          <xsd:enumeration value="ACKNOWLEDGED_WITH_WARNING"/>
          <xsd:enumeration value="SEND_ATTEMPT_FAILED"/>
          <xsd:enumeration value="SEND_FAILURE"/>
          <xsd:enumeration value="NOT_FOUND"/>
          <xsd:enumeration value="WAITING_FOR_RETRY"/>
          <xsd:enumeration value="RECEIVED"/>
          <xsd:enumeration value="RECEIVED_WITH_WARNINGS"/>
          <xsd:enumeration value="DELETED"/>
          <xsd:enumeration value="DOWNLOADED"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="errorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EBMS_0001"/>
          <xsd:enumeration value="EBMS_0002"/>
          <xsd:enumeration value="EBMS_0003"/>
          <xsd:enumeration value="EBMS_0004"/>
          <xsd:enumeration value="EBMS_0005"/>
          <xsd:enumeration value="EBMS_0006"/>
          <xsd:enumeration value="EBMS_0007"/>
          <xsd:enumeration value="EBMS_0008"/>
          <xsd:enumeration value="EBMS_0009"/>
          <xsd:enumeration value="EBMS_0010"/>
          <xsd:enumeration value="EBMS_0011"/>
          <xsd:enumeration value="EBMS_0101"/>
          <xsd:enumeration value="EBMS_0102"/>
          <xsd:enumeration value="EBMS_0103"/>
          <xsd:enumeration value="EBMS_0201"/>
          <xsd:enumeration value="EBMS_0202"/>
          <xsd:enumeration value="EBMS_0301"/>
          <xsd:enumeration value="EBMS_0302"/>
          <xsd:enumeration value="EBMS_0303"/>
          <xsd:enumeration value="EBMS_0020"/>
          <xsd:enumeration value="EBMS_0021"/>
          <xsd:enumeration value="EBMS_0022"/>
          <xsd:enumeration value="EBMS_0023"/>
          <xsd:enumeration value="EBMS_0030"/>
          <xsd:enumeration value="EBMS_0031"/>
          <xsd:enumeration value="EBMS_0040"/>
          <xsd:enumeration value="EBMS_0041"/>
          <xsd:enumeration value="EBMS_0042"/>
          <xsd:enumeration value="EBMS_0043"/>
          <xsd:enumeration value="EBMS_0044"/>
          <xsd:enumeration value="EBMS_0045"/>
          <xsd:enumeration value="EBMS_0046"/>
          <xsd:enumeration value="EBMS_0047"/>
          <xsd:enumeration value="EBMS_0048"/>
          <xsd:enumeration value="EBMS_0049"/>
          <xsd:enumeration value="EBMS_0050"/>
          <xsd:enumeration value="EBMS_0051"/>
          <xsd:enumeration value="EBMS_0052"/>
          <xsd:enumeration value="EBMS_0053"/>
          <xsd:enumeration value="EBMS_0054"/>
          <xsd:enumeration value="EBMS_0055"/>
          <xsd:enumeration value="EBMS_0060"/>
          <xsd:enumeration value="EBMS_0065"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="mshRole">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SENDING"/>
          <xsd:enumeration value="RECEIVING"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType final="#all" name="errorResultImplArray">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:errorResultImpl"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getStatusRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="statusRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getStatusResponse" nillable="true" type="tns:messageStatus"/>
      <xsd:element name="getErrorsRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getMessageErrorsResponse" nillable="true" type="tns:errorResultImplArray"/>
    </xsd:schema>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:annotation>
        <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         The xml:id specification is not yet a W3C Recommendation,
         but this attribute is included here to facilitate experimentation
         with the mechanisms it proposes.  Note that it is _not_ included
         in the specialAttrs attribute group.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.

    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of
         the original XML Working Group.  This name is reserved by
         the following decision of the W3C XML Plenary and
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>

         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2005/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2005/08/xml.xsd will not change.</xs:documentation>
      </xs:annotation>
      <xs:attribute name="lang">
        <xs:annotation>
          <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union memberTypes="xs:language">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value=""/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="space">
        <xs:simpleType>
          <xs:restriction base="xs:NCName">
            <xs:enumeration value="default"/>
            <xs:enumeration value="preserve"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="base" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id" type="xs:ID">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup name="specialAttrs">
        <xs:attribute ref="xml:base"/>
        <xs:attribute ref="xml:lang"/>
        <xs:attribute ref="xml:space"/>
      </xs:attributeGroup>
    </xs:schema>
    <xs:schema targetNamespace="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime">
      <xs:attribute name="contentType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="3"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="expectedContentTypes" type="xs:string"/>
      <xs:complexType name="base64Binary">
        <xs:simpleContent>
          <xs:extension base="xs:base64Binary">
            <xs:attribute ref="xmime:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="hexBinary">
        <xs:simpleContent>
          <xs:extension base="xs:hexBinary">
            <xs:attribute ref="xmime:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getStatusResponse">
    <wsdl:part element="tns:getStatusResponse" name="getStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessagesResponse">
    <wsdl:part element="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrorsResponse">
    <wsdl:part element="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitMessageResponse">
    <wsdl:part element="tns:submitResponse" name="submitResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RetrieveMessageFault">
    <wsdl:part element="tns:FaultDetail" name="RetrieveMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrors">
    <wsdl:part element="tns:getErrorsRequest" name="getErrorsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatus">
    <wsdl:part element="tns:statusRequest" name="statusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessages">
    <wsdl:part element="tns:listPendingMessagesRequest" name="listPendingMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SubmitMessageFault">
    <wsdl:part element="tns:FaultDetail" name="SubmitMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StatusFault">
    <wsdl:part element="tns:FaultDetail" name="StatusFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitMessage">
    <wsdl:part element="tns:submitRequest" name="submitRequest"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrieveMessage">
    <wsdl:part element="tns:retrieveMessageRequest" name="retrieveMessageRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrieveMessageResponse">
    <wsdl:part element="tns:retrieveMessageResponse" name="retrieveMessageResponse"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="BackendInterface">
    <wsdl:operation name="listPendingMessages">
      <wsdl:input message="tns:listPendingMessages" name="listPendingMessages"></wsdl:input>
      <wsdl:output message="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <wsdl:input message="tns:getMessageErrors" name="getMessageErrors"></wsdl:input>
      <wsdl:output message="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:input message="tns:getStatus" name="getStatus"></wsdl:input>
      <wsdl:output message="tns:getStatusResponse" name="getStatusResponse"></wsdl:output>
      <wsdl:fault message="tns:StatusFault" name="StatusFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitMessage">
      <wsdl:input message="tns:submitMessage" name="submitMessage"></wsdl:input>
      <wsdl:output message="tns:submitMessageResponse" name="submitMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:SubmitMessageFault" name="SubmitMessageFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveMessage" parameterOrder="retrieveMessageRequest retrieveMessageResponse ebMSHeaderInfo">
      <wsdl:input message="tns:retrieveMessage" name="retrieveMessage"></wsdl:input>
      <wsdl:output message="tns:retrieveMessageResponse" name="retrieveMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:RetrieveMessageFault" name="RetrieveMessageFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BackendService_1_1SoapBinding" type="tns:BackendInterface">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="listPendingMessages">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="listPendingMessages">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPendingMessagesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getMessageErrors">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageErrorsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getStatus">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="StatusFault">
        <soap12:fault name="StatusFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="submitMessage">
        <soap12:header message="tns:submitMessage" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="submitRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="submitMessageResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SubmitMessageFault">
        <soap12:fault name="SubmitMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="retrieveMessage">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="retrieveMessageResponse">
        <soap12:header message="tns:retrieveMessageResponse" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="retrieveMessageResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RetrieveMessageFault">
        <soap12:fault name="RetrieveMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BackendService_1_1">
    <wsdl:port binding="tns:BackendService_1_1SoapBinding" name="BACKEND_PORT">
      <soap12:address location="http://localhost:8080/domibus/services/backend"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:endpoint>http://localhost:8080/domibus/services/backend</con:endpoint><con:endpoint>http://wltdgt02.cc.cec.eu.int:1063/domibus-weblogic/services/backend</con:endpoint></con:endpoints><con:operation id="767cb481-8b7d-45ef-957f-e823696a27be" isOneWay="false" action="" name="getMessageErrors" bindingOperationName="getMessageErrors" type="Request-Response" outputName="getMessageErrorsResponse" inputName="getMessageErrors" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3f9edeb6-0fb8-4ac3-b8fe-3fe3b7ec2fc0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:getErrorsRequest>\r
         <messageID>?</messageID>\r
      </_1:getErrorsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getMessageErrors"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f3563058-db2b-4135-a5e0-ddcfb8386683" isOneWay="false" action="" name="listPendingMessages" bindingOperationName="listPendingMessages" type="Request-Response" outputName="listPendingMessagesResponse" inputName="listPendingMessages" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="854782c9-2abc-4349-93f6-240147556428" isOneWay="false" action="" name="submitMessage" bindingOperationName="submitMessage" type="Request-Response" outputName="submitMessageResponse" inputName="submitMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3f133f98-0a64-4fae-bcf5-2e64d1a04e16" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header>
      <ns:Messaging mustUnderstand="?">
         </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e984a797-da44-4ed9-88e6-118cdebcc075" name="Request 2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header>\r
      <ns:Messaging mustUnderstand="?">\r
         <!--Optional:-->\r
         <ns:UserMessage mpc="?">\r
            <!--You may enter the following 5 items in any order-->\r
            <!--Optional:-->\r
            <ns:MessageInfo>\r
               <!--You may enter the following 3 items in any order-->\r
               <!--Optional:-->\r
               <ns:Timestamp>?</ns:Timestamp>\r
               <!--Optional:-->\r
               <ns:MessageId>?</ns:MessageId>\r
               <!--Optional:-->\r
               <ns:RefToMessageId>?</ns:RefToMessageId>\r
            </ns:MessageInfo>\r
            <ns:PartyInfo>\r
               <!--You may enter the following 2 items in any order-->\r
               <ns:From>\r
                  <!--You may enter the following 2 items in any order-->\r
                  <ns:PartyId type="?">?</ns:PartyId>\r
                  <ns:Role>?</ns:Role>\r
               </ns:From>\r
               <!--Optional:-->\r
               <ns:To>\r
                  <!--You may enter the following 2 items in any order-->\r
                  <ns:PartyId type="?">?</ns:PartyId>\r
                  <ns:Role>?</ns:Role>\r
               </ns:To>\r
            </ns:PartyInfo>\r
            <ns:CollaborationInfo>\r
               <!--You may enter the following 4 items in any order-->\r
               <!--Optional:-->\r
               <ns:AgreementRef type="?" pmode="?">?</ns:AgreementRef>\r
               <ns:Service type="?">?</ns:Service>\r
               <ns:Action>?</ns:Action>\r
               <!--Optional:-->\r
               <ns:ConversationId>?</ns:ConversationId>\r
            </ns:CollaborationInfo>\r
            <ns:MessageProperties>\r
               <!--1 or more repetitions:-->\r
               <ns:Property name="?" type="?">?</ns:Property>\r
            </ns:MessageProperties>\r
            <ns:PayloadInfo>\r
               <!--1 or more repetitions:-->\r
               <ns:PartInfo href="?">\r
                  <!--You may enter the following 3 items in any order-->\r
                  <!--Optional:-->\r
                  <ns:Schema location="?" version="?" namespace="?"/>\r
                  <!--Optional:-->\r
                  <ns:Description xml:lang="?">?</ns:Description>\r
                  <!--Optional:-->\r
                  <ns:PartProperties>\r
                     <!--1 or more repetitions:-->\r
                     <ns:Property name="?" type="?">?</ns:Property>\r
                  </ns:PartProperties>\r
               </ns:PartInfo>\r
            </ns:PayloadInfo>\r
         </ns:UserMessage>\r
      </ns:Messaging>\r
   </soap:Header>\r
   <soap:Body>\r
      <_1:submitRequest>\r
         <!--Optional:-->\r
         <bodyload payloadId="?" contentType="?">\r
            <value>cid:527230167435</value>\r
         </bodyload>\r
         <!--Zero or more repetitions:-->\r
         <payload payloadId="?" contentType="?">\r
            <value>cid:993829285671</value>\r
         </payload>\r
      </_1:submitRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="fa93f66f-0dee-457b-9182-2f3dac23e65c" isOneWay="false" action="" name="retrieveMessage" bindingOperationName="retrieveMessage" type="Request-Response" outputName="retrieveMessageResponse" inputName="retrieveMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8955e910-8ad0-4f6a-84e5-e5305aa8bda4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>?</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e7667214-6a86-430e-a470-7a5c7d463ed5" name="Request 2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>?</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f3c6fe64-3e6d-4241-b6ef-c2238e21fd0b" isOneWay="false" action="" name="getStatus" bindingOperationName="getStatus" type="Request-Response" outputName="getStatusResponse" inputName="getStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9e9c4dbc-0255-4c97-bd4e-59e96bee396d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>?</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="0761ba9c-ffa6-4c5d-98a2-55beea4087b2" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://${localUrl}" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#localUrl}</con:endpoint></con:endpoints><con:resource name="Authentication" path="/rest/security/authentication" id="d3c10c37-44fb-4716-a729-db1b3c932315"><con:settings/><con:parameters/><con:method name="Authentication 1" id="ffd8755b-382d-4855-8029-75bfa2a0f506" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>403</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:aut="http://localhost/domibus/domibus/rest/security/authentication">aut:Fault</con:element></con:representation><con:request name="Super User login" id="c0cd0de1-98d1-4b07-89a7-4495c89e24cc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>{"username":"super","password":"DomibusEdel-12345"}</con:request><con:originalUri>http://localhost/domibus/domibus/rest/security/authentication</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="Default C1 User login" id="c0cd0de1-98d1-4b07-89a7-4495c89e24cc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>{"username":"admin","password":"123456"}</con:request><con:originalUri>http://localhost/domibus/domibus/rest/security/authentication</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="domain" path="/rest/security/user/domain" id="b03bb848-9ed3-41ca-822a-48afb2299b66"><con:settings/><con:parameters/><con:method name="Method 1" id="3f55624d-a3dc-4ad0-a396-82bbfd85cb19" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:dom="http://localhost/domibus/rest/security/user/domain">dom:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>403</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="44cd08af-c459-40d4-9a2d-ca310c316ad1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="JSESSIONID=C75BAA1EEC2824A14BDF61417943615F"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request/><con:originalUri>http://localhost/domibus/rest/security/user/domain</con:originalUri><con:credentials><con:username>super</con:username><con:password>DomibusEdel-12345</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="pmode" path="/rest/pmode" id="cd79698b-4a38-44f7-aa94-312044093960"><con:settings/><con:parameters><con:parameter><con:name>description</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>file</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="fb500a08-6e8f-43cc-b07c-79bcc283f391" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>403</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:pmod="http://localhost/domibus/rest/pmode">pmod:Fault</con:element></con:representation><con:request name="Request 1" id="9fe84fe6-27d8-4034-af2b-0567c46ed541" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request/><con:originalUri>http://localhost/domibus/rest/pmode</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="file" value="file:${filename}"/>
  <con:entry key="description" value="SoapUI sample test description for PMode upload. Used Pmode: "/>
</con:parameters><con:parameterOrder><con:entry>description</con:entry><con:entry>file</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="users" path="/rest/plugin/users" id="08af65c3-6bc8-423b-a1a7-81c17a4f29f5"><con:settings/><con:parameters><con:parameter><con:name>passwordPl</con:name><con:value/><con:style>PLAIN</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userPl</con:name><con:value/><con:style>PLAIN</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userRole</con:name><con:value/><con:style>PLAIN</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="cf6c97aa-d10f-4b09-bf25-c4dff8bfd958" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>403</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="addPluginUserRequest" id="8d49ecc8-e544-4792-8b4a-a9ab83c23e94" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>{ "status": "NEW",
"userName": "${=request.getProperty('userPl').getValue()}",
"authenticationType": "BASIC",
"authRoles": "${=request.getProperty('userRole').getValue()}",
"password": "${=request.getProperty('passwordPl').getValue()}",
"active": "true" }</con:request><con:originalUri>http://localhost/domibus/rest/plugin/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="passwordPl" value="DomibusEdel-12345"/>
  <con:entry key="userPl" value="pluginAdmin"/>
  <con:entry key="userRole" value="ADMIN_ROLE"/>
</con:parameters><con:parameterOrder><con:entry>passwordPl</con:entry><con:entry>userPl</con:entry><con:entry>userRole</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="properties" path="/rest/configuration/properties" id="c9d66526-374f-4179-ae29-bffa3524027c"><con:settings/><con:parameters><con:parameter><con:name>propName</con:name><con:value/><con:style>PLAIN</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:resource name="${propName}" path="{propName}" id="5eef888f-1598-4d59-b65d-6541a72db60a"><con:settings/><con:parameters><con:parameter><con:name>propName</con:name><con:value>domibus.UI.title.name</con:value><con:style>TEMPLATE</con:style><con:default>domibus.UI.title.name</con:default></con:parameter></con:parameters><con:method name="Method 1" id="0c35d316-221b-4bf4-a88c-86a389579351" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>403</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>text/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/mixed</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="cdb83ed7-cbca-4d93-b6f2-f64dd386d908" mediaType="text/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>"New data"</con:request><con:originalUri>http://localhost/domibus/rest/configuration/properties/</con:originalUri><con:credentials><con:username>${#Project#defaultAdminUsername}</con:username><con:password>123456</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="propName" value="domibus.UI.title.name" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="Method 1" id="96738251-924a-47ed-b00c-b61fc620b382" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>403</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="72ac648c-e949-4748-8334-6153846daf64" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>"New Tab Title"</con:request><con:originalUri>http://localhost/domibus/domibus/rest/configuration/properties</con:originalUri><con:credentials><con:username>${#Project#defaultAdminUsername}</con:username><con:password>${#Project#defaultAdminPassword}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="propName" value="domibus.UI.title.name" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>propName</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="4bea4595-1065-4cf1-95a6-dfbce27b6a3a" wsaVersion="NONE" name="WebServicePluginSoapBinding" type="wsdl" bindingName="{http://eu.domibus.wsplugin/}WebServicePluginSoapBinding" soapVersion="1_2" anonymous="optional" definition="http://localhost:8080/domibus/services/wsplugin?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/domibus/services/wsplugin?wsdl"><con:part><con:url>http://localhost:8080/domibus/services/wsplugin?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="WebServicePlugin" targetNamespace="http://eu.domibus.wsplugin/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://eu.domibus.wsplugin/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://eu.domibus.wsplugin/" xmlns:ns1="http://www.w3.org/2005/05/xmlmime">
      <xsd:import namespace="http://www.w3.org/2005/05/xmlmime"/>
      <xsd:simpleType name="max255-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="FaultDetail">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="code" type="xsd:string"/>
            <xsd:element name="message" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="markMessageAsDownloadedRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" nillable="true" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="markMessageAsDownloadedResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" nillable="true" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="retrieveMessageRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" nillable="true" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
          <xsd:attribute default="true" name="markAsDownloaded" type="xsd:string"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="retrieveMessageResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" type="tns:LargePayloadType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="listPendingMessagesRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="messageId" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="conversationId" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="refToMessageId" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="fromPartyId" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="finalRecipient" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="originalSender" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="receivedFrom" type="xsd:dateTime"/>
            <xsd:element minOccurs="0" name="receivedTo" type="xsd:dateTime"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="listPushFailedMessagesRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="messageId" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="finalRecipient" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="originalSender" type="tns:max255-non-empty-string"/>
            <xsd:element minOccurs="0" name="receivedFrom" type="xsd:dateTime"/>
            <xsd:element minOccurs="0" name="receivedTo" type="xsd:dateTime"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="rePushFailedMessagesRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="listPendingMessagesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="listPushFailedMessagesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="messageErrorsRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="messageStatusRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="submitRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" nillable="true" type="tns:LargePayloadType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="submitResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="PayloadType">
        <xsd:simpleContent>
          <xsd:extension base="ns1:base64Binary">
            <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="LargePayloadType">
        <xsd:sequence>
          <xsd:element name="value" ns1:expectedContentTypes="application/octet-stream" type="xsd:base64Binary"/>
        </xsd:sequence>
        <xsd:attribute name="payloadId" type="xsd:token"/>
        <xsd:attribute name="contentType" type="xsd:string"/>
      </xsd:complexType>
      <xsd:complexType name="errorResultImpl">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="domibusErrorCode" type="tns:domibusErrorCode"/>
          <xsd:element minOccurs="0" name="errorDetail" type="xsd:string"/>
          <xsd:element minOccurs="0" name="messageInErrorId" type="xsd:string"/>
          <xsd:element minOccurs="0" name="mshRole" type="tns:mshRole"/>
          <xsd:element minOccurs="0" name="notified" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PayloadURLType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="messageStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="READY_TO_SEND"/>
          <xsd:enumeration value="READY_TO_PULL"/>
          <xsd:enumeration value="BEING_PULLED"/>
          <xsd:enumeration value="SEND_ENQUEUED"/>
          <xsd:enumeration value="SEND_IN_PROGRESS"/>
          <xsd:enumeration value="WAITING_FOR_RECEIPT"/>
          <xsd:enumeration value="ACKNOWLEDGED"/>
          <xsd:enumeration value="ACKNOWLEDGED_WITH_WARNING"/>
          <xsd:enumeration value="SEND_ATTEMPT_FAILED"/>
          <xsd:enumeration value="SEND_FAILURE"/>
          <xsd:enumeration value="NOT_FOUND"/>
          <xsd:enumeration value="WAITING_FOR_RETRY"/>
          <xsd:enumeration value="RECEIVED"/>
          <xsd:enumeration value="RECEIVED_WITH_WARNINGS"/>
          <xsd:enumeration value="DELETED"/>
          <xsd:enumeration value="DOWNLOADED"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="domibusErrorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EBMS_0001"/>
          <xsd:enumeration value="EBMS_0002"/>
          <xsd:enumeration value="EBMS_0003"/>
          <xsd:enumeration value="EBMS_0004"/>
          <xsd:enumeration value="EBMS_0005"/>
          <xsd:enumeration value="EBMS_0006"/>
          <xsd:enumeration value="EBMS_0007"/>
          <xsd:enumeration value="EBMS_0008"/>
          <xsd:enumeration value="EBMS_0009"/>
          <xsd:enumeration value="EBMS_0010"/>
          <xsd:enumeration value="EBMS_0011"/>
          <xsd:enumeration value="EBMS_0101"/>
          <xsd:enumeration value="EBMS_0102"/>
          <xsd:enumeration value="EBMS_0103"/>
          <xsd:enumeration value="EBMS_0201"/>
          <xsd:enumeration value="EBMS_0202"/>
          <xsd:enumeration value="EBMS_0301"/>
          <xsd:enumeration value="EBMS_0302"/>
          <xsd:enumeration value="EBMS_0303"/>
          <xsd:enumeration value="EBMS_0020"/>
          <xsd:enumeration value="EBMS_0021"/>
          <xsd:enumeration value="EBMS_0022"/>
          <xsd:enumeration value="EBMS_0023"/>
          <xsd:enumeration value="EBMS_0030"/>
          <xsd:enumeration value="EBMS_0031"/>
          <xsd:enumeration value="EBMS_0040"/>
          <xsd:enumeration value="EBMS_0041"/>
          <xsd:enumeration value="EBMS_0042"/>
          <xsd:enumeration value="EBMS_0043"/>
          <xsd:enumeration value="EBMS_0044"/>
          <xsd:enumeration value="EBMS_0045"/>
          <xsd:enumeration value="EBMS_0046"/>
          <xsd:enumeration value="EBMS_0047"/>
          <xsd:enumeration value="EBMS_0048"/>
          <xsd:enumeration value="EBMS_0049"/>
          <xsd:enumeration value="EBMS_0050"/>
          <xsd:enumeration value="EBMS_0051"/>
          <xsd:enumeration value="EBMS_0052"/>
          <xsd:enumeration value="EBMS_0053"/>
          <xsd:enumeration value="EBMS_0054"/>
          <xsd:enumeration value="EBMS_0055"/>
          <xsd:enumeration value="EBMS_0060"/>
          <xsd:enumeration value="EBMS_0065"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="errorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="WS_PLUGIN:0001"/>
          <xsd:enumeration value="WS_PLUGIN:0002"/>
          <xsd:enumeration value="WS_PLUGIN:0003"/>
          <xsd:enumeration value="WS_PLUGIN:0004"/>
          <xsd:enumeration value="WS_PLUGIN:0005"/>
          <xsd:enumeration value="WS_PLUGIN:0006"/>
          <xsd:enumeration value="WS_PLUGIN:0007"/>
          <xsd:enumeration value="WS_PLUGIN:0008"/>
          <xsd:enumeration value="WS_PLUGIN:0009"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="mshRole">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SENDING"/>
          <xsd:enumeration value="RECEIVING"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType final="#all" name="errorResultImplArray">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:errorResultImpl"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getStatusRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="statusRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getStatusResponse" nillable="true" type="tns:messageStatus"/>
      <xsd:element name="getErrorsRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getMessageErrorsResponse" nillable="true" type="tns:errorResultImplArray"/>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:tns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <xsd:annotation>
        <xsd:appinfo>Schema for Domibus messages' headers submission</xsd:appinfo>
        <xsd:documentation xml:lang="en">This schema defines an XML subset of ebMS-3 headers which is used to validate messages submitted to Domibus
            through WS plugin.</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="Messaging" type="Messaging"/>
      <xsd:complexType name="Messaging">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="UserMessage" type="UserMessage"/>
        </xsd:sequence>
        <xsd:attribute name="mustUnderstand" type="xsd:boolean" use="optional"/>
      </xsd:complexType>
      <xsd:simpleType name="ProcessingType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="PUSH"/>
          <xsd:enumeration value="PULL"/>
          <xsd:minLength value="0"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="UserMessage">
        <xsd:all>
          <xsd:element minOccurs="0" name="MessageInfo" type="MessageInfo"/>
          <xsd:element name="PartyInfo" type="PartyInfo"/>
          <xsd:element name="CollaborationInfo" type="CollaborationInfo"/>
          <xsd:element minOccurs="0" name="MessageProperties" type="tns:MessageProperties"/>
          <xsd:element minOccurs="0" name="PayloadInfo" type="tns:PayloadInfo"/>
          <xsd:element default="PUSH" minOccurs="0" name="ProcessingType" type="ProcessingType"/>
        </xsd:all>
        <xsd:attribute name="mpc" type="xsd:anyURI" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="MessageInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="Timestamp" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MessageId" type="tns:max255-non-empty-string"/>
          <xsd:element minOccurs="0" name="RefToMessageId" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PartyInfo">
        <xsd:all>
          <xsd:element name="From" type="tns:From"/>
          <xsd:element minOccurs="0" name="To" type="tns:To"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PartyId">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="From">
        <xsd:all>
          <xsd:element name="PartyId" type="tns:PartyId"/>
          <xsd:element name="Role" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="To">
        <xsd:all>
          <xsd:element name="PartyId" type="tns:PartyId"/>
          <xsd:element name="Role" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="CollaborationInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="AgreementRef" type="tns:AgreementRef"/>
          <xsd:element name="Service" type="tns:Service"/>
          <xsd:element name="Action" type="xsd:token"/>
          <xsd:element minOccurs="0" name="ConversationId" type="xsd:token"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="Service">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="AgreementRef">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
            <xsd:attribute name="pmode" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PayloadInfo">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="PartInfo" type="tns:PartInfo"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PartInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="PartProperties" type="tns:PartProperties"/>
        </xsd:all>
        <xsd:attribute name="href" type="xsd:token"/>
      </xsd:complexType>
      <xsd:complexType name="Property">
        <xsd:simpleContent>
          <xsd:extension base="tns:max1024-non-empty-string">
            <xsd:attribute name="name" type="tns:max255-non-empty-string" use="required"/>
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PartProperties">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Property" type="tns:Property"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MessageProperties">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Property" type="Property"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="max255-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="max1024-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="1024"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:annotation>
        <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         The xml:id specification is not yet a W3C Recommendation,
         but this attribute is included here to facilitate experimentation
         with the mechanisms it proposes.  Note that it is _not_ included
         in the specialAttrs attribute group.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2005/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2005/08/xml.xsd will not change.</xs:documentation>
      </xs:annotation>
      <xs:attribute name="lang">
        <xs:annotation>
          <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union memberTypes="xs:language">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value=""/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="space">
        <xs:simpleType>
          <xs:restriction base="xs:NCName">
            <xs:enumeration value="default"/>
            <xs:enumeration value="preserve"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="base" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id" type="xs:ID">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup name="specialAttrs">
        <xs:attribute ref="xml:base"/>
        <xs:attribute ref="xml:lang"/>
        <xs:attribute ref="xml:space"/>
      </xs:attributeGroup>
    </xs:schema>
    <xs:schema targetNamespace="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime">
      <xs:attribute name="contentType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="3"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="expectedContentTypes" type="xs:string"/>
      <xs:complexType name="base64Binary">
        <xs:simpleContent>
          <xs:extension base="xs:base64Binary">
            <xs:attribute ref="xmime:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="hexBinary">
        <xs:simpleContent>
          <xs:extension base="xs:hexBinary">
            <xs:attribute ref="xmime:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="submitMessage">
    <wsdl:part element="tns:submitRequest" name="submitRequest"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rePushFailedMessagesResponse"></wsdl:message>
  <wsdl:message name="retrieveMessage">
    <wsdl:part element="tns:retrieveMessageRequest" name="retrieveMessageRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SubmitMessageFault">
    <wsdl:part element="tns:FaultDetail" name="SubmitMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessages">
    <wsdl:part element="tns:listPendingMessagesRequest" name="listPendingMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MarkMessageAsDownloadedFault">
    <wsdl:part element="tns:FaultDetail" name="MarkMessageAsDownloadedFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListPushFailedMessagesFault">
    <wsdl:part element="tns:FaultDetail" name="ListPushFailedMessagesFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPushFailedMessagesResponse">
    <wsdl:part element="tns:listPushFailedMessagesResponse" name="listPushFailedMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StatusFault">
    <wsdl:part element="tns:FaultDetail" name="StatusFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrieveMessageResponse">
    <wsdl:part element="tns:retrieveMessageResponse" name="retrieveMessageResponse"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPushFailedMessages">
    <wsdl:part element="tns:listPushFailedMessagesRequest" name="listPushFailedMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListPendingMessagesFault">
    <wsdl:part element="tns:FaultDetail" name="ListPendingMessagesFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RePushFailedMessagesFault">
    <wsdl:part element="tns:FaultDetail" name="RePushFailedMessagesFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitMessageResponse">
    <wsdl:part element="tns:submitResponse" name="submitResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="markMessageAsDownloaded">
    <wsdl:part element="tns:markMessageAsDownloadedRequest" name="markMessageAsDownloadedRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatusResponse">
    <wsdl:part element="tns:getStatusResponse" name="getStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessagesResponse">
    <wsdl:part element="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="rePushFailedMessages">
    <wsdl:part element="tns:rePushFailedMessagesRequest" name="rePushFailedMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrorsResponse">
    <wsdl:part element="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RetrieveMessageFault">
    <wsdl:part element="tns:FaultDetail" name="RetrieveMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrors">
    <wsdl:part element="tns:getErrorsRequest" name="getErrorsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatus">
    <wsdl:part element="tns:statusRequest" name="statusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetMessageErrorsFault">
    <wsdl:part element="tns:FaultDetail" name="GetMessageErrorsFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="markMessageAsDownloadedResponse">
    <wsdl:part element="tns:markMessageAsDownloadedResponse" name="markMessageAsDownloadedResponse"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="WebServicePluginInterface">
    <wsdl:operation name="submitMessage">
      <wsdl:input message="tns:submitMessage" name="submitMessage"></wsdl:input>
      <wsdl:output message="tns:submitMessageResponse" name="submitMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:SubmitMessageFault" name="SubmitMessageFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveMessage" parameterOrder="retrieveMessageRequest retrieveMessageResponse ebMSHeaderInfo">
      <wsdl:input message="tns:retrieveMessage" name="retrieveMessage"></wsdl:input>
      <wsdl:output message="tns:retrieveMessageResponse" name="retrieveMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:RetrieveMessageFault" name="RetrieveMessageFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPendingMessages">
      <wsdl:input message="tns:listPendingMessages" name="listPendingMessages"></wsdl:input>
      <wsdl:output message="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:output>
      <wsdl:fault message="tns:ListPendingMessagesFault" name="ListPendingMessagesFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="markMessageAsDownloaded" parameterOrder="markMessageAsDownloadedRequest markMessageAsDownloadedResponse ebMSHeaderInfo">
      <wsdl:input message="tns:markMessageAsDownloaded" name="markMessageAsDownloaded"></wsdl:input>
      <wsdl:output message="tns:markMessageAsDownloadedResponse" name="markMessageAsDownloadedResponse"></wsdl:output>
      <wsdl:fault message="tns:MarkMessageAsDownloadedFault" name="MarkMessageAsDownloadedFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rePushFailedMessages">
      <wsdl:input message="tns:rePushFailedMessages" name="rePushFailedMessages"></wsdl:input>
      <wsdl:output message="tns:rePushFailedMessagesResponse" name="rePushFailedMessagesResponse"></wsdl:output>
      <wsdl:fault message="tns:RePushFailedMessagesFault" name="RePushFailedMessagesFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <wsdl:input message="tns:getMessageErrors" name="getMessageErrors"></wsdl:input>
      <wsdl:output message="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:output>
      <wsdl:fault message="tns:GetMessageErrorsFault" name="GetMessageErrorsFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:input message="tns:getStatus" name="getStatus"></wsdl:input>
      <wsdl:output message="tns:getStatusResponse" name="getStatusResponse"></wsdl:output>
      <wsdl:fault message="tns:StatusFault" name="StatusFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPushFailedMessages">
      <wsdl:input message="tns:listPushFailedMessages" name="listPushFailedMessages"></wsdl:input>
      <wsdl:output message="tns:listPushFailedMessagesResponse" name="listPushFailedMessagesResponse"></wsdl:output>
      <wsdl:fault message="tns:ListPushFailedMessagesFault" name="ListPushFailedMessagesFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WebServicePluginSoapBinding" type="tns:WebServicePluginInterface">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="submitMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="submitMessage">
        <soap12:header message="tns:submitMessage" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="submitRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="submitMessageResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SubmitMessageFault">
        <soap12:fault name="SubmitMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="retrieveMessage">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="retrieveMessageResponse">
        <soap12:header message="tns:retrieveMessageResponse" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="retrieveMessageResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RetrieveMessageFault">
        <soap12:fault name="RetrieveMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPendingMessages">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="listPendingMessages">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPendingMessagesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ListPendingMessagesFault">
        <soap12:fault name="ListPendingMessagesFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="markMessageAsDownloaded">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="markMessageAsDownloaded">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="markMessageAsDownloadedResponse">
        <soap12:header message="tns:markMessageAsDownloadedResponse" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="markMessageAsDownloadedResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MarkMessageAsDownloadedFault">
        <soap12:fault name="MarkMessageAsDownloadedFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rePushFailedMessages">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="rePushFailedMessages">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="rePushFailedMessagesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RePushFailedMessagesFault">
        <soap12:fault name="RePushFailedMessagesFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getMessageErrors">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageErrorsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GetMessageErrorsFault">
        <soap12:fault name="GetMessageErrorsFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getStatus">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="StatusFault">
        <soap12:fault name="StatusFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listPushFailedMessages">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="listPushFailedMessages">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPushFailedMessagesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ListPushFailedMessagesFault">
        <soap12:fault name="ListPushFailedMessagesFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WebServicePlugin">
    <wsdl:port binding="tns:WebServicePluginSoapBinding" name="WEBSERVICEPLUGIN_PORT">
      <soap12:address location="http://localhost:8080/domibus/services/wsplugin"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint></con:endpoints><con:operation id="ff6869e3-3ba5-4ff4-9e81-d91be12db2e7" isOneWay="false" action="" name="getMessageErrors" bindingOperationName="getMessageErrors" type="Request-Response" outputName="getMessageErrorsResponse" inputName="getMessageErrors" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9a4960ed-593a-4c1a-999b-9884e4725e7b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:getErrorsRequest>
         <messageID>?</messageID>
      </eu:getErrorsRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getMessageErrors"/></con:call></con:operation><con:operation id="0c2cbeb0-b0fd-4eb8-95ea-ada6f0eaf98e" isOneWay="false" action="" name="getStatus" bindingOperationName="getStatus" type="Request-Response" outputName="getStatusResponse" inputName="getStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a4a52a7a-09c3-42f9-98f3-60cefdb16bf5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>?</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/></con:call></con:operation><con:operation id="0280a864-aaf4-49db-924d-ab7de6135ac6" isOneWay="false" action="" name="listPendingMessages" bindingOperationName="listPendingMessages" type="Request-Response" outputName="listPendingMessagesResponse" inputName="listPendingMessages" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="90594b2d-4cb5-4c80-bd1b-91890b07a5bd" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:listPendingMessagesRequest>
         <!--Optional:-->
         <messageId>?</messageId>
         <!--Optional:-->
         <conversationId>?</conversationId>
         <!--Optional:-->
         <refToMessageId>?</refToMessageId>
         <!--Optional:-->
         <fromPartyId>?</fromPartyId>
         <!--Optional:-->
         <finalRecipient>?</finalRecipient>
         <!--Optional:-->
         <originalSender>?</originalSender>
         <!--Optional:-->
         <receivedFrom>?</receivedFrom>
         <!--Optional:-->
         <receivedTo>?</receivedTo>
      </eu:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/listPendingMessages"/></con:call></con:operation><con:operation id="129b73ad-ce01-4e07-af98-3807aff4db55" isOneWay="false" action="" name="retrieveMessage" bindingOperationName="retrieveMessage" type="Request-Response" outputName="retrieveMessageResponse" inputName="retrieveMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fdd15ba9-0d46-4b41-b6ce-79796815da23" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:retrieveMessageRequest>
         <messageID>?</messageID>
      </eu:retrieveMessageRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/retrieveMessage"/></con:call></con:operation><con:operation id="a6b49d16-3ee5-4733-8aea-e834e0cd7468" isOneWay="false" action="" name="submitMessage" bindingOperationName="submitMessage" type="Request-Response" outputName="submitMessageResponse" inputName="submitMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="028a8b4d-d591-479c-a887-024484d17058" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header>
      <ns:Messaging mustUnderstand="?">
         <!--Optional:-->
         <ns:UserMessage mpc="?">
            <!--You may enter the following 5 items in any order-->
            <!--Optional:-->
            <ns:MessageInfo>
               <!--You may enter the following 3 items in any order-->
               <!--Optional:-->
               <ns:Timestamp>?</ns:Timestamp>
               <!--Optional:-->
               <ns:MessageId>?</ns:MessageId>
               <!--Optional:-->
               <ns:RefToMessageId>?</ns:RefToMessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <!--You may enter the following 2 items in any order-->
               <ns:From>
                  <!--You may enter the following 2 items in any order-->
                  <ns:PartyId type="?">?</ns:PartyId>
                  <ns:Role>?</ns:Role>
               </ns:From>
               <!--Optional:-->
               <ns:To>
                  <!--You may enter the following 2 items in any order-->
                  <ns:PartyId type="?">?</ns:PartyId>
                  <ns:Role>?</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <!--You may enter the following 4 items in any order-->
               <!--Optional:-->
               <ns:AgreementRef type="?" pmode="?">?</ns:AgreementRef>
               <ns:Service type="?">?</ns:Service>
               <ns:Action>?</ns:Action>
               <!--Optional:-->
               <ns:ConversationId>?</ns:ConversationId>
            </ns:CollaborationInfo>
            <!--Optional:-->
            <ns:MessageProperties>
               <!--1 or more repetitions:-->
               <ns:Property name="?" type="?">?</ns:Property>
            </ns:MessageProperties>
            <!--Optional:-->
            <ns:PayloadInfo>
               <!--1 or more repetitions:-->
               <ns:PartInfo href="?">
                  <!--Optional:-->
                  <ns:PartProperties>
                     <!--1 or more repetitions:-->
                     <ns:Property name="?" type="?">?</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <eu:submitRequest>
         <!--Optional:-->
         <bodyload payloadId="?" contentType="?">
            <value>cid:761025335821</value>
         </bodyload>
         <!--Zero or more repetitions:-->
         <payload payloadId="?" contentType="?">
            <value>cid:1507713908007</value>
         </payload>
      </eu:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/submitMessage"/></con:call></con:operation><con:operation id="6163a7c4-4978-46b2-9f21-15b6ba342a27" isOneWay="false" action="" name="markMessageAsDownloaded" bindingOperationName="markMessageAsDownloaded" type="Request-Response" outputName="markMessageAsDownloadedResponse" inputName="markMessageAsDownloaded" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="21be63f0-233a-4344-95aa-02269ce99cec" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:markMessageAsDownloadedRequest>\r
         <messageID>?</messageID>\r
      </eu:markMessageAsDownloadedRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/markMessageAsDownloaded"/></con:call></con:operation><con:operation id="20202ed3-cfa9-4106-8e84-8cc9c164b13e" isOneWay="false" action="" name="rePushFailedMessages" bindingOperationName="rePushFailedMessages" type="Request-Response" outputName="rePushFailedMessagesResponse" inputName="rePushFailedMessages" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4e171764-4f5e-4b4d-b3fa-3eb4a4127f41" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:rePushFailedMessagesRequest>\r
         <!--Zero or more repetitions:-->\r
         <messageID>?</messageID>\r
      </eu:rePushFailedMessagesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/rePushFailedMessages"/></con:call></con:operation><con:operation id="b2f181e1-6ffb-4771-9ad0-e67513ba1ab7" isOneWay="false" action="" name="listPushFailedMessages" bindingOperationName="listPushFailedMessages" type="Request-Response" outputName="listPushFailedMessagesResponse" inputName="listPushFailedMessages" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2d7382f2-17b3-4338-9e5a-bf6b7716029b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/domibus/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:listPushFailedMessagesRequest>\r
         <!--Optional:-->\r
         <messageId>?</messageId>\r
         <!--Optional:-->\r
         <finalRecipient>?</finalRecipient>\r
         <!--Optional:-->\r
         <originalSender>?</originalSender>\r
         <!--Optional:-->\r
         <receivedFrom>?</receivedFrom>\r
         <!--Optional:-->\r
         <receivedTo>?</receivedTo>\r
      </eu:listPushFailedMessagesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/listPushFailedMessages"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b8e85729-92e6-429f-ba5f-7ed6eb3f4c90" wsaVersion="NONE" name="BackendServiceSoapBinding" type="wsdl" bindingName="{eu.domibus}BackendServiceSoapBinding" soapVersion="1_2" anonymous="optional" definition="file:/C:/work/digit/tools/domibus/5.1RC2/domibus-msh-distribution-5.1-20221004.095246-108-default-ws-plugin/conf/domibus/plugins/backend/BackendService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/work/digit/tools/domibus/5.1RC2/domibus-msh-distribution-5.1-20221004.095246-108-default-ws-plugin/conf/domibus/plugins/backend/BackendService.wsdl"><con:part><con:url>file:/C:/work/digit/tools/domibus/5.1RC2/domibus-msh-distribution-5.1-20221004.095246-108-default-ws-plugin/conf/domibus/plugins/backend/BackendService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="backendService" targetNamespace="eu.domibus" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="eu.domibus">
  <wsdl:types>
    <schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="eu.domibus" schemaLocation="BackendService.xsd"/>
    </schema>
  </wsdl:types>
  <wsdl:message name="submitMessage">
    <wsdl:part element="tns:submitRequest" name="submitRequest"/>
    <wsdl:part element="tns:Messaging" name="headerInfo"/>
  </wsdl:message>
  <wsdl:message name="submitMessageResponse"/>
  <wsdl:message name="submitMessageFault">
    <wsdl:part element="tns:BackendFaultDetail" name="submitMessageFault"/>
  </wsdl:message>
  <wsdl:message name="sendSuccess">
    <wsdl:part element="tns:sendSuccess" name="sendSuccess"/>
  </wsdl:message>
  <wsdl:message name="sendSuccessResponse"/>
  <wsdl:message name="sendSuccessFault">
    <wsdl:part element="tns:BackendFaultDetail" name="sendSuccessFault"/>
  </wsdl:message>
  <wsdl:message name="sendFailure">
    <wsdl:part element="tns:sendFailure" name="sendFailure"/>
  </wsdl:message>
  <wsdl:message name="sendFailureResponse"/>
  <wsdl:message name="sendFailureFault">
    <wsdl:part element="tns:BackendFaultDetail" name="sendFailureFault"/>
  </wsdl:message>
  <wsdl:message name="receiveSuccess">
    <wsdl:part element="tns:receiveSuccess" name="receiveSuccess"/>
  </wsdl:message>
  <wsdl:message name="receiveSuccessResponse"/>
  <wsdl:message name="receiveSuccessFault">
    <wsdl:part element="tns:BackendFaultDetail" name="receiveSuccessFault"/>
  </wsdl:message>
  <wsdl:message name="receiveFailure">
    <wsdl:part element="tns:receiveFailure" name="receiveFailure"/>
  </wsdl:message>
  <wsdl:message name="receiveFailureResponse"/>
  <wsdl:message name="receiveFailureFault">
    <wsdl:part element="tns:BackendFaultDetail" name="receiveFailureFault"/>
  </wsdl:message>
  <wsdl:message name="delete">
    <wsdl:part element="tns:delete" name="delete"/>
  </wsdl:message>
  <wsdl:message name="deleteResponse"/>
  <wsdl:message name="deleteFault">
    <wsdl:part element="tns:BackendFaultDetail" name="deleteFault"/>
  </wsdl:message>
  <wsdl:message name="deleteBatch">
    <wsdl:part element="tns:deleteBatch" name="deleteBatch"/>
  </wsdl:message>
  <wsdl:message name="deleteBatchResponse"/>
  <wsdl:message name="deleteBatchFault">
    <wsdl:part element="tns:BackendFaultDetail" name="deleteBatchFault"/>
  </wsdl:message>
  <wsdl:message name="messageStatusChange">
    <wsdl:part element="tns:messageStatusChange" name="messageStatusChange"/>
  </wsdl:message>
  <wsdl:message name="messageStatusChangeResponse"/>
  <wsdl:message name="messageStatusChangeFault">
    <wsdl:part element="tns:BackendFaultDetail" name="messageStatusChangeFault"/>
  </wsdl:message>
  <wsdl:portType name="BackendInterface">
    <wsdl:operation name="submitMessage">
      <wsdl:input message="tns:submitMessage" name="submitRequest"></wsdl:input>
      <wsdl:output message="tns:submitMessageResponse" name="submitMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:submitMessageFault" name="submitMessageFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendSuccess">
      <wsdl:input message="tns:sendSuccess" name="sendSuccess"></wsdl:input>
      <wsdl:output message="tns:sendSuccessResponse" name="sendSuccessResponse"></wsdl:output>
      <wsdl:fault message="tns:sendSuccessFault" name="sendSuccessFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendFailure">
      <wsdl:input message="tns:sendFailure" name="sendFailure"></wsdl:input>
      <wsdl:output message="tns:sendFailureResponse" name="sendFailureResponse"></wsdl:output>
      <wsdl:fault message="tns:sendFailureFault" name="sendFailureFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="receiveSuccess">
      <wsdl:input message="tns:receiveSuccess" name="receiveSuccess"></wsdl:input>
      <wsdl:output message="tns:receiveSuccessResponse" name="receiveSuccessResponse"></wsdl:output>
      <wsdl:fault message="tns:receiveSuccessFault" name="receiveSuccessFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="receiveFailure">
      <wsdl:input message="tns:receiveFailure" name="receiveFailure"></wsdl:input>
      <wsdl:output message="tns:receiveFailureResponse" name="receiveFailureResponse"></wsdl:output>
      <wsdl:fault message="tns:receiveFailureFault" name="receiveFailureFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="tns:delete" name="delete"></wsdl:input>
      <wsdl:output message="tns:deleteResponse" name="deleteResponse"></wsdl:output>
      <wsdl:fault message="tns:deleteFault" name="deleteFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBatch">
      <wsdl:input message="tns:deleteBatch" name="deleteBatch"></wsdl:input>
      <wsdl:output message="tns:deleteBatchResponse" name="deleteBatchResponse"></wsdl:output>
      <wsdl:fault message="tns:deleteBatchFault" name="deleteBatchFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="messageStatusChange">
      <wsdl:input message="tns:messageStatusChange" name="messageStatusChange"></wsdl:input>
      <wsdl:output message="tns:messageStatusChangeResponse" name="messageStatusChangeResponse"></wsdl:output>
      <wsdl:fault message="tns:messageStatusChangeFault" name="messageStatusChangeFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BackendServiceSoapBinding" type="tns:BackendInterface">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="submitMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="submitMessage">
        <soap12:header message="tns:submitMessage" part="headerInfo" use="literal"/>
        <soap12:body parts="submitRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="submitMessageResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="submitMessageFault">
        <soap12:fault name="submitMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendSuccess">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="sendSuccess">
        <soap12:body parts="sendSuccess" use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendSuccessResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sendSuccessFault">
        <soap12:fault name="sendSuccessFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendFailure">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="sendFailure">
        <soap12:body parts="sendFailure" use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendFailureResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="sendFailureFault">
        <soap12:fault name="sendFailureFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="receiveSuccess">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="receiveSuccess">
        <soap12:body parts="receiveSuccess" use="literal"/>
      </wsdl:input>
      <wsdl:output name="receiveSuccessResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="receiveSuccessFault">
        <soap12:fault name="receiveSuccessFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="receiveFailure">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="receiveFailure">
        <soap12:body parts="receiveFailure" use="literal"/>
      </wsdl:input>
      <wsdl:output name="receiveFailureResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="receiveFailureFault">
        <soap12:fault name="receiveFailureFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="delete">
        <soap12:body parts="delete" use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="deleteFault">
        <soap12:fault name="deleteFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBatch">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="deleteBatch">
        <soap12:body parts="deleteBatch" use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteBatchResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="deleteBatchFault">
        <soap12:fault name="deleteBatchFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="messageStatusChange">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="messageStatusChange">
        <soap12:body parts="messageStatusChange" use="literal"/>
      </wsdl:input>
      <wsdl:output name="messageStatusChangeResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="messageStatusChangeFault">
        <soap12:fault name="messageStatusChangeFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BackendService">
    <wsdl:port binding="tns:BackendServiceSoapBinding" name="BACKEND_PORT">
      <soap12:address location="http://localhost:8080/backend"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\C:\work\digit\tools\domibus\5.1RC2\domibus-msh-distribution-5.1-20221004.095246-108-default-ws-plugin\conf\domibus\plugins\backend\BackendService.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="eu.domibus" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:tns="eu.domibus">
  <xsd:simpleType name="max255-non-empty-string">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="max1024-non-empty-string">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="1024"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="messageStatus">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="READY_TO_SEND"/>
      <xsd:enumeration value="READY_TO_PULL"/>
      <xsd:enumeration value="BEING_PULLED"/>
      <xsd:enumeration value="SEND_ENQUEUED"/>
      <xsd:enumeration value="SEND_IN_PROGRESS"/>
      <xsd:enumeration value="WAITING_FOR_RECEIPT"/>
      <xsd:enumeration value="ACKNOWLEDGED"/>
      <xsd:enumeration value="ACKNOWLEDGED_WITH_WARNING"/>
      <xsd:enumeration value="SEND_ATTEMPT_FAILED"/>
      <xsd:enumeration value="SEND_FAILURE"/>
      <xsd:enumeration value="NOT_FOUND"/>
      <xsd:enumeration value="WAITING_FOR_RETRY"/>
      <xsd:enumeration value="RECEIVED"/>
      <xsd:enumeration value="RECEIVED_WITH_WARNINGS"/>
      <xsd:enumeration value="DELETED"/>
      <xsd:enumeration value="DOWNLOADED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="LargePayloadType">
    <xsd:sequence>
      <xsd:element name="value" type="xsd:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
    </xsd:sequence>
    <xsd:attribute name="payloadId" type="xsd:token"/>
    <xsd:attribute name="contentType" type="xsd:string"/>
    <xsd:attribute name="mimeType" type="xsd:string"/>
    <xsd:attribute name="payloadName" type="xsd:string"/>
  </xsd:complexType>
  <xsd:element name="submitRequest">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" type="tns:LargePayloadType"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Messaging" type="tns:Messaging"/>
  <xsd:complexType name="Messaging">
    <xsd:sequence>
      <xsd:element name="UserMessage" type="tns:UserMessage" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UserMessage">
    <xsd:all>
      <xsd:element name="MessageInfo" type="tns:MessageInfo" minOccurs="0"/>
      <xsd:element name="PartyInfo" type="tns:PartyInfo"/>
      <xsd:element name="CollaborationInfo" type="tns:CollaborationInfo"/>
      <xsd:element name="MessageProperties" type="tns:MessageProperties" minOccurs="0"/>
      <xsd:element name="PayloadInfo" type="tns:PayloadInfo" minOccurs="0"/>
      <xsd:element name="ProcessingType" type="tns:ProcessingType" minOccurs="0" default="PUSH"/>
    </xsd:all>
    <xsd:attribute name="mpc" type="xsd:anyURI" use="optional"/>
  </xsd:complexType>
  <xsd:simpleType name="ProcessingType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PUSH"/>
      <xsd:enumeration value="PULL"/>
      <xsd:minLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MessageInfo">
    <xsd:all>
      <xsd:element name="Timestamp" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="MessageId" type="tns:max255-non-empty-string" minOccurs="0"/>
      <xsd:element name="RefToMessageId" type="tns:max255-non-empty-string" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="PartyInfo">
    <xsd:all>
      <xsd:element name="From" type="tns:From"/>
      <xsd:element name="To" type="tns:To" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="PartyId">
    <xsd:simpleContent>
      <xsd:extension base="tns:max255-non-empty-string">
        <xsd:attribute name="type" type="tns:max255-non-empty-string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="From">
    <xsd:all>
      <xsd:element name="PartyId" type="tns:PartyId"/>
      <xsd:element name="Role" type="tns:max255-non-empty-string"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="To">
    <xsd:all>
      <xsd:element name="PartyId" type="tns:PartyId"/>
      <xsd:element name="Role" type="tns:max255-non-empty-string"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="CollaborationInfo">
    <xsd:all>
      <xsd:element name="AgreementRef" type="tns:AgreementRef" minOccurs="0"/>
      <xsd:element name="Service" type="tns:Service"/>
      <xsd:element name="Action" type="xsd:token"/>
      <xsd:element name="ConversationId" type="xsd:token" minOccurs="0"/>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="tns:max255-non-empty-string">
        <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AgreementRef">
    <xsd:simpleContent>
      <xsd:extension base="tns:max255-non-empty-string">
        <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
        <xsd:attribute name="pmode" type="tns:max255-non-empty-string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PayloadInfo">
    <xsd:sequence>
      <xsd:element name="PartInfo" type="tns:PartInfo" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PartInfo">
    <xsd:all>
      <xsd:element name="PartProperties" type="tns:PartProperties" minOccurs="0"/>
    </xsd:all>
    <xsd:attribute name="href" type="xsd:token"/>
  </xsd:complexType>
  <xsd:complexType name="Property">
    <xsd:simpleContent>
      <xsd:extension base="tns:max1024-non-empty-string">
        <xsd:attribute name="name" type="tns:max255-non-empty-string" use="required"/>
        <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PartProperties">
    <xsd:sequence>
      <xsd:element name="Property" type="tns:Property" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageProperties">
    <xsd:sequence>
      <xsd:element name="Property" type="tns:Property" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="BackendFaultDetail">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="code" type="xsd:string"/>
        <xsd:element name="message" nillable="true" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="sendSuccess">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="sendFailure">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="receiveSuccess">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="receiveFailure">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="delete">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="deleteBatch">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageIds" nillable="true" type="xsd:string"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="messageStatusChange">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
        <xsd:element name="messageStatus" type="tns:messageStatus"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/backend</con:endpoint></con:endpoints><con:operation id="7a41018e-e4a5-4507-aa77-24fa96f06e96" isOneWay="false" action="" name="delete" bindingOperationName="delete" type="Request-Response" outputName="deleteResponse" inputName="delete" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="79214900-8dde-4c91-89f9-306e369d2bdd" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="eu.domibus">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:delete>\r
         <messageID>?</messageID>\r
      </eu:delete>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="eu.domibus/BackendInterface/delete"/></con:call></con:operation><con:operation id="3b5efb69-580f-4457-82c8-8cab99d57ee2" isOneWay="false" action="" name="deleteBatch" bindingOperationName="deleteBatch" type="Request-Response" outputName="deleteBatchResponse" inputName="deleteBatch" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="91e944b8-dea7-47dc-8710-da6fe416b420" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="eu.domibus">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:deleteBatch>\r
         <!--Zero or more repetitions:-->\r
         <messageIds>?</messageIds>\r
      </eu:deleteBatch>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="eu.domibus/BackendInterface/deleteBatch"/></con:call></con:operation><con:operation id="74690526-0c9a-4f00-9836-294649572353" isOneWay="false" action="" name="messageStatusChange" bindingOperationName="messageStatusChange" type="Request-Response" outputName="messageStatusChangeResponse" inputName="messageStatusChange" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="54c4ffc6-1074-4cf9-869d-07129578dd54" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="eu.domibus">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:messageStatusChange>\r
         <messageID>?</messageID>\r
         <messageStatus>?</messageStatus>\r
      </eu:messageStatusChange>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="eu.domibus/BackendInterface/messageStatusChange"/></con:call></con:operation><con:operation id="4d1d5e50-4a2d-41f8-b627-b9f1151c2404" isOneWay="false" action="" name="receiveFailure" bindingOperationName="receiveFailure" type="Request-Response" outputName="receiveFailureResponse" inputName="receiveFailure" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bf7f6ce9-d9c1-4ee4-b068-7ad6744bf9e4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="eu.domibus">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:receiveFailure>\r
         <messageID>?</messageID>\r
      </eu:receiveFailure>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="eu.domibus/BackendInterface/receiveFailure"/></con:call></con:operation><con:operation id="58471080-e76f-45d0-adcc-b136fb165ca3" isOneWay="false" action="" name="receiveSuccess" bindingOperationName="receiveSuccess" type="Request-Response" outputName="receiveSuccessResponse" inputName="receiveSuccess" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9bdf5d40-f72c-48fa-bf0b-95190a224930" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="eu.domibus">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:receiveSuccess>\r
         <messageID>?</messageID>\r
      </eu:receiveSuccess>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="eu.domibus/BackendInterface/receiveSuccess"/></con:call></con:operation><con:operation id="36ffbd7b-ce18-40d5-b5e1-c0d66fec8a08" isOneWay="false" action="" name="sendFailure" bindingOperationName="sendFailure" type="Request-Response" outputName="sendFailureResponse" inputName="sendFailure" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="16609ef8-6c40-4105-99db-63ade86f029d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="eu.domibus">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:sendFailure>\r
         <messageID>?</messageID>\r
      </eu:sendFailure>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="eu.domibus/BackendInterface/sendFailure"/></con:call></con:operation><con:operation id="f318e689-9e17-4986-96ee-4eaf31e9cfdf" isOneWay="false" action="" name="sendSuccess" bindingOperationName="sendSuccess" type="Request-Response" outputName="sendSuccessResponse" inputName="sendSuccess" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="31d91487-854a-4df9-8cfc-0e1956bc6f42" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="eu.domibus">\r
   <soap:Header/>\r
   <soap:Body>\r
      <eu:sendSuccess>\r
         <messageID>?</messageID>\r
      </eu:sendSuccess>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="eu.domibus/BackendInterface/sendSuccess"/></con:call></con:operation></con:interface><con:testSuite id="26f47105-33a8-4994-9eb3-c2073227b909" name="Administration" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Clean Database" searchProperties="true" id="3588311a-372e-4dce-80ad-21700d5a5684">
            <con:settings/>












            <con:testStep type="groovy" name="Clean All" id="26e462e9-8013-49da-b45b-b91a5e83d07f"><con:settings/><con:config><script>def test = new Domibus(log,null,context);
test.cleanDatabaseAll();
test.finalize();

</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-localhost-tomcat-tomcat" searchProperties="true" id="b6344b31-23a5-4fd3-9c11-8c581f213d9f">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties-Default-Default-Main Branch" id="882f76e6-10e2-4552-99da-a45821fd9724"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/1-mainBranch/sender/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/1-mainBranch/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/1-mainBranch/greenReceiver/domibus/");


// Set C2 and C3 fsplugin paths
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathBlue", "C:/domibus/1-mainBranch/sender/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathRed", "C:/domibus/1-mainBranch/receiver/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathGreen", "C:/domibus/1-mainBranch/greenReceiver/fs_plugin_data");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-BugFix Branch" id="12d05f39-8613-457d-875f-c0692a57f396"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/2-bugfixBranch/sender/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/2-bugfixBranch/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/2-bugfixBranch/greenReceiver/domibus/");


// Set C2 and C3 fsplugin paths
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathBlue", "C:/domibus/2-bugfixBranch/sender/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathRed", "C:/domibus/2-bugfixBranch/receiver/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathGreen", "C:/domibus/2-bugfixBranch/greenReceiver/fs_plugin_data");


log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default_3GWs-Main Branch" id="f7cc960a-efbc-4b65-85e5-c9527fcd48de"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default_3GWs-BugFix Branch" id="7e7e074d-a903-4ae4-be4f-6c9299cb2bf5"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy1D-Default-Main Branch" id="a42852c6-4fcb-498b-a726-f703e12a481f"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "1");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy1D-Default-BugFix Branch" id="a6d08339-a05d-4e36-9a38-efa12fcc677c"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "1");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy2D-Default-Main Branch" id="24bbf847-bbac-4989-9e1c-88ba87822c6b"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy2D-Default-BugFix Branch" id="a8bbad83-8bd7-4473-86af-4b6aa4e4ccc5"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy3D(Name=Min Length)-Default-Main Branch" id="bbcded49-7154-4d7e-adae-df8f28db3a65"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom3":{"site":"C2","domainName":"a","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy3D(Name=Min Length)-Default-BugFix Branch" id="431b7229-b7b0-4dd9-b766-da7909d595c2"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom3":{"site":"C2","domainName":"a","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy3D(Name=Max Length)-Default-Main Branch" id="b6aa8b6b-0d94-4db7-8b61-94614fd0e50c"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom3":{"site":"C2","domainName":"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy3D(Name=Max Length)-Default-BugFix Branch" id="0d9c84aa-12e8-4205-ac2f-549748444544"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom3":{"site":"C2","domainName":"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy2D-Multitenancy2D-Main Branch" id="70418187-3c2b-4541-a82c-61dc5000d3ae"><con:settings/><con:config><script><![CDATA[// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom1":{"site":"C3","domainName":"domibus_C3Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom2":{"site":"C3","domainName":"domibus_C3Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}
}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

log.info "Update done.";

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy2D-Multitenancy2D-BugFix Branch" id="edaedd37-8246-46b3-aad0-3b85eb59226b"><con:settings/><con:config><script><![CDATA[// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom1":{"site":"C3","domainName":"domibus_C3Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom2":{"site":"C3","domainName":"domibus_C3Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}
}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

log.info "Update done.";

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Multitenancy2D-Dynamic PEPPOL-Main Branch" id="8552bca3-0b33-4732-90b1-703f521dc244"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C3","domainName":"domain1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C3","domainName":"domain2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Multitenancy2D-Dynamic PEPPOL-BugFix Branch" id="7c05a0ca-f2f1-47f7-8c6b-116fb6398f37"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C3","domainName":"domain1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C3","domainName":"domain2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-Dynamic OASIS-3GWs-Main Branch" id="7338491f-bbf7-4fe4-a11d-d101b361fd1b"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');
// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-Dynamic OASIS-3GWs-BugFix Branch" id="4009a7a1-0b40-4539-b454-fcc9c3e96e83"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-Dynamic OASIS-Main Branch" id="249341de-f5f5-4245-9a65-abe53d0fa2d8"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');
// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-Dynamic OASIS-BugFix Branch" id="a165d01d-bb07-4b6e-9252-59e243b1fe22"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/dd_c2_oasis_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/dd_c3_oasis_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/2-bugfixBranch/test/C2DynOasis/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/2-bugfixBranch/test/C3DynOasis/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/2-bugfixBranch/greenReceiver/domibus/");


// Set C2 and C3 fsplugin paths
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathBlue", "C:/domibus/2-bugfixBranch/C2DynOasis/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathRed", "C:/domibus/2-bugfixBranch/C3DynOasis/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathGreen", "C:/domibus/2-bugfixBranch/greenReceiver/fs_plugin_data");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-https-Main Branch" id="de4e8f19-ee80-481c-acd0-26450b74eff0"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_https?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_https?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-https-BugFix Branch" id="bef906f4-7d71-48c8-8de2-3b64b0dbe7a0"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_https_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_https_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-taxud-Main Branch" id="14b11529-0b65-47bd-a7f5-ca39a387c8e2"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_tpap?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_tapas?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-taxud-BugFix Branch" id="c7b935ec-ab63-40cd-a83c-b71cf1f2c660"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_tpap_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_tapas_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy-Auto-BugFix Branch" id="ed0be158-9ffe-4f28-8a8e-561be2c21583"><con:settings/><con:config><script><![CDATA[// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_c2dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_c2dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom3":{"site":"C2","domainName":"a","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom4":{"site":"C2","domainName":"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","domNo":4,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom4_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom1":{"site":"C3","domainName":"domibus_c3dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom2":{"site":"C3","domainName":"domibus_c3dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"} }''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "4");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/2-bugfixBranch/sender/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/2-bugfixBranch/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/2-bugfixBranch/greenReceiver/domibus/");

// fsplugin path
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathBlue", "C:/domibus/2-bugfixBranch/sender/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathRed", "C:/domibus/2-bugfixBranch/receiver/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathGreen", "C:/domibus/2-bugfixBranch/greenReceiver/fs_plugin_data");

// Users
testRunner.testCase.testSuite.project.setPropertyValue("userC1DomDefault","userC1DomDefault"
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom1","userC1Dom1");
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom2","userC1Dom2");
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom2SelfC4","userC1Dom2SelfC4");
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom3","userC1Dom3");
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom4","userC1Dom4");
testRunner.testCase.testSuite.project.setPropertyValue("userC4DomDefault","userC4DomDefault");
testRunner.testCase.testSuite.project.setPropertyValue("userC4Dom1","userC4Dom1");
testRunner.testCase.testSuite.project.setPropertyValue("userC4Dom2","userC4Dom2");
testRunner.testCase.testSuite.project.setPropertyValue("usersPassword","DomibusEdel-12345");

log.info "Update done.";
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy-Auto-Main Branch" id="16eaf54a-20d4-48d7-9cc8-14ae9b58cc57"><con:settings/><con:config><script><![CDATA[// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom3":{"site":"C2","domainName":"a","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom4":{"site":"C2","domainName":"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","domNo":4,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom4?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom1":{"site":"C3","domainName":"domibus_C3Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom2":{"site":"C3","domainName":"domibus_C3Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"} }''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "4");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/1-mainBranch/sender/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/1-mainBranch/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/1-mainBranch/greenReceiver/domibus/");

// fsplugin path
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathBlue", "C:/domibus/1-mainBranch/sender/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathRed", "C:/domibus/1-mainBranch/receiver/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathGreen", "C:/domibus/1-mainBranch/greenReceiver/fs_plugin_data");

// Users
testRunner.testCase.testSuite.project.setPropertyValue("userC1DomDefault","userC1DomDefault"
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom1","userC1Dom1");
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom2","userC1Dom2");
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom2SelfC4","userC1Dom2SelfC4");
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom3","userC1Dom3");
testRunner.testCase.testSuite.project.setPropertyValue("userC1Dom4","userC1Dom4");
testRunner.testCase.testSuite.project.setPropertyValue("userC4DomDefault","userC4DomDefault");
testRunner.testCase.testSuite.project.setPropertyValue("userC4Dom1","userC4Dom1");
testRunner.testCase.testSuite.project.setPropertyValue("userC4Dom2","userC4Dom2");
testRunner.testCase.testSuite.project.setPropertyValue("usersPassword","DomibusEdel-12345");

log.info "Update done.";
]]></script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-localhost-DynamicDiscovery" searchProperties="true" id="297b2f5c-d4d8-4af4-ac8d-dddbeec7c97b">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="dbe07709-94f2-4d38-9483-f898d19cc536"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus_dd_c2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus_dd_c3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");

log.info "Update done.";

</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-weblogic-tomcat" searchProperties="true" id="9453740e-f4e9-48a4-8706-d9647da9f4a7">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="a54afde9-4f74-472a-b265-db3c073a4f4d"><con:settings/><con:config><script>
// blue: weblogic (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest4.westeurope.cloudapp.azure.com:7003/domibus-weblogic");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"oracle","dbDriver":"oracle.jdbc.OracleDriver","dbJdbcUrl":"jdbc:oracle:thin:@localhost:41521/xe","dbUser":"domibus_default","dbPassword":"domibus_default"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:23306/domibus_default_tomcat?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"edelCld2017"},
}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="ea5898b0-6b18-42a2-885c-68778c567789"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\cloud\\weblogic\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\cloud\\weblogic\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-wildfly-tomcat" searchProperties="true" id="cd2bbf68-7b19-4a53-a0cf-9931a8e5cc90">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="6495e4a6-bc87-411f-ad66-4e24c2e8d110"><con:settings/><con:config><script>// blue: weblogic (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest2.westeurope.cloudapp.azure.com:8085/domibus-wildfly");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:23306/domibus_default?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"domibus_default","dbPassword":"domibus_default"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:23306/domibus_default_tomcat?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"domibus_default_tomcat","dbPassword":"domibus_default_tomcat"},
}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="963be318-57cf-49ca-acb4-c22d8f9a7fa7"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\cloud\\wildfly\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\cloud\\wildfly\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-tomcat-tomcat" searchProperties="true" id="e3a6b85c-54ab-4079-85ef-faa75c77a2f7">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="5e8696ff-8112-435d-89e1-3f57f508da56"><con:settings/><con:config><script>// blue: tomcat (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest4.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:13306/domtestusr?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "domtestusr");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "domtestusr");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="f3649904-524d-4247-ac56-165045265460"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\cloud\\tomcat\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\cloud\\tomcat\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-localhost-tomcat-tomcat-bugfix" searchProperties="true" id="709740f4-55e6-4cb8-99e2-ec66d7e81f9c">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="b1dbab6a-92de-4719-b758-7f19611ef681"><con:settings/><con:config><script><![CDATA[// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom1_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom2_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom3":{"site":"C2","domainName":"domibus_C2Dom3","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom3_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Dom1":{"site":"C3","domainName":"domibus_C3Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom1_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Dom2":{"site":"C3","domainName":"domibus_C3Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom2_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Dom3":{"site":"C3","domainName":"domibus_C3Dom3","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom3_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"} }''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="8643c684-8fd8-4038-bcbe-56df90e97205"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-localhost-DynamicDiscovery-bugfix" searchProperties="true" id="992c4668-6a29-4f68-80ac-0f57b66145d7">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="30ee6457-dbfc-48f9-a1be-b97ef7405f72"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus_dd_c2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus_dd_c3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");

log.info "Update done.";

</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-weblogic-tomcat-bugfix" searchProperties="true" id="f37e4ca9-1e67-4c6d-8efd-75ae4869d186">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="939170e7-f476-41fd-abaa-fb3b8a2a363d"><con:settings/><con:config><script>// blue: weblogic (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest4.westeurope.cloudapp.azure.com:7003/domibus-weblogic");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "oracle");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "oracle.jdbc.OracleDriver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:oracle:thin:@localhost:41521/xe");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "edelivery_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "edelivery_bugfix");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "domtestusr_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "domtestusr_bugfix");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="72b781dc-d580-4a53-9b49-881860361e76"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\cloud\\weblogic\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\cloud\\weblogic\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-wildfly-tomcat-bugfix" searchProperties="true" id="e09664e3-a969-44b7-a0ca-d6a2d462585c">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="10f6d8df-3e1c-4f41-afec-0954451dc095"><con:settings/><con:config><script>// blue: wildfly (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest2.westeurope.cloudapp.azure.com:8085/domibus-wildfly");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:23306/domwildfly_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "domwildfly_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "domwildfly_bugfix");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "domtestusr_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "domtestusr_bugfix");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="e25e683e-bcd5-4e00-a4a8-582d02ad0a6b"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\cloud\\wildfly\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\cloud\\wildfly\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-tomcat-tomcat-bugfix" searchProperties="true" id="c623d027-54d4-454c-878f-b5314f2b3a44">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties" id="419ace83-08ef-4719-85e5-57bef85afac9"><con:settings/><con:config><script>// blue: tomcat (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest4.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:43306/domtestusr_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "domtestusr_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "domtestusr_bugfix");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "domtestusr_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "domtestusr_bugfix");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="ea8fe5fb-696d-438e-90c7-c178bc17b3ed"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\cloud\\tomcat\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\cloud\\tomcat\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-setLocalInstallationsPaths" searchProperties="true" id="02393bb8-9d26-467d-a438-fd170d9748db">
            <con:settings/>












            <con:testStep type="groovy" name="Set ec path" id="e62838d3-dbdb-4199-89a7-6e17986dabd6"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/ec/blue/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/ec/red/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/ec/greenReceiver/domibus/");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set domibus path" id="3bf57055-d07c-4f5f-91b2-2bbc9f85dbe7"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/sender/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Dynamic Discovery path PEPPOL" id="03cc965d-b5fb-4d6f-84b4-5aca37a4788d"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/senderDynPeppol/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Dynamic Discovery path OASIS" id="5f2292f8-1805-41fa-ba6b-95505f408731"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/senderDynOasis/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/");

log.info "Update done.";
</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="46463b13-b064-42b6-9ed0-401345959b1a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestConnection" searchProperties="true"><con:settings/><con:testStep type="groovy" name="test connection DB" id="2c9c448c-5fcb-4640-9414-f29007a7c540" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context);
test.openConnection();
log.info "CONNECTION OPENED";
test.closeConnection();
log.info "CONNECTION CLOSED";
test.finalize();</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="97bc49fa-2279-4302-8acc-155612e19dcb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Start default configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configure multitenancy mode" id="9b30fcdb-0e41-446d-8e9e-f7936eeb54c3"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");
log.info "multitenancyModeC2 custom property set to 0.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties" id="435f492f-77f4-468a-8a64-7f30d9f20bde"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8280/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Start Blue-Red" id="cbf3007c-e26e-4eeb-9c9c-10af2e26518e"><con:settings/><con:config><script>// Start 2 Domibus: sender and receiver
Domibus.startSetMSHs(1,1,0,context,log);
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="63787218-6a20-4641-9ed1-fc14d0102b75"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="eb0f9a78-570b-4743-9175-af541ff94086"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="dde79d96-7769-48c1-9587-80790e1e040a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload default truststores Blue-Red" id="78b0bad4-275d-4e9c-965c-52c11269dfe0"><con:settings/><con:config><script>// Upload truststores: default truststores (blue for sender and red for receiver)
TruststoreUtils.uploadTruststore("sender","default","\\blue\\gateway_truststore.jks",context,log);
TruststoreUtils.uploadTruststore("receiver","default","\\red\\gateway_truststore.jks",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="e513202b-f3b9-475d-bbea-135e60ab2f83"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS Blue-Red" id="e0770222-357d-4945-8dc3-359ac88d14ca"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","backendFSPlugin",context,log);
Domibus.setMessageFilters("receiver","backendFSPlugin",context,log);


</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS Blue-Red" id="d4db8ec2-7e1d-4f84-9028-5ddca9b7f25e"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","backendWebservice",context,log);
Domibus.setMessageFilters("receiver","backendWebservice",context,log);


</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>65ecdf7b-e0e2-477b-b020-da4c7fb8c855</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3bc33515-eae2-46e7-a50f-1104a8d1a301</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7aefe4d7-98b5-43b1-8f34-4aa71764de77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="2a3f229a-1557-4ea8-8c4e-3dbc4573d7db" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Start 3 gateways configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set custom properties" id="a108c0d9-ff1b-42e0-a27b-1ff477b8f769"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root");

// green: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("greenUrl", "http://localhost:8280/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseGreen", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverGreen", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlGreen", "jdbc:mysql://localhost:3306/domibus_green?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("greenDbPassword", "root");
testRunner.testCase.testSuite.project.setPropertyValue("greenDbPassword", "root");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Start Blue-Red-Green" id="88b330c5-b031-4ede-80e5-5de5f34c5412"><con:settings/><con:config><script>// Start 3 Domibus: sender, receiver and green.
Domibus.startSetMSHs(1,1,1,context,log);
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="c1640a93-60ca-459d-bc4d-2ac0411c7cdc"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes Blue-Red-Green" id="c844be46-6075-498c-8bbe-78d3ad2c8889"><con:settings/><con:config><script>// Upload PModes: blue for sender, red for receiver and green for the third Domibus.
PModeUtils.uploadPmode("sender","special","\\Threegateways\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","special","\\Threegateways\\red\\domibus-pmode-red.xml",context,log);
PModeUtils.uploadPmode("receivergreen","special","\\Threegateways\\green\\domibus-pmode-green.xml",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="d43ba76f-a0a6-41c9-ad41-d092833c6714"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload truststores Blue-Red-Green" id="13538478-2163-44b9-bca7-1b8552495fe6"><con:settings/><con:config><script>// Upload truststores: blue for sender, red for receiver and green for the third Domibus.
TruststoreUtils.uploadTruststore("sender","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log);
TruststoreUtils.uploadTruststore("receiver","special","\\Threegateways\\red\\gateway_truststore.jks",context,log);
TruststoreUtils.uploadTruststore("receivergreen","special","\\Threegateways\\green\\gateway_truststore.jks",context,log);
</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="8d6dac94-92a2-4a88-9103-7eac71ddae12"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS Blue-Red-Green" id="9f24cf9c-ed68-4324-958b-003cf8d498ec"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","backendWebservice",context,log);
Domibus.setMessageFilters("receiver","backendWebservice",context,log);
Domibus.setMessageFilters("receivergreen","backendWebservice",context,log);
</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d861779-0a64-417b-b81f-dbaed89dc796</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42781f68-9908-4231-93af-c83bd2d27190</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f10dbea4-cf15-49a7-93b9-ab0ef7752097</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="7cdd0b09-082e-4608-b56e-e02ce95a200c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Domibus users" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Add admin console user" id="f863832c-aa8f-49bf-bef2-5525ea1bb04e"><con:settings/><con:config><script>// Create admin console user
/*
 * addAdminConsoleUser(side,context,log,domainValue,userRole,userAC,passwordAC,authUser,authPwd)
 * side: to select Domibus corner. Set to "Blue", "C2" or "sender" to select corner 2. Set to "Red", "C3" or "receiver" to select corner 3
 * context: context
 * log: log
 * domainValue: to select the domain by its name (default value is "Default")
 * userRole: to select the user role (default value "ROLE_ADMIN")
 * userAC: username to add
 * passwordAC: password for userAC (default value is "DomibusEdel-12345")
 * authUser: user for domibus authentication to be able to add userAC (default value is null)
 * authPwd: password for domibus authentication to be able to add userAC (default value is null)
 */
 def side="Blue";
 def domainValue="domibus_C2Dom1";
 def userAC="userC1C2Dom1";
 def passwordAC="DomibusEdel-12345";
 def userRole="ROLE_USER"
Domibus.addAdminConsoleUser(side,context,log,domainValue,userRole,userAC,passwordAC);</script></con:config></con:testStep><con:testStep type="groovy" name="Add plugin user" id="ffd67502-fa9c-4bfc-bcca-b1bbb829951a"><con:settings/><con:config><script>// Create plugin user
/*
 * addPluginUser(side,context,log,domainValue,userRole,userPl,passwordPl,originalUser,authUser,authPwd)
 * side: to select Domibus corner. Set to "Blue", "C2" or "sender" to select corner 2. Set to "Red", "C3" or "receiver" to select corner 3
 * context: context
 * log: log
 * domainValue: to select the domain by its name (default value is "Default")
 * userRole: to select the user role (default value "ROLE_ADMIN")
 * userPl: username to add
 * passwordPl: password for userPl (default value is "DomibusEdel-12345")
 * originalUser: to select C1 or C4 (default value is "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
 * authUser: user for domibus authentication to be able to add userAC (default value is null)
 * authPwd: password for domibus authentication to be able to add userAC (default value is null)
 */
 def side="Blue";
 def domainValue="domibus_C2Dom1";
 def userPl="userC1C2Dom1";
 def passwordPl="DomibusEdel-12345";
 def userRole="ROLE_USER";
 def originalUser="urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1";
Domibus.addPluginUser(side,context,log,domainValue,userRole,userPl,passwordPl,originalUser);</script></con:config></con:testStep><con:testStep type="groovy" name="Remove admin console user" id="9857d9f3-0e6f-46ac-baab-c8c8a63ad429"><con:settings/><con:config><script>// Remove admin console user
/*
 * removeAdminConsoleUser(side,context,log,domainValue,userAC,authUser,authPwd)
 * side: to select Domibus corner. Set to "Blue", "C2" or "sender" to select corner 2. Set to "Red", "C3" or "receiver" to select corner 3
 * context: context
 * log: log
 * domainValue: to select the domain by its name (default value is "Default")
 * userAC: username to remove
 * authUser: user for domibus authentication to be able to remove userAC (default value is null)
 * authPwd: password for domibus authentication to be able to remove userAC (default value is null)
 */
 def side="Blue";
 def domainValue="Default";
 def userAC="adminC2";
Domibus.removeAdminConsoleUser(side,context,log,domainValue,userAC);</script></con:config></con:testStep><con:testStep type="groovy" name="Remove plugin user" id="3c14eb86-cbd9-4e24-9dba-fd03bcf13064"><con:settings/><con:config><script>// Remove plugin user
/*
 * removePluginUser(side,context,log,domainValue,userPl,authUser,authPwd)
 * side: to select Domibus corner. Set to "Blue", "C2" or "sender" to select corner 2. Set to "Red", "C3" or "receiver" to select corner 3
 * context: context
 * log: log
 * domainValue: to select the domain by its name (default value is "Default")
 * userRole: to select the user role (default value "ROLE_ADMIN")
 * userPl: username to remove
 * passwordPl: password for userPl (default value is "DomibusEdel-12345")
 * originalUser: to select C1 or C4 (default value is "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
 * authUser: user for domibus authentication to be able to remove userAC (default value is null)
 * authPwd: password for domibus authentication to be able to remove userAC (default value is null)
 */
 def side="Blue";
 def domainValue="Default";
 def userPl="adminC2";
 def passwordPl="DomibusEdel-12345";
 def userRole="ROLE_ADMIN";
 def originalUser="urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1";
Domibus.removePluginUser(side,context,log,domainValue,userPl);</script></con:config></con:testStep><con:testStep type="groovy" name="workspace" id="5054a0db-d820-4352-9d20-7c3c90a3ecd3"><con:settings/><con:config><script>//Domibus.addAdminConsoleUser("BLUE",context,log,"Default","ROLE_USER","userTest3","DomibusEdel-12345");
//Domibus.someFunc("BLUE",context,log,"Default","ROLE_USER","userTest1","DomibusEdel-12345");
//import groovy.json.JsonSlurper
//import groovy.json.JsonOutput
//def userAC="toto"; def passwordAC= "titi"; def userRole="ROLE_ADMIN";
//def jsonSlurper = new JsonSlurper()



//Domibus.addAdminConsoleUser("BLUE",context,log,"Default","ROLE_USER","userTest301","DomibusEdel-12345");
//Domibus.addPluginUser("blue",context,log,"domibus_C2Dom1","ROLE_ADMIN", "adminTestSp","DomibusEdel-12345","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.removePluginUser("blue",context,log,"Default", "toto");
//def usersMap=jsonSlurper.parseText(Domibus.getPluginUsers("blue",context,log));
//log.info usersMap
//log.info Domibus.userExists(usersMap,"userresponse01",true)
//log.info Domibus.getDomain("blue",context,log)
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2c951d55-9253-4042-8a65-c1e7524fbbfd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add or change Teardown script" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddToTearDown" id="829d27b4-c5b8-460c-a726-0cfd5a19ba9e"><con:settings/><con:config><script>def lineToAdd = "ExcelReporting.reportTestCase(testRunner, log)"
log.info "START: Amendment tear down sciprts"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	testSuite.getTestCaseList().each { testCase ->
 		def td = testCase.getTearDownScript()
  		if (td == null)
  		{
  			testCase.setTearDownScript(lineToAdd)
  		}
  		else if(!td.contains("ExcelReporting.reportTestCase")) {
  			def newTearDown = td + System.getProperty("line.separator") + lineToAdd
  			testCase.setTearDownScript(newTearDown)
  		}
 	}
 }
log.info "END: Amendment tear down sciprts"
</script></con:config></con:testStep><con:testStep type="groovy" name="ReplaceTearDownLine" id="100dfd9e-81f3-47de-ace0-d1cc48497c8d"><con:settings/><con:config><script>def newLine = System.getProperty("line.separator")
/*testRunner.testCase.testSuite.project.getTestSuiteList().each{
	testsuite -> log.info testsuite.name
}*/
//def oldLineToBeChanged = /(?m)\/*\ExcelReporting.reportTestCase/
//def newLineToBeChanged = "ExcelReporting.reportTestCase"

def newLineToBeChanged = "//ExcelReporting.reportTestCase"
def oldLineToBeChanged = /(?m)(^|[^\/]+)ExcelReporting.reportTestCase/


log.info "START: Amend tear down scripts"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	testSuite.getTestCaseList().each { testCase ->
 		def tdScript = testCase.getTearDownScript()
 		log.info tdScript;
  		if (tdScript != null) {
  			testCase.setTearDownScript( tdScript.replaceAll(oldLineToBeChanged, newLineToBeChanged) )
  		}
 	}
 }

 log.info "end"</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="12ba0736-f0ec-440d-9f24-8ad8034a4eb8"><con:settings/><con:config><script>def newLine = System.getProperty("line.separator")
def oldLineToBeChanged = /(?m)\/*ExcelReporting.reportTestCase/

def newLineToBeChanged = "AxcelReporting.reportTestCase"

def tdScript="""
//ExcelReporting.reportTestCase(testRunner, log)
ss
//ExcelReporting.reportTestCase(testRunner, log)
  //ExcelReporting.reportTestCase(testRunner, log)
"""
log.info tdScript.trim().replaceAll(oldLineToBeChanged, newLineToBeChanged)</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Hash Participant" searchProperties="true" id="d33be978-614a-48b5-bf31-341dbb886c15">
            <con:settings/>












            <con:testStep type="groovy" name="Hash" id="b622a97d-a254-4c68-b58e-fb9ca0d668e5"><con:settings/><con:config><script>def test = new BDMSL(log,null,context);
def CNAMEhash=test.encodeHash("0088:579800000778","MD5",false);
def NAPTRhash=test.encodeHash("0088:579800000778","SHA256",true);
log.info "CNAMEhash:"+CNAMEhash;
log.info "NAPTRhash:"+NAPTRhash;
test.finalize();</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="41736836-2b1a-4d8c-8077-807684023d81" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Properties handling" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Sample  domibus.property change" id="e81788b6-ea8a-4a0d-84f3-687ebe6af345"><con:settings/><con:config><script>def newValueToAssignOne="test1s23"
def propertyToChangeNameOne = "domibus.security.keystore.password"
def propValueDict = ["${propertyToChangeNameOne}" : newValueToAssignOne, 'domibus.database.port':'13306', 'domibus.deployment.clustered' : 'true']

Domibus.changeDomibusProperties("RED", propValueDict,  log, context, testRunner)
//Domibus.restoreDomibusPropertiesFromBackup("RED",  log, context, testRunner)

</script></con:config></con:testStep><con:testStep type="groovy" name="Sample  restore domibus.property" id="9238452b-3138-4853-bf96-1a730a0c5f90"><con:settings/><con:config><script>Domibus.restoreDomibusPropertiesFromBackup("RED",  log, context, testRunner)

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d4951981-87e8-4a0f-a61a-f8b873d19625" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Third gateway property" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set true" id="a8782f9e-b280-4123-91f0-351ca080772c"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");
log.info "thirdGateway custom property set to true."</script></con:config></con:testStep><con:testStep type="groovy" name="Set false" id="b9018206-92ca-43c4-9fc4-a37368af106d"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");
log.info "thirdGateway custom property set to false."</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dc9ba13a-ec6b-4606-b912-7115ff3dec74" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Cloud 3 gateways configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set custom properties" id="c10c8997-acc2-40c7-81f9-435976e01652"><con:settings/><con:config><script>// blue: weblogic (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest4.westeurope.cloudapp.azure.com:7005/domibus-weblogic");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "oracle");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "oracle.jdbc.OracleDriver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:oracle:thin:@localhost:41521/xe");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "domtstuser");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "domtstuser");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "domtestusr");

// green: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("greenUrl", "http://edeltest4.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:43306/domtestusr_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "domtestusr");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "domtestusr");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");
log.info "thirdGateway custom property set to true."

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes Blue-Red-Green" id="6f42cc71-7cec-4560-95cd-f3729c8e8dc5"><con:settings/><con:config><script>// Upload PModes: blue for sender, red for receiver and green for the third Domibus.
PModeUtils.uploadPmode("sender","special","\\CloudThreegateways\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","special","\\CloudThreegateways\\red\\domibus-pmode-red.xml",context,log);
PModeUtils.uploadPmode("receivergreen","special","\\CloudThreegateways\\green\\domibus-pmode-green.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload truststores Blue-Red-Green" id="00399fd9-8e42-4234-b454-8369810f82ba"><con:settings/><con:config><script>// Upload truststores: blue for sender, red for receiver and green for the third Domibus.
TruststoreUtils.uploadTruststore("sender","special","\\CloudThreegateways\\blue\\gateway_truststore.jks",context,log);
TruststoreUtils.uploadTruststore("receiver","special","\\CloudThreegateways\\red\\gateway_truststore.jks",context,log);
TruststoreUtils.uploadTruststore("receivergreen","special","\\CloudThreegateways\\green\\gateway_truststore.jks",context,log);
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS Blue-Red-Green" id="f8226f4b-3ed8-4d7a-a87e-1737cd50c557"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","backendWebservice",context,log);
Domibus.setMessageFilters("receiver","backendWebservice",context,log);
Domibus.setMessageFilters("receivergreen","backendWebservice",context,log);
</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d861779-0a64-417b-b81f-dbaed89dc796</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42781f68-9908-4231-93af-c83bd2d27190</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f10dbea4-cf15-49a7-93b9-ab0ef7752097</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="29077ece-8efa-4b56-a882-06dcf8971e0b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Cloud 3 gateways configuration-bugfix" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set custom properties" id="9491c0b9-e9c7-4ed2-98a5-9157467316fa"><con:settings/><con:config><script>// blue: weblogic (edeltest4)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest4.westeurope.cloudapp.azure.com:7005/domibus-weblogic");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "oracle");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "oracle.jdbc.OracleDriver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:oracle:thin:@localhost:41521/xe");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "edelivery_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "edelivery_bugfix");

// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "domtestusr_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "domtestusr_bugfix");

// green: tomcat (edeltest4)
testRunner.testCase.testSuite.project.setPropertyValue("greenUrl", "http://edeltest4.westeurope.cloudapp.azure.com:9080/domibus");
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql");
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver");
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:43306/domtestusr_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "domtestusr_bugfix");
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "domtestusr_bugfix");

testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");
log.info "thirdGateway custom property set to true."

log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes Blue-Red-Green" id="25382160-55c6-4f0b-b434-2d841e22ff04"><con:settings/><con:config><script>// Upload PModes: blue for sender, red for receiver and green for the third Domibus.
PModeUtils.uploadPmode("sender","special","\\CloudThreegateways\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","special","\\CloudThreegateways\\red\\domibus-pmode-red.xml",context,log);
PModeUtils.uploadPmode("receivergreen","special","\\CloudThreegateways\\green\\domibus-pmode-green.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload truststores Blue-Red-Green" id="d51164bc-2bc5-43f9-91f1-a441b7c909b7"><con:settings/><con:config><script>// Upload truststores: blue for sender, red for receiver and green for the third Domibus.
TruststoreUtils.uploadTruststore("sender","special","\\CloudThreegateways\\blue\\gateway_truststore.jks",context,log);
TruststoreUtils.uploadTruststore("receiver","special","\\CloudThreegateways\\red\\gateway_truststore.jks",context,log);
TruststoreUtils.uploadTruststore("receivergreen","special","\\CloudThreegateways\\green\\gateway_truststore.jks",context,log);
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS Blue-Red-Green" id="5afc46f7-9b85-41d9-a9cf-3ab31ea50cb1"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","backendWebservice",context,log);
Domibus.setMessageFilters("receiver","backendWebservice",context,log);
Domibus.setMessageFilters("receivergreen","backendWebservice",context,log);
</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d861779-0a64-417b-b81f-dbaed89dc796</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42781f68-9908-4231-93af-c83bd2d27190</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f10dbea4-cf15-49a7-93b9-ab0ef7752097</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="0ee1674e-2e10-48a1-8416-1a9e6c59ef96" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update plugin security option" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Enable Security-no domain-C2" id="ef011ca8-cdbb-408c-95a2-64857210f0b3"><con:settings/><con:config><script>def newValueToAssign="false";
def propertyToChangeName = "domibus.auth.unsecureLoginAllowed";
def propValueDict = ["${propertyToChangeName}" : newValueToAssign];

Domibus.changeDomibusProperties("BLUE", propValueDict,  log, context, testRunner);
</script></con:config></con:testStep><con:testStep type="groovy" name="Enable Security-no domain-C3" id="821f9f3f-cfe3-433d-8501-340d16806996"><con:settings/><con:config><script>def newValueToAssign="false";
def propertyToChangeName = "domibus.auth.unsecureLoginAllowed";
def propValueDict = ["${propertyToChangeName}" : newValueToAssign];

Domibus.changeDomibusProperties("RED", propValueDict,  log, context, testRunner);
</script></con:config></con:testStep><con:testStep type="groovy" name="Disable Security-no domain-C2" id="43c04011-c2d8-4f84-8f1f-efe70b4f6c91"><con:settings/><con:config><script>def newValueToAssign="true";
def propertyToChangeName = "domibus.auth.unsecureLoginAllowed";
def propValueDict = ["${propertyToChangeName}" : newValueToAssign];

Domibus.changeDomibusProperties("BLUE", propValueDict,  log, context, testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Disable Security-no domain-C3" id="01692ee3-946b-4e38-835b-d1f19d38623c"><con:settings/><con:config><script>def newValueToAssign="true";
def propertyToChangeName = "domibus.auth.unsecureLoginAllowed";
def propValueDict = ["${propertyToChangeName}" : newValueToAssign];

Domibus.changeDomibusProperties("RED", propValueDict,  log, context, testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Restore Default-no domain-C2" id="a4fcc0a8-3c9c-4782-b53e-89d61c18657a"><con:settings/><con:config><script>Domibus.restoreDomibusPropertiesFromBackup("BLUE",  log, context, testRunner);

</script></con:config></con:testStep><con:testStep type="groovy" name="Restore Default-no domain-C3" id="a20f9058-f847-4715-974c-281c720fe3ba"><con:settings/><con:config><script>Domibus.restoreDomibusPropertiesFromBackup("RED",  log, context, testRunner);

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="85674ef4-40b0-4024-a8bd-dd54cfc441e0"><con:settings/><con:config><script>Domibus.stopSetMSHs(1,0,0,context, log);</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5202e73f-2164-4969-aa8e-760705c61442" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Liste test cases names" searchProperties="true"><con:settings/><con:testStep type="groovy" name="List all test cases" id="c84167a6-32cf-4814-813e-7fd65386d3dc"><con:settings/><con:config><script> log.info "BEGIN PROJECT"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	log.info "==== BEGIN "+testSuite.getName()+" ===="
	testSuite.getTestCaseList().each { testCase ->
 		def testCaseName = testCase.getName()
 		log.info testCaseName;
 	}
 	log.info "==== END "+testSuite.getName()+" ===="
 }
 log.info "END PROJECT"</script></con:config></con:testStep><con:testStep type="groovy" name="ListTestCaseWithTestSteps" id="d0e3fac9-4af9-4175-acca-69452ee39384"><con:settings/><con:config><script> //log.info "BEGIN PROJECT"
 def del = ";"
 def innerDel = "|"

def epic = "EDELIVERY-3373"
def securityLevel	= "10001"
def priority = "High"
def label = "SoapUI"
def result = "Step executed without issues."
def component = "Access Point - AS4 Gateway - Domibus"


testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	if (testSuite.isDisabled() )
		return
	//log.info "==== BEGIN "+testSuite.getName()+" ===="
	testSuite.getTestCaseList().each { testCase ->
		def testCaseName = testCase.getName()
		testCase.getTestStepList().each {testStep ->
		def step = testStep.getName()
		def testData = ""
		if (testStep instanceof com.eviware.soapui.impl.wsdl.teststeps.WsdlGroovyScriptTestStep) {
		  step = "Running the groovy script: " + step
		} else if (testStep instanceof com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep) {
		  def to = testStep.getPropertyValue("Endpoint")
		  def u = testStep.getPropertyValue("Username")
		  def p = testStep.getPropertyValue("Password")


		  step = "Send SOAP request: |${step}| to following endpoint: |${to}| and check existing assertion."
		  testData = "If needed following test date can be used. Username: |${u}|  password: |${p}|"
		} else if (testStep instanceof com.eviware.soapui.impl.wsdl.teststeps.WsdlDelayTestStep)	 {
			step = "Wait a certain time before continuing (in milliseconds):"  + testStep.getDelay()
		} else {
	     	log.error  "Unknown test step class" + testStep.getClass()  +  testCaseName +"/" +step
		}

		log.info del + testCaseName + del + step + del + testData+ del + result + del + component + del + label + del + epic + del + securityLevel + del + priority

		}
  	}
 	//log.info "==== END "+testSuite.getName()+" ===="
 }
 //log.info "END PROJECT"</script></con:config></con:testStep><con:testStep type="groovy" name="Save to a file" id="3f35e4dd-5d89-4b75-b016-2c32ae7579f5"><con:settings/><con:config><script><![CDATA[def path="C:\\domibus\\listTestCases.txt";
def file = new File(path);

 log.info "BEGIN PROJECT"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	log.info "==== BEGIN "+testSuite.getName()+" ===="
	file<<"==== BEGIN "+testSuite.getName()+" ===="+System.properties.'line.separator'
	testSuite.getTestCaseList().each { testCase ->
 		def testCaseName = testCase.getName()
 		log.info testCaseName;
 		file<<testCaseName+System.properties.'line.separator'
 	}
 	log.info "==== END "+testSuite.getName()+" ===="
 	file<<"==== END "+testSuite.getName()+" ===="+System.properties.'line.separator'
 }
 log.info "END PROJECT"]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ebdf6b02-1379-4d01-932f-1efc38d376e8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update authentications details" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Add default authentication to all test steps in test suite" id="a530136f-2fea-49fa-a412-c0837dd8bbe0" disabled="true"><con:settings/><con:config><script>//IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
//// filterForTestSuite = /WS-Auto-Not-for-Bamboo/   // for multiple test suite use more advanced regexp like for example:  /PASSING_AUTO_BAMBOO|PASSING_NOT_FOR_BAMBOO/
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep

def filterForTestSuite = "WS-Auto-for-Bamboo" //  //"ToBeAdded" "WS-Auto-for-Bamboo"

	log.info("START: modyfication of test requests")
	context.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
		if (testSuite.getLabel() =~ filterForTestSuite) {
		log.info("test suite: " + testSuite.getLabel())
			testSuite.getTestCaseList().each { testCase ->
					log.info("test label:" + testCase.getLabel())
					testCase.getTestStepList().each {testStep ->
		      				if (testStep instanceof WsdlTestRequestStep) {
		      				log.info("Ammending test step: " +  testStep.name)
							def h = testStep.getHttpRequest()
							def endpoint = testStep.getPropertyValue("Endpoint")

							def userValue = null
							if ( endpoint =~ /remoteUrl/) {
								userValue = '${#Project#adminC4Default}'
							}
							else
							if  ( endpoint =~ /localUrl/) {
								userValue = '${#Project#adminC1Default}'
								}
							else
								log.warn "Endpoint is not refering to remoteUrl neither localUrl property - need manual setup."

							log.info h.getUsername()
							log.info h.getPassword()

							h.setSelectedAuthProfileAndAuthType(null, com.eviware.soapui.config.CredentialsConfig.AuthType.Enum.forString("No Authorization"))

							h.removeBasicAuthenticationProfile("Basic")
							//h.setSelectedAuthProfileAndAuthType(null, com.eviware.soapui.config.CredentialsConfig.AuthType.Enum.forString("No Authorization"))

							//h.setAuthType("No Authorization")
							//h.setAuthType(com.eviware.soapui.config.CredentialsConfig.AuthType.NO_AUTHORIZATION)
							//testStep.getTestRequest().setSelectedAuthProfileAndAuthType(AbstractHttpRequest.BASIC_AUTH_PROFILE,CredentialsConfig.AuthType.PREEMPTIVE)

							//h.setSelectedAuthProfileAndAuthType("Basic", com.eviware.soapui.config.CredentialsConfig.AuthType.Enum.forString("Preemptive"))
							// h.setUsername(userValue)
							//h.setPassword('${#Project#adminDefaultPassword}')

						}
	 			}
			}
		}
	 }
	log.info("END: Modification of requests hedears finished")



/*

//import com.eviware.soapui.config.CredentialsConfig.AuthType.Enum
	def h = context.getTestCase().getTestStepByName("tmp").getHttpRequest()
	def endpoint = context.getTestCase().getTestStepByName("tmp").getPropertyValue("Endpoint")

	def userValue = null
	if ( endpoint =~ /remoteUrl/) {
		log.info "Remote"
		userValue = '${#Project#adminC4Default}'
	}
	else
	     if  ( endpoint =~ /localUrl/) {
	     	log.info "Local"
	     	userValue = '${#Project#adminC1Default}'
	     }
	     else
	     	log.warn "Something different need manual settings"

	h.removeBasicAuthenticationProfile("Basic")
	log.info h.getSelectedAuthProfile()
		log.info h.getAuthType()
		log.info h.getBasicAuthenticationProfiles()

		h.setSelectedAuthProfileAndAuthType("Basic", com.eviware.soapui.config.CredentialsConfig.AuthType.Enum.forString("Preemptive"))
		h.setUsername(userValue)
		h.setPassword('${#Project#adminDefaultPassword}')



//def p =  Enum.forString("Preemptive") //INT_GLOBAL_HTTP_SETTINGS") //INT_PREEMPTIVE")
//log.info p.getClass()
//log.info p
// def e = Enum.INT_GLOBAL_HTTP_SETTINGS
// log.info e
//
// log.info Enum.forInt(2)
//h.removeBasicAuthenticationProfile("Basic")
	log.info h.getSelectedAuthProfile()
		log.info h.getAuthType()
		log.info h.getBasicAuthType("Basic")
		log.info h.getBasicAuthenticationProfiles()
		log.info h.getUsername()
		log.info h.getPassword()

// public void setSelectedAuthProfileAndAuthType(String authProfile, CredentialsConfig.AuthType.Enum authType)
// addBasicAuthenticationProfile
// setPassword, setUsername
*/</script></con:config></con:testStep><con:testStep type="groovy" name="List not disabled requests" id="3e2728eb-6a57-4b71-a0a6-a364640f7b86" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.getTestCaseList().findAll{ ! it.isDisabled() }.each { testCase ->
                       log.info ("test label:" + testCase.getLabel())
                         testCase.getTestStepList().findAll{ ! it.isDisabled() }.each { testStep ->
                            if (testStep instanceof com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep) {
                                log.info("              The test step: " + testStep.name)
                             }
                    }
               }</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Domibus methods Add or remove authentication details" id="03a0bf37-b162-435e-a351-18e3cfd3c8c1"><con:settings/><con:config><script>def filterForTestSuite = "ToBeAdded" //  "WS-Auto-for-Bamboo" //"ToBeAdded"
Domibus.enableAuthenticationForTestSuite(filterForTestSuite, context, log, "Basic", com.eviware.soapui.config.CredentialsConfig.AuthType.Enum.forString("Preemptive"), /remoteUrl/)
//Domibus.disableAuthenticationForTestSuite(filterForTestSuite, context, log) //"Basic", com.eviware.soapui.config.CredentialsConfig.AuthType.Enum.forString("No Authorization")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1ff0ce5-6cea-4ea5-b910-906db1c01548" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Add plugin user" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="Authentication" id="9614f763-1712-4cfc-91f6-2ddf3d4b1f53"><con:settings/><con:config service="http://${localUrl}" resourcePath="/rest/security/authentication" methodName="Authentication 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Authentication" id="c0cd0de1-98d1-4b07-89a7-4495c89e24cc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>{"username":"super","password":"123456"}</con:request><con:originalUri>http://localhost/domibus/domibus/rest/security/authentication</con:originalUri><con:assertion type="GroovyScriptAssertion" id="98a7e031-2cfa-45d7-90f6-6962151520cb" name="Script Assertion"><con:configuration><scriptText>/**
 * This is the Script Assertion
 * which sets headers to the requested  targeted steps
 * by extracting header from current step response
 **/
//Assert if response has headers
assert messageExchange.responseHeaders, "Response does not have any headers"

 //Specify all the headers to retrieve from current test step response as keys, target step request headers as values
 //key - current response header name
 //value - target request header name
 //Add more key, values into map if you need to extract and set more headers
def headerMap = ['Set-Cookie' : 'Cookie']
//Specify the test  step name for which headers to be set. Change step name as needed.
//Add call to setHttpHeaders with different test step names as needed to apply for more steps
setHttpHeaders('UserDomainRequest', headerMap)


/**
  * method sets headers to targeted step
  * step is the step name for which headers to be set
  * header map consists key, header name in the current step and value, header name to appear in the
  * targeted step
  *
  **/
def setHttpHeaders(def step, def headerMap) {
    def nextRequest = context.testCase.testSteps[step]?.httpRequest
    def existingHeaders = nextRequest?.requestHeaders
    headerMap.each {
        existingHeaders[it.value] = getHttpHeaderValue(it.key)
    }
    nextRequest?.requestHeaders = existingHeaders
}

/**
 * method to retrieve the value of the specified header
 **/
def getHttpHeaderValue(def headerToLookup) {
    if (messageExchange.responseHeaders.containsKey(headerToLookup)) {
        log.info "Found ${headerToLookup} in the response headers"
        return messageExchange.responseHeaders[headerToLookup]
    } else {
        log.warn "${headerToLookup} is not found in the response headers"
    }
    null
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 2" id="569fd924-71d5-488d-b496-98e2a569c260"><con:settings/><con:config><script>// This is the Script Assertion for extracted header check current step response
//log.info testRunner.testCase.getTestStepByName("Authentication 1").httpRequest.getResponse().getRequestHeaders()


  /* method sets headers to targeted step
  * step is the step name for which headers to be set
  **/
def setHttpHeaders(authTestStepName, addAuthToStep) {
    def nextRequest = context.testCase.testSteps[addAuthToStep]?.httpRequest
    def existingHeaders = nextRequest?.requestHeaders
    existingHeaders['Cookie'] = getHttpHeaderValue(authTestStepName, 'Set-Cookie')

	def xsrfTokenSting = getHttpHeaderValue(authTestStepName, 'Set-Cookie').find{"XSRF-TOKEN.*;"}
     def matches = ( xsrfTokenSting  =~ /XSRF-TOKEN=(.+);.+/ )
     if (matches.find()) {
        	log.info "XSRF-TOKEN value found. Creating X-XSRF-TOKEN header entry"
        	existingHeaders["X-XSRF-TOKEN"] = [ matches.group(1) ]
       }
    nextRequest?.requestHeaders = existingHeaders
}

// method to retrieve the value of the specified header
def getHttpHeaderValue(authTestStepName, headerToLookup) {
	def authenticationResponse = testRunner.testCase.getTestStepByName(authTestStepName).httpRequest.getResponse()
    if (authenticationResponse.responseHeaders.containsKey(headerToLookup)) {
        log.info "Found ${headerToLookup} in the response headers"
        return authenticationResponse.responseHeaders[headerToLookup]
    } else {
        log.warn "${headerToLookup} is not found in the response headers"
    }
    null
}

//Assert if response has headers
assert testRunner.testCase.getTestStepByName("Authentication").httpRequest.getResponse().getRequestHeaders(), "Response does not have any headers"

setHttpHeaders('Authentication', 'UserDomainRequest 2')
setHttpHeaders('Authentication', 'uploadPmode')
setHttpHeaders('Authentication', 'uploadPmode - default blue')
setHttpHeaders('Authentication', 'addPluginUserRequest')

log.info "END"


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserDomainRequest" id="a99bc35c-4d4a-4040-a2ef-9675b4f9b1a9"><con:settings/><con:config service="http://${localUrl}" resourcePath="/rest/security/user/domain" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserDomainRequest" id="44cd08af-c459-40d4-9a2d-ca310c316ad1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Cookie" value="XSRF-TOKEN=6a53f207-3871-48e8-97ed-0489991133bc; Path=/domibus"/>
  <con:entry key="Cookie" value="JSESSIONID=EEDDA2F3A12B3288681DFA0C33DB055D; Path=/domibus; HttpOnly"/>
  <con:entry key="X-XSRF-TOKEN" value="8c1bbe64-5764-45c7-8fd8-af04a99ac613"/>
  <con:entry key="Content-Type" value="application/json"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request/><con:originalUri>http://localhost/domibus/rest/security/user/domain</con:originalUri><con:credentials><con:username>super</con:username><con:password>DomibusEdel-12345</con:password><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="UserDomainRequest 2" id="06548bd8-9e42-4bce-b273-de947d768cfe"><con:settings/><con:config service="http://${localUrl}" methodName="Method 1" resourcePath="/rest/security/user/domain" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserDomainRequest 2" id="f9881054-65f7-46c4-8aad-6e1134de9021" mediaType="application/json"><con:settings><con:setting id="RecordRequestRepresentations">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="XSRF-TOKEN=6a53f207-3871-48e8-97ed-0489991133bc; Path=/domibus"/>
  &lt;con:entry key="Cookie" value="JSESSIONID=EEDDA2F3A12B3288681DFA0C33DB055D; Path=/domibus; HttpOnly"/>
  &lt;con:entry key="X-XSRF-TOKEN" value="6a53f207-3871-48e8-97ed-0489991133bc"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}</con:endpoint><con:request/><con:originalUri>http://localhost/domibus/rest/security/user/domain</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Check OS type Windows Linux" id="f7f981de-0319-4c39-b1d5-e127bbb8d953"><con:settings/><con:config><script>/*import org.apache.commons.lang.SystemUtils


log.info SystemUtils.IS_OS_LINUX
log.info SystemUtils.IS_OS_WINDOWS
*/
log.info System.properties['os.name']

if (System.properties['os.name'].toLowerCase().contains('windows'))
log.warn "Windows"</script></con:config></con:testStep><con:testStep type="restrequest" name="uploadPmode" id="e2c74b59-7ab3-4f4d-8283-fa331ab0137b"><con:settings/><con:config service="http://${localUrl}" resourcePath="/rest/pmode" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="uploadPmode" id="9fe84fe6-27d8-4034-af2b-0567c46ed541" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="XSRF-TOKEN=6a53f207-3871-48e8-97ed-0489991133bc; Path=/domibus"/>
  &lt;con:entry key="Cookie" value="JSESSIONID=EEDDA2F3A12B3288681DFA0C33DB055D; Path=/domibus; HttpOnly"/>
  &lt;con:entry key="X-XSRF-TOKEN" value="6a53f207-3871-48e8-97ed-0489991133bc"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request/><con:originalUri>http://localhost/domibus/rest/pmode</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>domibus-pmode-blue.xml</con:name><con:contentType>text/xml</con:contentType><con:size>29306</con:size><con:contentId>domibus-pmode-blue.xml</con:contentId><con:data>UEsDBBQACAgIABVtzk4AAAAAAAAAAAAAAAAWAAAAZG9taWJ1cy1wbW9kZS1ibHVlLnhtbO1dW3ebuBZ+nv4Kjt9tEMbXIZ2Vk7RrMnPSesXp6WMXBsVhldtwSZrz648EAgQIyTh2k8bkoeEi7a397U9Ce0tK9T9+uI70AMPI9r2zARgpAwl6pm/Z3vZs8OX243A++OP9O93aLE3fu7O3SWjEqKiEqnnR0tqcDe7jOFjKsuW79iaJRjCRKyUHUmCE8dPZYOMk8Nv2cfD+3W+6G5gR+p1eSJ7hwrOBBe+MxImvA3Mg/ZMYjn1nQ+tT+qrQYEYj34jsaOgH0Bv54VaGG9SQoRvhKzeSH8YjRfYi1IIQyqqizBRNzgWvLrBpxsaB1tkgDhM4kMir/DaEMfRwm79Z/qPn+IaFiyr0i8SjX00VZSC32vF1fTRLsOgD2zLOjPmt3ZpL3wXK4og2XX6+ThXsY9mUY5nYLHV8ZLOwgn3MAmq7XUDDhqGfNtv+uj4eA1PZ+1ikiSlYM2gT2tHhh4VU6hHGBJUzInz24NEcksrei2J7D3C3j/7RzEll72XOZG9z7kN4PP8Q6T/1C/TRT8KjGZQJ38cezpgmsMd+OJ6DMuH72LM349bwAXpHM4hIP1Yn0mUyi9PRtM/2YBStQt9Ev2A2tQt9J7vKLqvGX3l2bBuxH96gVwPpwUCTw+dabucyM8RZam9gFPieBQ+pNsxltqutWPvBDeKnQre0Y2OZtXS5AFnHs2w7Bzydcl9Zt08BeVJ5RNSkT/D9l9ArJCeht0wxWOJC0TI2l3CDzV2mxW1rGKMay8QL4daOYhhCi1jAVVFtfm6z3GhnJoPURrJxwIAYbAW+7cWFp4CijbTpaKKOVACWc2Wu5OGHHMHwwUYslN3ofiAZjuM/Xtwn3vc0nrkznAgOSGttC9MbdbtQIs1AyGdShtgqiWpcDaxK85vtziOdloYrI6DNRmA+PUbLse5nNP3x3o5frO2p8mfhbpjfX4gxqe5ntH2LZgceu+2ObxrOvR/Fx2h3qrdTu7NLMtToLgxIz0VXxBbfg4/G04GGVyTsKxIm15XEj/7hlCBhlJKN7eH8Rz6GJRjfg6hJRbUocZyDKUGiWi0596zVYQ0aGp41LC1D0wJCCT0IkSz6q5Td55T3Q3tre4azhvgjtyIvB9J3+FR/iaYtRmzEKTujOEQm4fnJP4kdFhMbmanjDsu4gaYd2KgP1HRUX+6tA99+teN7P4lxp6kpqb3la8m6LV8NR8eeCtYwJjqg6Vvwx6p8ng8hedEbeCfl163oytxKLW7nV2rDeLdajCpoFCutJMNaha5odH7CU15U7852yulJ+jD/4JCJ74Xv4bnyKns5kEwbQY3+WaIZVGRsYYNIkmu7MBtsY/gjllFHK5zC03Aex4Z576ZsLZQY1MO6pylFRhA4tpnmZOXAuqvpI2YStddZu8lDJMX4sbb/h15oynyhaVMt50Wpmw+JvGN5ysDyw0M3MP8CNXyjR9BMQrscbch93n3gJXRQhBc+na+1lY+QQJ0nSH+z3o2wR6TI3npGnITwGiLqIVBv1uff1n+eq5Np3ryaFs9f29tP/gfPLKVb/ic/vkcd8XmicY3PnkM1O3+yr8Sm2d/+vb7lwYLfH1Db1Zqr7Gp9WMu+rf6+WonMSwvtqFeXq6TTYRj64Z/og+ggdxMeVp4VEZ7rf6Cfo2kfvj2PsqAvgvlAkfePtDTikX33hFhvJSYMiz7OKIO6U5S4VBmL2PrRsB1kEVsSAfNfw6F0zGa3FilbnecquI0m32RpOMyc0URfN/D8Fg8nxBnFPbGouK8FqFL2Ac0Raa12mbhuWS29O9+GefXLL9dYgkT9tIsChZhzQOvfrbZa1la71x6Xtcfda3/0w0vf/et6rahKIYj59r9GGp4WCvDiRWcdY66OcUVHiNjgu2SdJFtYkKuc0PM4Kh9I0rs8yIBRvM6elO7ZWD+Wnh9kya5cUWyCcixqEaGKRKhCEWORiLFQhCYSoQlFTEQiJkIRM5GImVCEIpShzAjHuHLmIjHznD98OQuRnEXBQ5EooAjZplDCxPLE7AXlYiJPkJDDQExiIGQxENMYCHkMxEQGQiYDMZXBVChkKhYiJDOYkXVsnhQhl8Fc3BQhkcFCPNYJGawqYiFC2qo7jLriYVdtHSZM3/OgGdsPaG5J3tRTJ9AcwQSFjgbe+gKH+ZylzM/RMoaFkEw5zIsXLdCLitkExsQBWz57SW9yE01wbmY7bEiDbi/Af+C2QKRWWm2UVjmlx43SY05prVFa45SeNEpPOKVnjdIzTmmlWVzJy+curlWZN2rMywotdRaNOotKnZZqQGm6TNmpIsPXoFaRWa/pdcBzO2j6HfAcD5qeBzzXg6bvAc/5YNosP+WVb7of8OgCms4Hc175puPBgtfpmg5XFV75pp9Vbqdm9Op2/0bJxrXj6zwpRapUn5bjEDX06EakkWVKaMIAPz9/NEKI47disa7+Il1CDp/wJqbftd8vPn9a355/ukVRXZIlolD8HcNURzW9GqIh0djYThnOowD9pnw4kDzfu4FBYtkGVRtpC5ynlRHHMPRwe7KItF2q53OFksCZJxVhlOGiO3B7Qe96JAN2/TGViL9FXyjTiCCgxnEy8tfjDiMHqSxZ7iGo7pykrGzClidJ2MmwpgPZTqXypqyEsVTNzTVziZUonZlTMH03CPF+gkxSVKXHDpiqAkxVGlO1E6Y10pSQ0pm/1wxlJdOzA5ZjAZZjGsvxgfhZ5jpfM5QdWakJkNRoJLW+p++C6USA6YTGdMLCtNhd2gOKAZ1RE24WoDMa0FlP0l0wVWZ0XMJCVanAqvS47oTrnIrdWKjOaVDnfEzT/ew9rBjWBRXesmBd0LAuelh3negrdPzPnOorlbm+0kO7K7SAzpAwoa2GUYI4qjzr1OOb4qvSmSQmvpWQCghiqvLQ1Wnje0FlhjHWFLbMxHOOcC2P0weuJaiOU5B2TKczmaStxK5AELymB6xOma8UtBqd+WVCWwlmgSCaTQ979dCm0E7oJDkT2kpMC5hBbeNQWw9uCu6UXlFggjutgDvlg5sdgTu9nBaF6Ixec2EiWgltgSC0zQ7hnfiHa06vSzExrUS2QBDaknOApzwEUFPZBb2IxwS3Et8CQYD7tsHtuligKvSSJ3PppRLjqoIY9/Wg+1PQA/QCMBO9ShirCsJYFno/dTT9KaCp9Co4E7Tqcp8gNn1DlJOZq9I62f9U7mlY5Ruiip2xzY3RLgzKg33kWFl+Ns6mjze3HfEO6dPMLQeys2YX4lbUkeba4/pRW5lXiJwj5pYpzo7m2DFboRdWVNtWedw4SyvzStUtYBaqWKDLzFbgzpK3B13ytxpQDImK00+YBEyGqD1DToMh6r4MGfcMOQ2GjPdliMZlCDlH0zPk12eIti9DJm99DCn+xsPhvL+TXxt69/TsZF/Pzt66Z/u+39g91I0hSk+RE6FIZTNUO0myPeh1msy5LKmeQ30zZPlp34nDOJjaldXVvYtd3Tvu3ftS7qV2h3V1L1BOapD/xRxb2Z/W2bWnlUT81VxL74/rNjEDp5X7+9UcS2/M69pn+9H4FXq2sSWQ41Vmf31WJhb/EcIX9OqRHdbRGS1bCTt/GvmZz94je3mE3oHY8Yv2rDxj7w+2P+htix39MWX5o/dAVw/Qexs7eoCZfOs90NUD9F7Ijh5gJrZerQfqgL0eF9BbJzu6gJ986qfDLxvo0Ns2O25e4cc5b23l+RdzbGXHaEfHnlbOqaVMbYHnZdy/2+LT/iShN8Z2JAkzf/Vqv6yvdW5T2WXL84AuM/43IF2u//+R79/9H1BLBwgbGP+WEwsAAHpyAABQSwECFAAUAAgICAAVbc5OGxj/lhMLAAB6cgAAFgAAAAAAAAAAAAAAAAAAAAAAZG9taWJ1cy1wbW9kZS1ibHVlLnhtbFBLBQYAAAAAAQABAEQAAABXCwAAAAA=</con:data><con:id>3258e7d8-e61c-4678-8a2b-bd717bf47e68</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="file" value="file:domibus-pmode-blue.xml"/>
  <con:entry key="description" value="SoapUI sample test description for PMode upload. Used Pmode: "/>
</con:parameters><con:parameterOrder><con:entry>description</con:entry><con:entry>file</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="uploadPmode - default blue" id="546b3176-207f-4f3f-8c15-f64a4be4ec86"><con:settings/><con:config service="http://${localUrl}" resourcePath="/rest/pmode" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="uploadPmode - default blue" id="9fe84fe6-27d8-4034-af2b-0567c46ed541" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="XSRF-TOKEN=6a53f207-3871-48e8-97ed-0489991133bc; Path=/domibus"/>
  &lt;con:entry key="Cookie" value="JSESSIONID=EEDDA2F3A12B3288681DFA0C33DB055D; Path=/domibus; HttpOnly"/>
  &lt;con:entry key="X-XSRF-TOKEN" value="6a53f207-3871-48e8-97ed-0489991133bc"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request/><con:originalUri>http://localhost/domibus/rest/pmode</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>domibus-pmode-blue.xml</con:name><con:contentType>text/xml</con:contentType><con:contentId>domibus-pmode-blue.xml</con:contentId><con:url>${projectDir}/resources/PModesandKeystoresDefault/blue/domibus-pmode-blue.xml</con:url><con:id>a98b4227-7dec-4891-a708-a03cebbf824a</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="file" value="file:domibus-pmode-blue.xml"/>
  <con:entry key="description" value="SoapUI sample test description for PMode upload. Used Pmode: "/>
</con:parameters><con:parameterOrder><con:entry>description</con:entry><con:entry>file</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="addPluginUserRequest" id="656f762b-6dc7-46ce-9af1-3258751729f3"><con:settings/><con:config service="http://${localUrl}" resourcePath="/rest/plugin/users" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="addPluginUserRequest" id="8d49ecc8-e544-4792-8b4a-a9ab83c23e94" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="XSRF-TOKEN=6a53f207-3871-48e8-97ed-0489991133bc; Path=/domibus"/>
  &lt;con:entry key="Cookie" value="JSESSIONID=EEDDA2F3A12B3288681DFA0C33DB055D; Path=/domibus; HttpOnly"/>
  &lt;con:entry key="X-XSRF-TOKEN" value="6a53f207-3871-48e8-97ed-0489991133bc"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>{ "status": "NEW",
"userName": "${=request.getProperty('userPl').getValue()}",
"authenticationType": "BASIC",
"authRoles": "${=request.getProperty('userRole').getValue()}",
"password": "${=request.getProperty('passwordPl').getValue()}",
"active": "true" }</con:request><con:originalUri>http://localhost/domibus/rest/plugin/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="passwordPl" value="DomibusEdel-12345"/>
  <con:entry key="userPl" value="pluginAdmin"/>
  <con:entry key="userRole" value="ADMIN_ROLE"/>
</con:parameters><con:parameterOrder><con:entry>passwordPl</con:entry><con:entry>userPl</con:entry><con:entry>userRole</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="13f5a92c-be5e-4ee4-948e-31fb006cbb37" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Pmode Update" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Default Pmodes upload step for reuse" id="5a600d69-75e9-4470-ac29-31826841d259"><con:settings/><con:config><script>import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace"
def joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("sender","default","/blue/domibus-pmode-blue.xml" + suffix, context, log)

joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"/red/domibus-pmode-red.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("receiver","default","/red/domibus-pmode-red.xml" + suffix, context, log)</script></con:config></con:testStep><con:testStep type="groovy" name="Default blue Pmodes upload step for reuse" id="eb76a45b-2107-4ce9-8054-0898fa3994b6"><con:settings/><con:config><script>import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace"
def joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("sender","default","/blue/domibus-pmode-blue.xml" + suffix, context, log)</script></con:config></con:testStep><con:testStep type="groovy" name="Sample Pmode upload" id="2374d3cc-57ec-4bb3-b3c6-a2ab0b1cea95" disabled="true"><con:settings/><con:config><script>import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace"
def joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"\\blue\\domibus-pmode-blue.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml" + suffix, context, log)

joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"\\red\\domibus-pmode-red.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml" + suffix, context, log)</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7b67cf62-31d1-4dfa-9e89-4dd8ef4a8106" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Change property at runtime" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="Authentication" id="58cf4daf-49a2-4fa9-b05e-2ebef87ee2e8"><con:settings/><con:config service="http://${localUrl}" resourcePath="/rest/security/authentication" methodName="Authentication 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Authentication" id="c0cd0de1-98d1-4b07-89a7-4495c89e24cc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>{"username":"admin","password":"123456"}</con:request><con:originalUri>http://localhost/domibus/domibus/rest/security/authentication</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6cbbf1cd-ec7a-4756-bef6-91e6f7cc133a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Transfer cookies" id="f002dd92-c3ff-4aee-a9b6-e80a451dc589"><con:settings/><con:config><script>// This is the Script Assertion for extracted header check current step response
//log.info testRunner.testCase.getTestStepByName("Authentication 1").httpRequest.getResponse().getRequestHeaders()


  /* method sets headers to targeted step
  * step is the step name for which headers to be set
  **/
def setHttpHeaders(authTestStepName, addAuthToStep) {
    def nextRequest = context.testCase.testSteps[addAuthToStep]?.httpRequest
    def existingHeaders = nextRequest?.requestHeaders
    existingHeaders['Cookie'] = getHttpHeaderValue(authTestStepName, 'Set-Cookie')

	def xsrfTokenSting = getHttpHeaderValue(authTestStepName, 'Set-Cookie').find{"XSRF-TOKEN.*;"}
     def matches = ( xsrfTokenSting  =~ /XSRF-TOKEN=(.+);.+/ )
     if (matches.find()) {
        	log.info "XSRF-TOKEN value found. Creating X-XSRF-TOKEN header entry"
        	existingHeaders["X-XSRF-TOKEN"] = [ matches.group(1) ]
       }
    nextRequest?.requestHeaders = existingHeaders
}

// method to retrieve the value of the specified header
def getHttpHeaderValue(authTestStepName, headerToLookup) {
	def authenticationResponse = testRunner.testCase.getTestStepByName(authTestStepName).httpRequest.getResponse()
    if (authenticationResponse.responseHeaders.containsKey(headerToLookup)) {
        log.info "Found ${headerToLookup} in the response headers"
        return authenticationResponse.responseHeaders[headerToLookup]
    } else {
        log.warn "${headerToLookup} is not found in the response headers"
    }
    null
}

//Assert if response has headers
assert testRunner.testCase.getTestStepByName("Authentication").httpRequest.getResponse().getRequestHeaders(), "Response does not have any headers"

//setHttpHeaders('Authentication', 'UserDomainRequest 2')
setHttpHeaders('Authentication', 'Change property')


log.info "END"


</script></con:config></con:testStep><con:testStep type="restrequest" name="Change property" id="cf31eeb7-17c8-45e4-9484-5b182538dcc6"><con:settings/><con:config service="http://${localUrl}" resourcePath="/rest/configuration/properties/{propName}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Change property" id="cdb83ed7-cbca-4d93-b6f2-f64dd386d908" mediaType="text/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="XSRF-TOKEN=aa719082-fee9-427e-a7b2-b0d24f71bc0b; Path=/domibus"/>
  &lt;con:entry key="Cookie" value="JSESSIONID=7625DA59E79BEBBBDCFC3892C7CCE14E; Path=/domibus; HttpOnly"/>
  &lt;con:entry key="X-XSRF-TOKEN" value="aa719082-fee9-427e-a7b2-b0d24f71bc0b"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#localUrl}</con:endpoint><con:request>sjkldjklsjkljsklj s</con:request><con:originalUri>http://localhost/domibus/rest/configuration/properties/</con:originalUri><con:credentials><con:username>${#Project#defaultAdminUsername}</con:username><con:password>123456</con:password><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="propName" value="${#TestCase#propName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="One line property change" id="1beeedf4-f843-4c81-9261-76db9113a725"><con:settings/><con:config><script>Domibus.changePropertyAtRuntime("C2", "domibus.UI.title.name", "New grzegorz zmienia value", context, log)
</script></con:config></con:testStep><con:properties><con:property><con:name>propName</con:name><con:value>domibus.UI.title.name</con:value></con:property></con:properties></con:testCase><con:testCase id="6940e747-77a7-4e00-9ea7-2833f8d5933b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Log check playground" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="cdb55f09-db0a-4fce-8064-091b75f23019" disabled="true"><con:settings/><con:config><script>def side = "red"
def logFileToCheck = "domibus.log"
def logValueList =  ["-Dom122-190912-121502.633-T3" ]

 Domibus.checkLogFile(side, logFileToCheck, logValueList, log, context, testRunner)

 Domibus.checkNumberOfLinesToSkipInLogFile(side, logFileToCheck, log, context, testRunner)
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5cec7c58-0491-47f8-bc2d-d76710927271" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create keystores and trustores" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Sample creation" id="079514dc-860c-4bcc-84e5-bd42be9c9e59"><con:settings/><con:config><script>def keystoreAlias = "blue_gw"
def keystorePassword = "test123"
def privateKeyPassword = "test123"
def keystoreFileName = "gateway_keystore.jks"
def validityOfKey = 1
def truststoreFileName = "gateway_truststore.jks"
def workingDirectory = context.expand('${#Project#tempFilesDir}')

def groovyutils = new com.eviware.soapui.support.GroovyUtils(context)
def path = groovyutils.projectPath
Domibus.deleteFiles(log, path, ".jks")

TruststoreUtils.generateKeyStore(context, log, workingDirectory, keystoreAlias, keystorePassword, privateKeyPassword)
TruststoreUtils.generateKeyStore(context, log, workingDirectory, "purple_gw", keystorePassword, privateKeyPassword, 2, keystoreFileName)
TruststoreUtils.generateKeyStore(context, log, workingDirectory, "red_gw", keystorePassword, privateKeyPassword, -2, keystoreFileName)
TruststoreUtils.generateKeyStore(context, log, workingDirectory, "yellow_gw", keystorePassword, privateKeyPassword, 0, keystoreFileName)

TruststoreUtils.updateTrustStore(context, log, workingDirectory, keystoreAlias, keystorePassword, privateKeyPassword, keystoreFileName, truststoreFileName)
TruststoreUtils.updateTrustStore(context, log, workingDirectory, "red_gw",, keystorePassword, privateKeyPassword, keystoreFileName)
TruststoreUtils.updateTrustStore(context, log, workingDirectory, "yellow_gw", keystorePassword, privateKeyPassword, keystoreFileName)
TruststoreUtils.updateTrustStore(context, log, workingDirectory, "purple_gw", keystorePassword, privateKeyPassword, keystoreFileName)

Domibus.deleteFiles(log, path, ".pem") 	</script></con:config></con:testStep><con:testStep type="groovy" name="Import keystore, truststore and change name" id="4fc25155-8524-4e41-9d4d-43944eb739e8"><con:settings/><con:config><script>//Create iminent certificate
def workingDirectory = context.expand('${#Project#tempFilesDir}')
def blueKeystoreFileName = "aa1_blue_gateway_keystore.jks"
def blueTruststoreFileName = "aa1_blue_gateway_truststore.jks"
def redKeystoreFileName = "aa1_red_gateway_keystore.jks"
def redTruststoreFileName = "aa1_red_gateway_truststore.jks"

Domibus.deleteFiles(log, workingDirectory, "aa1_blue_gateway")
Domibus.deleteFiles(log, workingDirectory, "aa1_red_gateway")

TruststoreUtils.generateKeyStore(context, log, workingDirectory, "blue_gw2", "test123", "test123", 2, blueKeystoreFileName)
TruststoreUtils.generateKeyStore(context, log, workingDirectory, "red_gw", "test123", "test123", 100, redKeystoreFileName)
TruststoreUtils.updateTrustStore(context, log, workingDirectory, "blue_gw2", "test123", "test123", blueKeystoreFileName, redTruststoreFileName)
TruststoreUtils.updateTrustStore(context, log, workingDirectory, "red_gw", "test123", "test123", redKeystoreFileName, blueTruststoreFileName)

// Copy keystore blue
def source = workingDirectory + "\\" + blueKeystoreFileName
def dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\keystores\\" + blueKeystoreFileName
Domibus.copyFile(source, dest, log)

// Copy keystore red expired
source = workingDirectory + "\\" + redKeystoreFileName
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\" + redKeystoreFileName
Domibus.copyFile(source,dest,log)

// Change keystore name
Domibus.changePropertyAtRuntime("C2", "domibus.security.keystore.location", "\${domibus.config.location}/keystores/" + blueKeystoreFileName, context, log)
Domibus.changePropertyAtRuntime("C3", "domibus.security.keystore.location", "\${domibus.config.location}/keystores/" + redKeystoreFileName, context, log)

// Upload truststores: blue for sender and red for receiver.
TruststoreUtils.uploadTruststore("sender","temp", blueTruststoreFileName, context, log)
TruststoreUtils.uploadTruststore("receiver", "temp", redTruststoreFileName, context, log)

Domibus.deleteFiles(log, workingDirectory, ".jks")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7e255bed-d512-44bd-ad57-ac96bdfd2669" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Default Pmodes Load" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Default Pmodes upload step for reuse" id="68bf5313-59f0-4a2a-a63e-5e34e678e429"><con:settings/><con:config><script>import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace"
def joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("sender","default","/blue/domibus-pmode-blue.xml" + suffix, context, log)

joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"/red/domibus-pmode-red.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("receiver","default","/red/domibus-pmode-red.xml" + suffix, context, log)</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-Custom-properties" searchProperties="true" id="d885e1fa-be61-43ef-8444-9f8f200130bf">
            <con:settings/>












            <con:testStep type="groovy" name="Set custom properties-Default-Default-Main Branch" id="fd1b6d63-ee7e-4329-af84-bd334302378a"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/1-mainBranch/sender/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/1-mainBranch/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/1-mainBranch/greenReceiver/domibus/");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-BugFix Branch" id="c4426a75-9bb1-4d57-925a-a978fead192d"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/2-bugfixBranch/sender/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/2-bugfixBranch/receiver/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/2-bugfixBranch/greenReceiver/domibus/");


log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default_3GWs-Main Branch" id="fdc36e6e-9389-4071-b5b5-515cbfa958ac"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default_3GWs-BugFix Branch" id="4bd1da29-fbd5-4ff7-b426-941be8dab15d"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy1D-Default-Main Branch" id="0844983c-74a9-481b-9625-8baec6dda53f"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "1");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy1D-Default-BugFix Branch" id="934fe760-1092-4905-a8a7-41b96be9ea5d"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "1");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy2D-Default-Main Branch" id="268873f4-0c8a-4a60-99ca-f52f09994818"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy2D-Default-BugFix Branch" id="5755b7c7-e8cb-4737-8edb-d8f01b3b9d65"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy3D(Name=Min Length)-Default-Main Branch" id="f55b2f90-5614-420a-a11e-0e40b0ad9ff5"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom3":{"site":"C2","domainName":"a","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy3D(Name=Min Length)-Default-BugFix Branch" id="b78c005c-289f-4961-9d64-f9b7a4923975"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom3":{"site":"C2","domainName":"a","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy3D(Name=Max Length)-Default-Main Branch" id="b8350b08-01bb-4332-b808-fc12ad616251"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom3":{"site":"C2","domainName":"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy3D(Name=Max Length)-Default-BugFix Branch" id="ae88dfb6-9154-4aa8-b56d-f575ec7ca63e"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom3":{"site":"C2","domainName":"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy2D-Multitenancy2D-Main Branch" id="5181caed-80ba-4b07-be5a-60f6bc27e26d"><con:settings/><con:config><script><![CDATA[// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Dom1":{"site":"C3","domainName":"domibus_C3Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Dom2":{"site":"C3","domainName":"domibus_C3Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"}
}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

log.info "Update done.";

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Multitenancy2D-Multitenancy2D-BugFix Branch" id="021ab2f2-ffb4-4d9a-8c0d-39acf9ba5140"><con:settings/><con:config><script><![CDATA[// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Dom1":{"site":"C3","domainName":"domibus_C3Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Dom2":{"site":"C3","domainName":"domibus_C3Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2_bugfix?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"root","dbPassword":"root"}
}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

log.info "Update done.";

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Multitenancy2D-Dynamic PEPPOL-Main Branch" id="be21f0db-7bd4-4e92-aa34-2b8a2c9326a9"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C3","domainName":"domain1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C3","domainName":"domain2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Multitenancy2D-Dynamic PEPPOL-BugFix Branch" id="3b9e5a03-404a-42b1-bae6-24a2a78ca579"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom1":{"site":"C3","domainName":"domain1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C2Dom2":{"site":"C3","domainName":"domain2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-Dynamic OASIS-3GWs-Main Branch" id="6355e6df-2a23-4666-9f49-e67a524f93ae"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');
// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-Dynamic OASIS-3GWs-BugFix Branch" id="b1012747-baec-4d1e-8031-3e59bc6df8d0"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"thirdDefault":{"site":"Third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-Dynamic OASIS-Main Branch" id="f1bd76bb-96c8-4dd4-abfe-ec07236ef618"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');
// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-Dynamic OASIS-BugFix Branch" id="49afca0e-7bd6-4599-8435-22b795abf43b"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c2_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_dd_c3_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-https-Main Branch" id="2b32c754-e695-434d-86d7-f34967b01464"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_https?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_https?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/1-mainBranch/httpsC2/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/1-mainBranch/httpsC3/domibus/");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-https-BugFix Branch" id="01203042-0d43-4b61-9583-13eb4231a42e"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_https_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_https_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/2-bugfixBranch/httpsC2/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/2-bugfixBranch/httpsC3/domibus/");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-taxud-Main Branch" id="b02c98d7-243a-48a3-bff7-f1768707cbb2"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_tpap?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_tapas?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set custom properties-Default-Default-taxud-BugFix Branch" id="935fe8af-7bf7-4cb2-8ef2-28e74c28f90d"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_tpap_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_tapas_bugfix?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0");

log.info "Update done.";

</script></con:config></con:testStep><con:tearDownScript/><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/></con:testSuite><con:testSuite id="3842a5fa-42d5-477e-ba20-520e933977e8" name="FS-Auto-Not-for-Bamboo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="d63e6473-6366-4616-94a3-5a678ccb745f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS001-Push-Submit Message-Basic Flow" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set initial messages numbers" id="2dd73fbc-e178-4c47-b526-bc3b73c7db50"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="3f2363d0-c58b-4f33-a89b-3afcfbda33e8"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="7dfbb8a5-0e29-4e44-a423-da584d28849b"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

FSPluginUtils.submitFSmessage("C2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="41501fb7-3a7a-41cb-b531-f3423e4e4937"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="f75a58b1-8697-40c5-b83d-70fd89e92106"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>0</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS002-Submit Message-Exceptional flow-No receipt" searchProperties="true" id="5aa2f825-f504-414e-8340-b244a34b4134">
            <con:settings/>












            <con:testStep type="groovy" name="Clean FS plugin folders" id="3022821c-3483-4e30-9731-2cb2e47c8d45"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="6530b642-4813-45a8-b402-7fa7bbf8677e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Change blue Pmode to contains incorrect red endpoint" id="f5b6123e-c6c9-4cd6-9ea8-899043d1afb6"><con:settings/><con:config><script>import java.nio.file.Paths

def currentValue=['&lt;party.+name.*=.*"red_gw"[\\s\\S]*?>'];
def newValue=['&lt;party name="red_gw" endpoint="http://localhost:8181/domibus/services/msh" allowChunking="false">'];
def filePath=Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri();
def newFileSuffix="_someSuffix.xml";

PModeUtils.updatePmodeParameter(log, context, testRunner,currentValue,newValue,filePath, newFileSuffix);
PModeUtils.uploadPmode("sender","default","/blue/domibus-pmode-blue.xml" + newFileSuffix, context, log);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="8a44e90e-9e6a-479a-8890-cda4b7689d3a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="abea7edf-6abc-4384-aecb-35d52d33cfab"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

FSPluginUtils.submitFSmessage("C2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="e9044517-d453-4288-95dd-281cfbf7f5ab"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check WAITING FOR RETRY Status" id="f85edeac-4ba6-4447-92fa-1541fab644a7"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentOUT("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Revert - upload default blue Pmode" id="2fc0fcda-6dfc-48c8-8c39-b5636af5d886" disabled="true"><con:settings/><con:config><script>// Upload PModes: default Pmode for C2
PModeUtils.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>testRunner.testCase.testSteps['Revert - upload default blue Pmode'].run(testRunner, context);

//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>16</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>4</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4dc722a-da83-4d6d-9cf8-262dc58f0585</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d96c0d09-2b87-4cfa-a0dc-f96081c863ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS003-Submit message-Exceptional flow-retry max not reached" searchProperties="true" id="84d67d0c-1f37-47a3-800e-de7b209a3ab3">
            <con:settings/>












            <con:testStep type="groovy" name="Clean FS plugin folders" id="b6ab0ae2-48d8-425e-992a-ddbcb4d91eda"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="c5200307-236c-4085-9d11-a8bda30d9a18"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Change blue Pmode to contains incorrect red endpoint" id="e96ab3f8-fd99-40bd-9b9c-a3e64ebfbfc4"><con:settings/><con:config><script>import java.nio.file.Paths

def currentValue=['&lt;party.+name.*=.*"red_gw"[\\s\\S]*?>'];
def newValue=['&lt;party name="red_gw" endpoint="http://localhost:8181/domibus/services/msh" allowChunking="false">'];
def filePath=Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri();
def newFileSuffix="_someSuffix.xml";

PModeUtils.updatePmodeParameter(log, context, testRunner,currentValue,newValue,filePath, newFileSuffix);
PModeUtils.uploadPmode("sender","default","/blue/domibus-pmode-blue.xml" + newFileSuffix, context, log);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="40677156-38f6-45ae-acec-a498284b20b1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="65c5b02a-8ad6-4365-8e2b-6961951bdb28"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="1bbc7ec3-e7a5-44b6-a553-3624687ce2f4"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="06910edc-ec11-4bc0-a5ec-e795bc0135fc"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

FSPluginUtils.submitFSmessage("C2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="9bd9b597-878a-45fd-a8c7-3ee32f7d2475"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check WAITING FOR RETRY Status" id="a4f7b468-9b5d-4c6e-80d2-95ff2386489c"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentOUT("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="b4416092-fee4-4c77-b470-5069289bd7e0"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Revert - upload default blue Pmode" id="9dd85247-aea6-46ce-b332-07d938c999f1"><con:settings/><con:config><script>// Upload PModes: default Pmode for C2
PModeUtils.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="ece9b6a0-f36c-4d44-a98c-1bbad6648fbf"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="c0ed7153-2c88-4e56-8e75-c22848b5b416"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",4,1);</script></con:config></con:testStep><con:tearDownScript>testRunner.testCase.testSteps['Revert - upload default blue Pmode'].run(testRunner, context);

//ExcelReporting.reportTestCase(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>30</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>10</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4dc722a-da83-4d6d-9cf8-262dc58f0585</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d96c0d09-2b87-4cfa-a0dc-f96081c863ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b861945d-9eff-4cb1-8c52-df09203a2e67" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS004-Push-Submit Message-Exceptional flow-Data-From/PartyId-Existence" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="162f5094-bff4-4b8b-a74d-9829e2d3fdd9"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="d3ec53a8-fc9b-4435-84ff-79d96dbd6864"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="8a35c22a-149c-4f67-9893-1d2947d20968"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="9fd0b84a-3ec3-4914-912a-a3f276e604a7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="8208e6af-723c-4eac-a558-4752449246cf"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SENDER:"domibus-ghost"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="1876c449-11c0-4b7f-a4e8-b039762940ed"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="970fa853-b758-4215-b180-268748ec3d89"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="89f28028-910d-49e3-8749-13d258e2a73c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="fc5a58fa-d2e2-4352-84f7-c0f5aab73c94"><con:settings/><con:config><script>def logValueList =  ["Sender party.*not.*found.*domibus-ghost"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>26</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>22773</con:value></con:property></con:properties></con:testCase><con:testCase id="ade42ddb-0392-4593-962a-0e6e2567b89d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS005-Push-Submit Message-Exceptional flow-Data-From/PartyId-Role" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="9076a79b-e51f-4861-b79d-c59f984bcc95"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="fab74a5a-0854-45ed-8e5b-3a706e0581be"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="670f326d-575f-44f2-9f55-1fef7f0b8939"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="f612ed74-f2b1-4d39-aebb-a061963f9228"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="1ba3e79b-5a6f-4746-be01-a770103401d6"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SENDER:"domibus-white"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="40f13acb-a7f3-483d-b4a9-8afda156de8c"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="667f087d-0774-4f71-8885-90dd6cb7999d"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="b6976174-cfd1-4520-beb8-a5ced5a0429f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="21274158-ae95-48dc-91c1-4e20a24b37d0"><con:settings/><con:config><script>def logValueList =  ["None of the Processes matched with message metadata"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>18</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>26159</con:value></con:property></con:properties></con:testCase><con:testCase id="807f6f88-084e-47c5-94c0-81bda843d8ab" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS006-Push-Submit Message-Exceptional flow-Data-From/PartyId-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="15a76d66-49cf-46b2-aa1c-fd0248fe8eb4"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="34e17018-307d-47e9-b6c5-a00ccc3868a8"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="99c4a5d0-59d1-4343-83a3-aa6b2c3c2ec3"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="29842ffb-8075-431f-9b48-91a236d21cdc"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="4fb5e7f8-476c-4be0-bfab-de7fd7b12f01"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SENDER:""];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="8beeea72-615b-4c17-9275-1f549332396e"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="9500e859-d56b-49f8-bbba-1f1afedbfb69"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="8729073b-bb32-463a-81b5-9e482d848fa0"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="1723400c-4be4-44a7-b0e9-0fde16847985"><con:settings/><con:config><script>def logValueList =  ["Mandatory field From PartyId is not provided"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>8</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>32903</con:value></con:property></con:properties></con:testCase><con:testCase id="fca4ca8a-1dba-47c5-9bf1-829d817402dc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS007-Push-Submit Message-Exceptional flow-Data-From/PartyId-Type-Existence" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="b17d4ef7-aa82-420a-a295-3ac735ddbbd5"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="7d39e5ee-e83b-424d-8e0e-2d42a720bd7e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="102de55d-3ed9-4753-9f49-360147017717"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="22591db8-5f3c-4d43-a354-2c45d163e823"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="2853138c-139e-461f-ac3e-788a7c5e5bb0"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[P_TYPE:"urn:oasis:names:tc:ebcore:partyid-type:unregistered:ghost"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="a4645663-333a-432f-ae5a-1f9cfafab29e"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="0ab47a5b-9d91-4a9d-b60d-71e8441f33ca"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="7ac1cf16-c446-42a0-8f1d-1f629b7bb512"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="490cc75c-739f-499f-9ba1-3f608e83eca3"><con:settings/><con:config><script>def logValueList =  ["Sender party could not.*found for the value.*unregistered:ghost"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>0</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>36142</con:value></con:property></con:properties></con:testCase><con:testCase id="8f7ed9c1-d7d5-4edd-996e-7ea3658fda04" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS008-Push-Submit Message-Exceptional flow-Data-From/PartyId-Type-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="3fa3a3d7-c5fe-41ef-b3e3-5bf5011db62b"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="39ae7de3-d727-43b1-841f-1d25e610f5b8"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="495df950-eea0-4fb0-b468-6257e180ebd3"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="a6676a3a-c215-4a0d-bceb-aa1db4eac76d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="ceae5e7d-417a-427b-bf44-3ed45fb95955"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[P_TYPE:""];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="daabb159-f616-404d-827d-f5235e1ecadc"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="78ad43bf-1154-4a68-9908-00625326c55e"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="57bdb966-55a6-4f5f-89a3-0991a2dd9431"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="19a19d23-22f9-45f0-a9cc-73baaf54bd6b"><con:settings/><con:config><script>def logValueList =  ["No matching party found for type .null. and value .domibus-blue."];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>39337</con:value></con:property></con:properties></con:testCase><con:testCase id="89f620bb-e16d-42ce-8f78-e1c84b8f7114" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS009-Push-Submit Message-Exceptional flow-Data-From/Role-Existence" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="d935f24c-36ae-47fa-897e-7363b4e3f89c"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="ef634f99-f9f9-4855-a0d8-314f17c05fa5"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="14e1b7e8-eb93-4bc4-a219-21d3f22dbe35"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="4e56bfd3-2d7f-42be-a3a3-18095d150690"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="d44180b1-2cc2-44ab-9f5f-f13b1a6632aa"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[S_ROLE:"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/iritator"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="210642e0-3bee-409b-a202-415b49a83530"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="548dacb6-15bc-4502-8430-de7c9838b1a3"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="8f68f2d3-d90a-4c64-951c-fa69408a720a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="fb9631b0-ea85-4544-829b-84cce32a9481"><con:settings/><con:config><script>def logValueList =  ["No matching role found"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>42518</con:value></con:property></con:properties></con:testCase><con:testCase id="f064c7c0-fa40-418b-995f-f3e96f77c9c2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS010-Push-Submit Message-Exceptional flow-Data-From/Role-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="ca8fd197-c310-4670-b6d2-263ae1e44a60"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="46c4bb2d-261c-41ea-b2e3-7d9cad90190f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="60eb9301-ea68-4ab6-b7d6-39813ab004d2"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="dca858b1-1001-44d8-b503-625b735f3439"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="42c5c6eb-c773-4b38-8f1d-d83900256847"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[S_ROLE:""];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="0484db1b-88cc-45da-b419-5fc2d44bf825"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="3580ff03-21fc-40d8-93a8-6cf0182eb11f"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="480825d7-e6f0-431d-ae82-e18813216434"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="3344baae-62c8-4303-b9f1-51800488b802"><con:settings/><con:config><script>def logValueList =  ["Mandatory field From Role is not provided"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>45896</con:value></con:property></con:properties></con:testCase><con:testCase id="c8d17642-a85b-45d8-94ac-b9ef2ee2fd58" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS011-Push-Submit Message-Exceptional flow-Data-To/PartyId-Existence" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="178fae75-5bb1-4438-9a5e-0692884ea9cf"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="10604f32-3d67-494c-96aa-17c6f32e6f81"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="4e30619a-ed14-4135-aee0-771446bb1347"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="ba8597b0-b6c0-48d7-a84c-8fc857197521"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="15397082-b568-404b-b0ad-c8a3998c30cd"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[RECEIVER:"domibus-ghost"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="f1c63248-2e29-4b5b-b2cb-62d53e286bea"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="84425411-686b-4851-b4e5-93aa523618f9"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="5836dcb2-bb44-4a6a-9481-2b9c754d5c44"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="52f88f65-70c2-4155-b90c-97604d543c9c"><con:settings/><con:config><script>def logValueList =  ["Receiver party.*not.*found.*domibus-ghost"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>50902</con:value></con:property></con:properties></con:testCase><con:testCase id="082d06fa-6361-48ae-a905-561484909716" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS012-Push-Submit Message-Exceptional flow-Data-To/PartyId-Role" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="979246b2-100d-414c-a7ab-e2ea50a8283f"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="3bbb39ff-e284-4850-b0fc-88f3e59c8567"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="00239af4-0126-4143-8760-6572d5a11789"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="edaabbd9-7706-44a5-9b6f-8b088eadba4d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="ced30c37-d746-46bf-80aa-2f3c3dd458f6"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[RECEIVER:"domibus-black"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="4ad3cb71-39b7-4f4c-8a7a-3106256d0c4d"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="0d159f9f-56c3-4fad-8970-06178343f8c7"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="6b9199a3-c241-40cc-bcab-b68c62eee856"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="9a61de97-41cc-41de-af2a-507ba400f1ad"><con:settings/><con:config><script>def logValueList =  ["None of the Processes matched with message metadata"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>54294</con:value></con:property></con:properties></con:testCase><con:testCase id="3c550d79-a519-41ea-97ac-44ab7995af4c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS013-Push-Submit Message-Exceptional flow-Data-To/PartyId-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="b0357f5d-9c08-4ad6-9aa4-111813f36e26"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="449427b1-ba77-4a8d-ad71-c7ae5074d608"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="568f57cb-e8d0-4a4e-8aaf-b64c6b835f24"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="e1fbe8bd-ed5a-4784-8a55-0f44395c24e6"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="6ee4147b-0888-400c-8910-b4ec68ed2bfa"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[RECEIVER:""];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="63e8a0b2-a84a-40f7-b6d9-354a847ea81e"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="cc3ba9f1-2669-4f4e-8086-9abea6ae2a73"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="760a5444-1036-4354-9eee-c98bd4ba4612"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="3bdca5d2-0434-41b7-a0b7-6729034be80f"><con:settings/><con:config><script>def logValueList =  ["Mandatory field To PartyId is not provided"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>57829</con:value></con:property></con:properties></con:testCase><con:testCase id="e626d6f6-8ff5-4efc-95ce-3e8d270313ed" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS014-Push-Submit Message-Exceptional flow-Data-To/Role-Existence" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="b3530528-485b-4bce-8046-9296366b773a"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="a8ad7896-925c-42ff-af2a-028290f158bd"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="c5a39588-86d5-4a9f-8390-32f90bd43439"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="1815aef5-42f5-436b-aa37-c07736c46d2e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="c91242f2-5140-440e-a41c-bf095496fafb"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[R_ROLE:"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/iritator"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="50237bf7-b923-42dc-8f6a-c028b6340d79"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="cb368fcd-b3b5-4052-bbcf-0ef4d23049a5"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="17a1d0a2-451e-47ce-b69e-5e8830003144"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="075d55c8-50d5-468a-800b-43a14560f2e8"><con:settings/><con:config><script>def logValueList =  ["No matching role found with value"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>4</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>60834</con:value></con:property></con:properties></con:testCase><con:testCase id="e6c712e1-3af0-4541-95b0-64dc4cfa37ca" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS015-Push-Submit Message-Exceptional flow-Data-To/Role-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="e9c10edb-ed8a-4b5c-95a6-283dd3ebd18b"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="702ee66a-0fd3-4dc2-8676-2336a85a168d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="41285f91-ee33-4733-ba48-882e58626866"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="cf2b3328-6ac8-4cb4-94d6-b03315831184"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="3e71957d-4fc3-4ec0-ab6b-7b640ffc4740"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[R_ROLE:""];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="babc78b3-35bc-4f4a-852e-07fa7aae3e1f"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="c4d339b9-5c2a-42fe-9362-64d478f66bd8"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="30780857-5c3a-4746-b56b-d0a3d5afc38a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="8ba11cab-92fd-4ce7-9508-a524564510f7"><con:settings/><con:config><script>def logValueList =  ["Mandatory field To Role is not provided"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>20</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>4</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>66211</con:value></con:property></con:properties></con:testCase><con:testCase id="9bfd044d-d36e-4b9a-93a3-8dc14e64f3f8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS016-Push-Submit Message-Sender=Receiver" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set initial messages numbers" id="36cb2173-d897-4047-ac9f-7d7c393e8116"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="9cdc330d-e6b7-4479-b8df-a1c8a9d7c03a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="4c3ec386-a54d-40fa-8bca-260ecd37392e"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[RECEIVER:"domibus-blue"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="b9cd189b-4ced-4433-9842-34a76a92704d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="1e673622-534a-4188-9378-e36f6be7e156"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>34</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>14</con:value></con:property></con:properties></con:testCase><con:testCase id="edaf98af-5cce-4d9d-aff4-bd308356a356" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS017-Push-Submit Message-Exceptional flow-Data-Service-Existence" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="2440aef1-12bf-4421-b993-62c91fdfda5e"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="cc8a4ee2-3cf1-49df-ada1-6242ec7611d7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="6317742a-a48d-4918-a37d-4aa83139a875"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="c3d0a5a1-59f1-4eeb-8d8e-981037e65725"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="20aa4140-9ca3-44c5-81d0-b55aa3a1214a"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SRV:"processghost"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="487d130e-f5b8-4532-85a0-85ddf9ee3d52"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="0878c6f1-cd11-4425-93f8-52ca639267c6"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="c9005efe-7e1f-4c0f-b9b2-c02e2aa4adfc"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="7b28bdea-61ad-454f-b7c2-1fd59afbe72f"><con:settings/><con:config><script>def logValueList =  ["No matching service found"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>22</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>74352</con:value></con:property></con:properties></con:testCase><con:testCase id="1280a1c2-e4ab-4ded-b1f7-e9400a21e29c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS018-Push-Submit Message-Exceptional flow-Data-Service-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="0b82d646-cff6-4cc9-a56d-33eef6af612c"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="9f02a847-0016-4b87-afb9-7df96b116019"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="675cbd9e-fd84-4444-a5b3-896276f1ac03"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="73c9fc0d-f9d7-43df-b7ae-75e2eca15753"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="e5a2bd9d-710d-44d3-843f-ccfda77ca32b"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SRV:""];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="72a76e07-4060-428d-b8b7-aca636acc2cb"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="bb2a38c0-5bc9-45be-8152-0f4b4f09c00c"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="e75b4001-40da-439b-a131-f7026620d9b8"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="dcf7a714-d1f3-4f5a-858f-2f55e0c88779"><con:settings/><con:config><script>def logValueList =  ["Mandatory field Service is not provided"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>22</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>77531</con:value></con:property></con:properties></con:testCase><con:testCase id="75ff08f1-4b63-430f-9b21-85a448d4e172" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS019-Push-Submit Message-Exceptional flow-Data-ServiceType-Existence" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="f234272f-0201-4806-8bd0-82bc15e3d0bf"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="d8196edd-694c-4c5d-a184-ff409f61f097"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="b3b4a02b-3285-4834-bb8c-7b52ad978f6b"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="9dd01f69-666c-4d57-b0f1-0093ab6a0148"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="bc391485-9d1e-4b2b-97af-931863889a17"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SRV_TYPE:"ghost"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="c592d56c-b905-4198-8b12-96331109bb18"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="145fc71c-accd-49ca-9df6-54cfbc76ba19"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="c8d83e67-7b23-4e90-9a59-e301fc5c3a43"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="52f88333-91cb-4664-8824-4b1aaa60d17a"><con:settings/><con:config><script>def logValueList =  ["No matching service found"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>22</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>80120</con:value></con:property></con:properties></con:testCase><con:testCase id="596dfa90-2985-4755-9a6a-abba8d9e18f9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS020-Push-Submit Message-Exceptional flow-Data-ServiceType-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="4d2f8ba7-dfa3-49f4-ae39-aa98b4619385"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="da040f3b-b977-452b-90b5-f4789cb2aee9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="9607fca5-928e-4152-a161-7b20ae5d46f8"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="7a6afe9e-a331-42fc-bce7-3fb2ac073fd1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="4637f40f-2f5a-4b3a-a37b-29e8a6e21cf0"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SRV_TYPE:""];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="17987ba2-0e06-4a8f-92a2-5a853a191ba1"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="bf71b66a-3d00-4f47-8845-5dedc3024f1f"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="291d8c4b-0e1a-430c-98e5-477d4d4292b3"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="818ae8cc-0f43-4aa4-96c2-652ef89762ce"><con:settings/><con:config><script>def logValueList =  ["No matching service found for type .null. and value .bdx:noprocess."];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>22</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>85496</con:value></con:property></con:properties></con:testCase><con:testCase id="73856d48-d5d8-4d4b-9a11-ebc9fabc7b10" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS021-Push-Submit Message-Exceptional flow-Data-Action-Existence" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="65f8fa88-49fe-414d-9924-58cf72b2847a"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="a99f5e93-0984-49ef-837a-62b558d25389"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="6dda4280-8023-4e98-a4cc-6073dd73655e"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="f9410b38-4aac-417a-986e-3004d1d03d0f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="d2fdbe99-a79b-45f3-9672-febeb7454d96"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[ACTION:"actghost"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="e8078309-cd46-4d20-9059-51a3de88db7c"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="0adcd370-ef13-4422-95ab-d3fca5fc21e9"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="c743a0f5-36be-4f4c-82eb-6ab07aa99f51"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="f9bfd4dd-a6d7-4cac-8f2b-f0f86d812540"><con:settings/><con:config><script>def logValueList =  ["No matching action found"]
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner)</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>22</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>88689</con:value></con:property></con:properties></con:testCase><con:testCase id="354c06bb-8ed3-43c4-b2b0-9cb7c3e0fb34" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS022-Push-Submit Message-Exceptional flow-Data-Action-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="2181c98f-ada0-4e2c-9e9b-3654fd1a9b24"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="00559e1b-94a5-417b-bc53-9548357f485f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="6c091fd6-e6fe-4751-8e30-33d11f6b94b8"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="799c6946-bdc0-4fdf-8971-433b28231d3a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="551c214a-8b8c-4819-92d8-2090f7d18fc7"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[ACTION:""];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",parametersMap);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="42a8e4ce-939a-43f6-bcb2-bbc4e01d9410"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Error Status" id="975290a3-ea8b-48ad-824c-2b1423d84948"><con:settings/><con:config><script>FSPluginUtils.checkFSpayloadPresentFAILED("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="3ed89b03-3d86-47ad-8b62-de1f6feefe21"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="f91f1b5a-87ee-4d05-b61a-5bc181a03681"><con:settings/><con:config><script>def logValueList =  ["Mandatory field Action is not provided"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>22</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>92030</con:value></con:property></con:properties></con:testCase><con:testCase id="4606aa88-cdfc-4c99-90a7-36e5246dbcc4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS023-Payload size" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Update PMode Blue lt payload size" id="e0f8a0d7-22e9-4ac2-8780-aebc2d50a6d0"><con:settings/><con:config><script>import java.nio.file.Paths

def currentValue=['2147483647'];
def newValue=['59'];
def filePath=Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri();
def newFileSuffix="_someSuffix.xml";

PModeUtils.updatePmodeParameter(log, context, testRunner,currentValue,newValue,filePath, newFileSuffix);
PModeUtils.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml"+newFileSuffix,context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="e214f930-8f2f-4c86-ad73-5cbc8d0f6a47"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter to FS for Blue and Red" id="b01831ee-3240-4338-aaaf-d3c76009d0f3"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","backendFSPlugin",context,log)
Domibus.setMessageFilters("receiver","backendFSPlugin",context,log)
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="8fdab830-e86b-482d-82a1-c13d2b3d2f10"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line number C2 Test 1" id="b18f1235-d52d-4223-827d-f5be8750a50a"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="a6f09653-4c6f-44f0-a4b9-b7db24f733db"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit message 1" id="971c8b4e-03fb-47ca-98fb-43a9364dad83"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

FSPluginUtils.submitFSmessage("C2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="415c1693-a189-4b49-8e1a-90bc5498eb8d"><con:settings/><con:config><delay>60000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file C2 - Error present" id="8f557d8d-2d89-47a6-a3dc-63101fab847f"><con:settings/><con:config><script>def logValueList =  ["Payload size.*is greater than.*maximum value.*"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="bf5b2c65-64ea-4508-ad7b-14ff41e06c26"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Update PMode Blue gt payload size" id="c9268110-086a-479f-85ba-276c5e45ae80"><con:settings/><con:config><script>import java.nio.file.Paths

def currentValue=['2147483647'];
def newValue=['81'];
def filePath=Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri();
def newFileSuffix="_someSuffix.xml";

PModeUtils.updatePmodeParameter(log, context, testRunner,currentValue,newValue,filePath, newFileSuffix);
PModeUtils.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml"+newFileSuffix,context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D6" id="e2486d94-72bc-4e88-a7c6-69ef724d7e87"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line number C2 Test 2" id="c1383d41-c62d-4a01-9802-be8d6e26de60"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D7" id="6fe138ad-347a-4f56-84e2-9235f30b11a1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit message 2" id="7121b150-df05-4631-8a0c-a842830cbb41"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

FSPluginUtils.submitFSmessage("C2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D8" id="2efcd453-2593-4c1a-b4b5-611c6613d9c6"><con:settings/><con:config><delay>60000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file C2 - Error not present" id="d6cc8eac-bf71-4acb-ab1e-ca952ec8ed4d"><con:settings/><con:config><script>def logValueList =  ["Payload size.*is greater than.*maximum value.*"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="8c3126ae-8a84-4508-b5df-54a29808361d" disabled="true"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)
PModeUtils.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log);
PModeUtils.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>testRunner.testCase.testSteps['Upload default PModes Blue-Red'].run(testRunner, context);

Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>1035</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>32187c3e-10a4-4f74-bb76-0024b1cf6dc0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="a28664fd-6519-4c03-8449-d8cc955439c0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS024-EDELIVERY-4354 and EDELIVERY-4385 - Single Domain" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Save Current cxf log level" id="b0d2f9c7-caa8-40cd-a5e7-3250e38b5c64"><con:settings/><con:config><script>def custPropName="org.apache.cxf";
// Get Domibus package log level
def propValueC2=Domibus.getLogLevel("C2",context,log,custPropName);

// Set test case custom property
Domibus.setTestCaseCustProp(custPropName,propValueC2,log,context,testRunner);


</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="fc1bfbd4-3658-42ae-9236-95946b163341"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set cxf log level to INFO" id="630d6874-ba28-4b20-8e4b-0f003f705787"><con:settings/><con:config><script>Domibus.setLogLevel("C2",context,log,"org.apache.cxf","INFO");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="bbcce0ef-6002-40cf-9191-c1139b1606f3"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line number - Default cid" id="b7c59afd-592b-454c-a772-86e7ec73f944"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="71383111-0ee1-4890-9f30-de0285802211"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - Default cid" id="578ea9b2-c5c4-45d6-92d5-e07c73be3c8c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - Default cid" id="901836d1-dbb8-4537-9155-7f691e93f2d1"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

FSPluginUtils.submitFSmessage("C2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - Default cid" id="a98db2b2-bcbc-4517-934c-8b1587166d35"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="6de36b4a-a37e-4493-8c8b-69b878e8d29c"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test - Check sender log file - Default cid" id="d4af8392-f839-47c4-b235-3969fabb051e"><con:settings/><con:config><script>def logValueList =  ["PartInfo.*href.*=.*cid:message"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line number - cid from metadata file 1" id="798e76f7-b728-470f-984f-c9e9888adba6"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="21dd5d15-c06e-4147-b2e6-bfaa93f8fc2a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - cid from metadata file 1" id="cb143701-8178-45d4-9eb0-a1623b89199c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - cid from metadata file 1" id="20635b4a-366d-4adf-b09d-e4f160c019c5"><con:settings/><con:config><script>def parametersMap=[CID:"cid:messagefrompp"];

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withmime","default",parametersMap);</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - cid from metadata file 1" id="c7360f23-e1ac-43c6-8710-6587ca06c893"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="a184d7be-551c-4142-a96a-888bf8bf04d3"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test - Check sender log file - cid from metadata file 1" id="b26b00a4-4368-410a-b8cf-97d3457b13c2"><con:settings/><con:config><script>def logValueList =  ["PartInfo.*href.*=.*cid:messagefrompp","Property.name.*=.*MimeType.*text/xml"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);
</script></con:config></con:testStep><con:testStep type="delay" name="D6" id="90a5f30d-eaad-404c-8ec2-9bf4e888aa37"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Configure new cid in the fs plugin properties file" id="c251f045-9ab8-415e-86aa-acacfd9ef3cc"><con:settings/><con:config><script>Domibus.changePropertyAtRuntime("C2", "fsplugin.messages.payload.id", "cid:messageNew", context, log);
</script></con:config></con:testStep><con:testStep type="delay" name="D7" id="508d2b09-3efb-4b04-9ebc-978846dc3e44"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line number - New cid" id="ef91df39-6229-4dc4-a600-9b5d66c432a2"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D8" id="96c2f587-0896-4c49-81aa-dd28cc9eda1f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - New cid" id="99e9374b-2450-43f5-92a5-94ae31d6cda6"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - new cid" id="5e79cbd2-87d3-46e7-b983-2bc031db4466"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

FSPluginUtils.submitFSmessage("C2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - New cid" id="c2526c25-3081-4526-ab27-51dec91755cf"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D9" id="f781d6c3-81d4-4d85-92ea-7865b96c1447"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test - Check sender log file - new cid" id="6ef36639-1a2e-4c28-877d-bbbbe9f58feb"><con:settings/><con:config><script>def logValueList =  ["PartInfo.*href.*=.*cid:messageNew"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line number - metadata file 2" id="45d5e905-1551-41f4-9324-a9708f25ea4b"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D10" id="9e55f3c4-44cf-4879-97b2-9998c6e9d2d0"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - cid from metadata file 2" id="a23a7fd6-4117-473f-a171-e03eb3bbe33f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - cid from metadata file 2" id="62973a9b-7cb8-4a07-b000-d799bf3ffbc1"><con:settings/><con:config><script>def parametersMap=[CID:"cid:messagefrompp"];

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withmime","default",parametersMap);</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - cid from metadata file 2" id="6ce64942-537c-4a26-b417-43fdc9089bf6"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D11" id="0ff2f27f-5416-4ec6-a987-0906fae459f7"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test - Check sender log file - cid from metadata file 2" id="7a0dcebd-e287-4a61-8992-10d02a1702d5"><con:settings/><con:config><script>def logValueList =  ["PartInfo.*href.*=.*cid:messagefrompp","Property.name.*=.*MimeType.*text/xml"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);
</script></con:config></con:testStep><con:testStep type="groovy" name="Reset cid property" id="f2e0830a-ba81-4e83-a968-5007abab5c59" disabled="true"><con:settings/><con:config><script>Domibus.changePropertyAtRuntime("C2", "fsplugin.messages.payload.id", "cid:message", context, log);


</script></con:config></con:testStep><con:testStep type="groovy" name="Reset log levels" id="caceebb0-cf5e-45d3-b893-892209d68373" disabled="true"><con:settings/><con:config><script>def custPropName="org.apache.cxf";

// C2
def propValueC2=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
// Reset log level value
Domibus.setLogLevel("C2",context,log,custPropName,propValueC2);
sleep(2000);
</script></con:config></con:testStep><con:tearDownScript>testRunner.testCase.testSteps['Reset log levels'].run(testRunner, context);
testRunner.testCase.testSteps['Reset cid property'].run(testRunner, context);</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>105630</con:value></con:property><con:property><con:name>org.apache.cxf</con:name><con:value>INFO</con:value></con:property><con:property><con:name>propertyCountC2</con:name><con:value>42</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>20</con:value></con:property></con:properties></con:testCase><con:testCase id="86bcf242-a37c-49ce-89cb-9779d092a1dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS025-Push-Submit Message-ProcessingType-Optional" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set initial messages numbers - Processing Type - Not present" id="4c3c0488-8daf-40c6-97a4-a0a2967edb01"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="a105fbaa-e7f1-45a3-a4fc-c190b33acf4e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - Processing Type - Not present" id="ab17da64-6ec0-4c96-9bb2-d2d14569b133"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withmime","default",[],false);
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="f15cf8d0-16a0-4db8-b929-0f603efedb67"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - Processing Type - Not present" id="1a42eb2f-a24e-4996-a00d-352b67e0c29d"><con:settings/><con:config><script>def gap=1;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="8402f47d-9722-4120-8fa0-3afeb6ed4d92"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - Processing Type - Present" id="22b074f4-240a-4150-95b4-e91b473eb04e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="cbf6a154-4f3f-408f-80b5-3ea8f48ee7ce"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - Processing Type - Present" id="a0d7b97a-e27b-4f00-9e70-3c8fa50abc93"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withptype","default",[],false);</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="f9fd8650-0a1d-4827-81d4-9fa2eeae331b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - Processing Type - Present" id="c41439e9-a741-4bbf-8ac2-d0e42c9f1d11"><con:settings/><con:config><script>def gap=1;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>49</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>13</con:value></con:property></con:properties></con:testCase><con:testCase id="3f1f4ffc-5947-4dd4-aa89-41f9a51ee62c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS026-Push-Submit Message-ProcessingType-Empty" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set initial messages numbers" id="46fbfd05-3ae4-45e7-b88b-192efefce271"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="56823a11-ad83-4d19-a47a-8f01effd0c71"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - Processing Type - Empty" id="07d1fa82-34a0-43e7-922a-fa3cd13b515c"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[PROC_TYPE:""];

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withptype","default",parametersMap,false);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="e2e6cc09-a060-4258-a2d7-39ccaef8489a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="5039281f-f709-40d0-a7d4-21bf4a0b7fe5"><con:settings/><con:config><script>def gap=1;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>50</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>4</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>703</con:value></con:property></con:properties></con:testCase><con:testCase id="5741d23f-46c5-4964-bc34-e2faf8e473a1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS027-Push-Submit Message-ProcessingType-Wrong value" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set initial messages numbers" id="e7a8cc24-2004-4694-bb17-0f679bae1157"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="b30bbc9b-a171-4fe7-9bde-c71066382187"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - Processing Type - SIT" id="2717f6e5-3f3b-44e7-a518-812d755cf1d3"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[PROC_TYPE:"SIT"];

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withptype","default",parametersMap,false);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="d18b85f7-d0b8-4fc5-82ed-3c7579f12ef9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="39755328-0f79-47d2-a2f8-9c800721dc1d"><con:settings/><con:config><script>def gap=1;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",1,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>46</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>16</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>26251</con:value></con:property></con:properties></con:testCase><con:testCase id="2cdd9d4c-bf05-4bed-b0ca-a6dfd39688d6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS028-Pull-Submit Message-Basic Flow" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set initial messages numbers" id="1ea23250-57b9-405d-8663-d16fe08e0c16"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="fa9f7a3f-b056-4309-b400-26c15d9046b9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="2c3ec9e4-a6d5-4f24-a32f-7e889e94bdc2"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SRV_TYPE:"tc22",ACTION:"TC22Leg1",PROC_TYPE:"PULL",MPC:"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/mpcPullAgrNoPayProfile"];

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withptype","default",parametersMap,false);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="510cd9a8-9b17-4980-a548-1b3125b2b490"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="ad1db386-bc1b-474c-8254-58981aa5f16c"><con:settings/><con:config><script>def gap=1;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Default","C3Default",2,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>51</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS029-SmartRetry-Default-Mecanism" searchProperties="true" id="9fef59bc-fdf5-461c-8e06-aca835fa60ac">
            <con:settings/>












            <con:testStep type="groovy" name="Clean FS plugin folders" id="e2263fd5-376d-481f-9004-b482ba68091d"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Pmode-C3-Remove-tc20Action" id="ee291fe6-3287-46dd-bf07-8bd50c1994be"><con:settings/><con:config><script>def side="c3"
def nodename1="action"; def searchKey1="name"; def searchvalue1="tc20Action"; def attTochange1="value"; def newValue1="TC20Leg1random"

def parametersMap=[(nodename1):"$searchKey1#$searchvalue1#$attTochange1#$newValue1"]

PModeUtils.updatePmodeParametersRest(side,context,log,testRunner,parametersMap)</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Pmode-C2-Update-Retry-2times-1min" id="d5e13271-6a4e-4511-a003-b84fd59247be"><con:settings/><con:config><script>def side="c2"
def nodename1="receptionAwareness"; def searchKey1="name"; def searchvalue1="receptionAwareness"; def attTochange1="retry"; def newValue1="2;2;CONSTANT"

def parametersMap=[(nodename1):"$searchKey1#$searchvalue1#$attTochange1#$newValue1"]

PModeUtils.updatePmodeParametersRest(side,context,log,testRunner,parametersMap)</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Property-C2-domibus.msh.retry.cron" id="d043f984-9f04-41b2-869f-a30cac7fad07"><con:settings/><con:config><script>def custPropName="domibus.msh.retry.cron";
// Get Domibus property value
def propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
// Set test case custom property
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);

Domibus.changePropertyAtRuntime("C2", custPropName, "0/10 * * * * ?", context, log);
sleep(2000);</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="92846f90-28f7-4af0-9c07-c45e9046f7e9"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

def test = new Domibus(log,null,context)

test.storeLatestMessagesId(testRunner)

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",[],false);

test.waitFindAndUpdateLatestMessageIdIn(testRunner)

test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test Message Status" id="760f7d72-13f0-436a-becf-eed0498a683c"><con:settings/><con:config><script>
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="83ba3c3b-afb1-4bca-941c-257ad095f07b"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 1" id="7fa3f2de-e205-4044-b08d-08379ad82443"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 1" id="3e58cdc9-fd8a-4a04-a2e8-69249f529266"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 1 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 1" id="37d68322-ef90-4eb9-ab5e-0cc0abdcee37"><con:settings/><con:config><script>log.info "==== Checking the logs for the first re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 2" id="1d7a7003-b6bc-45c4-b6ab-b517bc5d6c9f"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 2" id="648e0b57-146e-4291-9c86-db18f889b2a1"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 2 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 2" id="59cd7d54-2c0c-40d3-b8cd-d720f1de175d"><con:settings/><con:config><script>log.info "==== Checking the logs for the first re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true);

</script></con:config></con:testStep><con:testStep type="groovy" name="Check message status-Failure" id="f26c171f-c6a3-47ef-9eea-01ad06d2ca4a"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")

def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Check send attempts-Value" id="2c6b97c7-e93f-497f-8126-7b0d71c29e48"><con:settings/><con:config><script>def side="c2"
def messageId=testRunner.testCase.getPropertyValue("lastMessageId")
def expectedValue=3

def test = new Domibus(log,null,context);
test.checkSendAttemptsValue(side,messageId,expectedValue)
test.finalize();


log.info "DONE"</script></con:config></con:testStep><con:testStep type="groovy" name="Reset Pmode Defaults" id="6fe89582-4703-4f2a-b14d-73eacde9d825" disabled="true"><con:settings/><con:config><script>PModeUtils.resetPmodeDefaultRest(context,log,testRunner,)</script></con:config></con:testStep><con:testStep type="groovy" name="Reset C2 properties" id="8858ad5b-6c13-49f1-973b-6af6560fd9aa" disabled="true"><con:settings/><con:config><script>// C2
def custPropName="domibus.msh.retry.cron";
def defPropValue="0/30 * * * * ?";
def propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
// Reset property value
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);</script></con:config></con:testStep><con:setupScript>Domibus.checkIfAnySmokeTestsFailed(testRunner, testCase, log)</con:setupScript><con:tearDownScript>def test = new Domibus(log,null,context);
test.cleanDBMessageIDStartsWith(testRunner.testCase.getPropertyValue("lastMessageId"))
test.finalize();
testRunner.testCase.testSteps['Reset Pmode Defaults'].run(testRunner, context);
testRunner.testCase.testSteps['Reset C2 properties'].run(testRunner, context);

//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>c3_default_pmode</con:name><con:value/></con:property><con:property><con:name>c2_default_pmode</con:name><con:value/></con:property><con:property><con:name>domibus.msh.retry.cron</con:name><con:value>0/30 * * * * ?</con:value></con:property><con:property><con:name>waitPropValue</con:name><con:value>65</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>2183</con:value></con:property><con:property><con:name>propertyCountC2</con:name><con:value>0</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>e494d665-45c0-11ed-94b2-2cf05db4a367@domibus.eu</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS030-SmartRetry Disabled-Monitoring Enabled-C3 Unreachable" searchProperties="true" id="a53d445f-8294-48fb-98ff-b884f5617529">
            <con:settings/>












            <con:testStep type="groovy" name="Clean FS plugin folders" id="6599fea6-01fa-4d56-be25-b41c41625b4c"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Pmode-C2-Retry Interval-Endpoint C3" id="3f42c8ab-7504-499c-add7-e41f1113febd"><con:settings/><con:config><script>def side="c2"
def nodename1="party"; def searchKey1="name"; def searchvalue1="red_gw"; def attTochange1="endpoint"; def newValue1="http://localhost:8888/domibus/services/msh"
def nodename2="receptionAwareness"; def searchKey2="name"; def searchvalue2="receptionAwareness"; def attTochange2="retry"; def newValue2="2;2;CONSTANT"

def parametersMap=[(nodename1):"$searchKey1#$searchvalue1#$attTochange1#$newValue1",(nodename2):"$searchKey2#$searchvalue2#$attTochange2#$newValue2"]

PModeUtils.updatePmodeParametersRest(side,context,log,testRunner,parametersMap)</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Properties-C2" id="d0727836-87f8-4f26-b423-d6ec02f40d15"><con:settings/><con:config><script>// Update retry cron to every 10 seconds
def custPropName="domibus.msh.retry.cron";
def propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "0/10 * * * * ?", context, log);
sleep(2000);

// Enable Monitoring C3 domibus-red
custPropName="domibus.monitoring.connection.party.enabled";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "domibus-red", context, log);
sleep(2000);

// Update cron job to monitor connection to every 10 seconds
custPropName="domibus.monitoring.connection.cron";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "0/20 * * * * ?", context, log);
sleep(2000);


// Disable smart retry C3 domibus-red
custPropName="domibus.smart.retry.enabled";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, " ", context, log);
sleep(2000);</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="1718fd3b-cbe2-4b72-b049-8c03c08d6057"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

def test = new Domibus(log,null,context)

test.storeLatestMessagesId(testRunner)

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",[],false);

test.waitFindAndUpdateLatestMessageIdIn(testRunner)

test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test Message Status" id="126e4e70-bf15-4228-a71b-4086da4c827a"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="02ce6ce1-b697-40a1-960e-a71c3a6e4046"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 1" id="b7bf9f6e-cf55-4787-a435-1a87152bd97a"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 1" id="4c4e8936-cbe8-44b5-b186-520ee1ee5144"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 1 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 1" id="721771c3-7293-4267-b540-9e2a5d34c155"><con:settings/><con:config><script>log.info "==== Checking the logs for the first re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true);

logValueList =  ["NullPointerException"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 2" id="abda8bd8-4ed2-4109-85a3-acaa485a9401"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 2" id="36c97407-9725-4725-bde6-7e2a4a2b4971"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 2 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 2" id="2a0f5201-3203-4c25-9517-bc8da60775c0"><con:settings/><con:config><script>log.info "==== Checking the logs for the second re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true);

logValueList =  ["NullPointerException"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);
</script></con:config></con:testStep><con:testStep type="groovy" name="Check message status-Failure" id="3d7b5fc9-365b-4dfa-bb11-f39a6ed6ed4d"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")

def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Check send attempts-Value" id="bd6806ff-56d7-48ad-b79e-4f1f600b51d5"><con:settings/><con:config><script>def side="c2"
def messageId=testRunner.testCase.getPropertyValue("lastMessageId")
def expectedValue=3

def test = new Domibus(log,null,context);
test.checkSendAttemptsValue(side,messageId,expectedValue)
test.finalize();


log.info "DONE"</script></con:config></con:testStep><con:testStep type="groovy" name="Reset Pmode Defaults" id="9887f716-a090-450b-8cf1-2085e991b248" disabled="true"><con:settings/><con:config><script>PModeUtils.resetPmodeDefaultRest(context,log,testRunner,)</script></con:config></con:testStep><con:testStep type="groovy" name="Reset C2 properties" id="f6af74a4-fcb0-4c3f-bdc1-dfdbf1fa21fe" disabled="true"><con:settings/><con:config><script>// C2
def custPropName="domibus.msh.retry.cron";
def defPropValue="0/30 * * * * ?";
def propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.monitoring.connection.party.enabled";
defPropValue=" ";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.monitoring.connection.cron";
defPropValue="0 0 0/2 ? * * *";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.smart.retry.enabled";
defPropValue=" ";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="2b7e22a1-50fe-4032-a963-0bf8e1e71cfb" disabled="true"><con:settings/><con:config><script>
def test = new Domibus(log,null,context)

test.storeLatestMessagesId(testRunner)
test.finalize()</script></con:config></con:testStep><con:setupScript>Domibus.checkIfAnySmokeTestsFailed(testRunner, testCase, log)</con:setupScript><con:tearDownScript>def test = new Domibus(log,null,context);
test.cleanDBMessageIDStartsWith(testRunner.testCase.getPropertyValue("lastMessageId"))
test.finalize();
testRunner.testCase.testSteps['Reset Pmode Defaults'].run(testRunner, context);
testRunner.testCase.testSteps['Reset C2 properties'].run(testRunner, context);

Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>waitPropValue</con:name><con:value>65</con:value></con:property><con:property><con:name>c2_default_pmode</con:name><con:value/></con:property><con:property><con:name>domibus.msh.retry.cron</con:name><con:value>0/30 * * * * ?</con:value></con:property><con:property><con:name>domibus.monitoring.connection.party.enabled</con:name><con:value/></con:property><con:property><con:name>domibus.monitoring.connection.cron</con:name><con:value>0 0 0/2 ? * * *</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>11951</con:value></con:property><con:property><con:name>domibus.smart.retry.enabled</con:name><con:value/></con:property><con:property><con:name>lastMessageId</con:name><con:value>5ca9507f-45c4-11ed-94b2-2cf05db4a367@domibus.eu</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS031-SmartRetry Enabled-Monitoring Disabled-C3 Unreachable-No History" searchProperties="true" id="cca45117-07f4-4395-872a-7048bee5346f">
            <con:settings/>












            <con:testStep type="groovy" name="Clean FS plugin folders" id="a029b7ae-6e6b-4549-90b2-8e1160f72511"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Pmode-C2-Retry Interval-Endpoint C3" id="17bbd31c-fa2a-419a-ac91-9da59bbefed3"><con:settings/><con:config><script>def side="c2"
def nodename1="party"; def searchKey1="name"; def searchvalue1="red_gw"; def attTochange1="endpoint"; def newValue1="http://localhost:8888/domibus/services/msh"
def nodename2="receptionAwareness"; def searchKey2="name"; def searchvalue2="receptionAwareness"; def attTochange2="retry"; def newValue2="2;2;CONSTANT"

def parametersMap=[(nodename1):"$searchKey1#$searchvalue1#$attTochange1#$newValue1",(nodename2):"$searchKey2#$searchvalue2#$attTochange2#$newValue2"]

PModeUtils.updatePmodeParametersRest(side,context,log,testRunner,parametersMap)</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Properties-C2" id="e7141931-6c94-42c8-8bdd-0835513fcdd3"><con:settings/><con:config><script>// Update retry cron to every 10 seconds
def custPropName="domibus.msh.retry.cron";
def propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "0/10 * * * * ?", context, log);
sleep(2000);

// Disable Monitoring C3 domibus-red
custPropName="domibus.monitoring.connection.party.enabled";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, " ", context, log);
sleep(2000);

// Update cron job to monitor connection to every 10 seconds
custPropName="domibus.monitoring.connection.cron";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "0/20 * * * * ?", context, log);
sleep(2000);


// Enable smart retry C3 domibus-red
custPropName="domibus.smart.retry.enabled";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "domibus-red", context, log);
sleep(2000);</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Monitoring History" id="09d5ea3e-50e5-41a1-b34b-3fac18ac6d5d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDatabaseTestMessagesAll()
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="4b67355f-3f22-49e2-89b7-7dcde7917136"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

def test = new Domibus(log,null,context)

test.storeLatestMessagesId(testRunner)

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",[],false);

test.waitFindAndUpdateLatestMessageIdIn(testRunner)

test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test Message Status" id="7d438e2a-8085-41a6-a909-bc760c147949"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="37805593-6c70-4db7-ad8d-3afcd090ba7c"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 1" id="a1d5ebec-d509-4406-950f-05190eae42fc"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 1" id="6857608f-d4ca-4d8b-bb31-00b6e81fe662"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 1 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 1" id="88fb8ef2-8316-473c-838f-6cef9ff950dd"><con:settings/><con:config><script>log.info "==== Checking the logs for the first re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true);

logValueList =  ["NullPointerException"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 2" id="aed895a2-a0a7-48ef-86f1-f00aaffea511"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 2" id="d8729f40-ed51-4253-8141-01ffb3a6f2c5"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 2 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 2" id="18522216-6cb5-4558-833a-0d3d130edf3b"><con:settings/><con:config><script>log.info "==== Checking the logs for the second re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true);

logValueList =  ["NullPointerException"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);
</script></con:config></con:testStep><con:testStep type="groovy" name="Check message status-Failure" id="8081222e-e4a2-4ef7-9633-b9cc4fc36e90"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")

def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Check send attempts-Value" id="36f0604f-0d29-468d-a9c1-0fa917a80635"><con:settings/><con:config><script>def side="c2"
def messageId=testRunner.testCase.getPropertyValue("lastMessageId")
def expectedValue=3

def test = new Domibus(log,null,context);
test.checkSendAttemptsValue(side,messageId,expectedValue)
test.finalize();


log.info "DONE"</script></con:config></con:testStep><con:testStep type="groovy" name="Reset Pmode Defaults" id="7a57e131-6126-407e-b266-3a1678240153" disabled="true"><con:settings/><con:config><script>PModeUtils.resetPmodeDefaultRest(context,log,testRunner,)</script></con:config></con:testStep><con:testStep type="groovy" name="Reset C2 properties" id="33de7e59-f699-4eb6-932a-4f0bde6fcd8f" disabled="true"><con:settings/><con:config><script>// C2
def custPropName="domibus.msh.retry.cron";
def defPropValue="0/30 * * * * ?";
def propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.monitoring.connection.party.enabled";
defPropValue=" ";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.monitoring.connection.cron";
defPropValue="0 0 0/2 ? * * *";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.smart.retry.enabled";
defPropValue=" ";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);</script></con:config></con:testStep><con:setupScript>Domibus.checkIfAnySmokeTestsFailed(testRunner, testCase, log)</con:setupScript><con:tearDownScript>def test = new Domibus(log,null,context);
test.cleanDBMessageIDStartsWith(testRunner.testCase.getPropertyValue("lastMessageId"))
test.finalize();
testRunner.testCase.testSteps['Reset Pmode Defaults'].run(testRunner, context);
testRunner.testCase.testSteps['Reset C2 properties'].run(testRunner, context);

Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>waitPropValue</con:name><con:value>65</con:value></con:property><con:property><con:name>c2_default_pmode</con:name><con:value/></con:property><con:property><con:name>domibus.msh.retry.cron</con:name><con:value>0/30 * * * * ?</con:value></con:property><con:property><con:name>domibus.monitoring.connection.party.enabled</con:name><con:value/></con:property><con:property><con:name>domibus.monitoring.connection.cron</con:name><con:value>0 0 0/2 ? * * *</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>14857</con:value></con:property><con:property><con:name>domibus.smart.retry.enabled</con:name><con:value/></con:property><con:property><con:name>lastMessageId</con:name><con:value>0fc9fbf9-45c6-11ed-94b2-2cf05db4a367@domibus.eu</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS032-SmartRetry Enabled-Monitoring Enabled-C3 Unreachable" searchProperties="true" id="a73b6194-9e6b-468d-bc97-697d06d4c42c">
            <con:settings/>












            <con:testStep type="groovy" name="Clean FS plugin folders" id="cb7d63a6-8d64-4bf8-b554-c2e688d3ba52"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Pmode-C2-Retry Interval-Endpoint C3" id="418da793-8b8a-48e5-a763-5391f98afde4"><con:settings/><con:config><script>def side="c2"
def nodename1="party"; def searchKey1="name"; def searchvalue1="red_gw"; def attTochange1="endpoint"; def newValue1="http://localhost:8888/domibus/services/msh"
def nodename2="receptionAwareness"; def searchKey2="name"; def searchvalue2="receptionAwareness"; def attTochange2="retry"; def newValue2="2;2;CONSTANT"

def parametersMap=[(nodename1):"$searchKey1#$searchvalue1#$attTochange1#$newValue1",(nodename2):"$searchKey2#$searchvalue2#$attTochange2#$newValue2"]

PModeUtils.updatePmodeParametersRest(side,context,log,testRunner,parametersMap)</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Properties-C2" id="6e57438a-f777-41d3-95aa-21c73510b5e4"><con:settings/><con:config><script>// Update retry cron to every 10 seconds
def custPropName="domibus.msh.retry.cron";
def propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "0/10 * * * * ?", context, log);
sleep(2000);

// Enable Monitoring C3 domibus-red
custPropName="domibus.monitoring.connection.party.enabled";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "domibus-red", context, log);
sleep(2000);

// Update cron job to monitor connection to every 10 seconds
custPropName="domibus.monitoring.connection.cron";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "0/20 * * * * ?", context, log);
sleep(2000);


// Enable smart retry C3 domibus-red
custPropName="domibus.smart.retry.enabled";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "domibus-red", context, log);
sleep(2000);</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="ca548249-d4ad-4ab5-a037-541438b5598b"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

def test = new Domibus(log,null,context)

test.storeLatestMessagesId(testRunner)

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",[],false);

test.waitFindAndUpdateLatestMessageIdIn(testRunner)

test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test Message Status" id="dd01f49e-e2c9-4ba8-8563-8bd2007e2a62"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="1bbdd9ab-659d-4361-8440-9f144e691a3b"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 1" id="ea29640e-13b9-4aee-88dd-c624a6acaa52"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 1" id="ed7629f9-f694-44a2-97f9-0f83c0d913d1"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 1 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 1" id="4a892f44-e386-4638-8dcd-0b8e90342cb7"><con:settings/><con:config><script>log.info "==== Checking the logs for the first re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);

logValueList =  ["NullPointerException"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 2" id="874211d7-a658-41aa-a94c-9a5b990da0f0"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 2" id="0a65ad58-20d3-40ce-92cd-7a4f9277068d"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 2 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 2" id="cb77401c-86a0-42df-88f1-6afc6c53b725"><con:settings/><con:config><script>log.info "==== Checking the logs for the second re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);

logValueList =  ["NullPointerException"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);
</script></con:config></con:testStep><con:testStep type="groovy" name="Check message status-Failure" id="75b0b250-341c-4087-96d8-e2a6c0bd6af1"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")

def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Check send attempts-Value" id="174fa03f-a229-4400-bae7-0a03019a7917"><con:settings/><con:config><script>def side="c2"
def messageId=testRunner.testCase.getPropertyValue("lastMessageId")
def expectedValue=3

def test = new Domibus(log,null,context);
test.checkSendAttemptsValue(side,messageId,expectedValue)
test.finalize();


log.info "DONE"</script></con:config></con:testStep><con:testStep type="groovy" name="Reset Pmode Defaults" id="ef9e97cb-9521-4df4-8131-4304d152370f" disabled="true"><con:settings/><con:config><script>PModeUtils.resetPmodeDefaultRest(context,log,testRunner,)</script></con:config></con:testStep><con:testStep type="groovy" name="Reset C2 properties" id="17da56da-ca47-405c-aef2-b5428d875eaf" disabled="true"><con:settings/><con:config><script>// C2
def custPropName="domibus.msh.retry.cron";
def defPropValue="0/30 * * * * ?";
def propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.monitoring.connection.party.enabled";
defPropValue=" ";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.monitoring.connection.cron";
defPropValue="0 0 0/2 ? * * *";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.smart.retry.enabled";
defPropValue=" ";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);</script></con:config></con:testStep><con:setupScript>Domibus.checkIfAnySmokeTestsFailed(testRunner, testCase, log)</con:setupScript><con:tearDownScript>def test = new Domibus(log,null,context);
test.cleanDBMessageIDStartsWith(testRunner.testCase.getPropertyValue("lastMessageId"))
test.finalize();
testRunner.testCase.testSteps['Reset Pmode Defaults'].run(testRunner, context);
testRunner.testCase.testSteps['Reset C2 properties'].run(testRunner, context);

Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>waitPropValue</con:name><con:value>65</con:value></con:property><con:property><con:name>c2_default_pmode</con:name><con:value/></con:property><con:property><con:name>domibus.msh.retry.cron</con:name><con:value>0/30 * * * * ?</con:value></con:property><con:property><con:name>domibus.monitoring.connection.party.enabled</con:name><con:value/></con:property><con:property><con:name>domibus.monitoring.connection.cron</con:name><con:value>0 0 0/2 ? * * *</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>17795</con:value></con:property><con:property><con:name>domibus.smart.retry.enabled</con:name><con:value/></con:property><con:property><con:name>lastMessageId</con:name><con:value>810430bc-45c6-11ed-94b2-2cf05db4a367@domibus.eu</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomFS033-SmartRetry Enabled-Monitoring Enabled-C3 Reachable" searchProperties="true" id="48983f1d-ad42-46ca-a15b-9d942d959c9b">
            <con:settings/>












            <con:testStep type="groovy" name="Clean FS plugin folders" id="8a76852f-f007-476d-adf7-b874b829485b"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Pmode-C2-Retry Interval-Remove tc20Action" id="495465eb-7b3b-4c31-92ec-a0d66a32872d"><con:settings/><con:config><script>def side="c2"
def nodename1="receptionAwareness"; def searchKey1="name"; def searchvalue1="receptionAwareness"; def attTochange1="retry"; def newValue1="2;2;CONSTANT"
def parametersMap=[(nodename1):"$searchKey1#$searchvalue1#$attTochange1#$newValue1"]
PModeUtils.updatePmodeParametersRest(side,context,log,testRunner,parametersMap)

side="c3"
nodename1="action"; searchKey1="name"; searchvalue1="tc20Action"; attTochange1="value"; newValue1="TC20Leg1random"
parametersMap=[(nodename1):"$searchKey1#$searchvalue1#$attTochange1#$newValue1"]
PModeUtils.updatePmodeParametersRest(side,context,log,testRunner,parametersMap)</script></con:config></con:testStep><con:testStep type="groovy" name="Update-Properties-C2" id="fa9c8dbf-54fe-40fe-a480-0367c4af5d22"><con:settings/><con:config><script>// Update retry cron to every 10 seconds
def custPropName="domibus.msh.retry.cron";
def propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "0/10 * * * * ?", context, log);
sleep(2000);

// Enable Monitoring C3 domibus-red
custPropName="domibus.monitoring.connection.party.enabled";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "domibus-red", context, log);
sleep(2000);

// Update cron job to monitor connection to every 10 seconds
custPropName="domibus.monitoring.connection.cron";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "0/20 * * * * ?", context, log);
sleep(2000);


// Enable smart retry C3 domibus-red
custPropName="domibus.smart.retry.enabled";
propValue=Domibus.getPropertyAtRuntime("C2",custPropName,context,log);
Domibus.setTestCaseCustProp(custPropName,propValue,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2", custPropName, "domibus-red", context, log);
sleep(2000);</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="36b64493-5e13-41d8-9cef-6ae8fe8df17d"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]

def test = new Domibus(log,null,context)

test.storeLatestMessagesId(testRunner)

FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","default",[],false);

test.waitFindAndUpdateLatestMessageIdIn(testRunner)

test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test Message Status" id="1e8baf4d-fde4-4648-a5ab-9680dae8aca8"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="915cbfcc-60f3-4b58-af78-a19ab32bfb0d"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 1" id="af43a834-8b7c-4ee5-9408-90c233a9460a"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 1" id="1d8b12d6-fcc9-4342-bef6-4783465ce2b4"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 1 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 1" id="81262fca-4a90-4d3d-b6bc-ae080b94c5f6"><con:settings/><con:config><script>log.info "==== Checking the logs for the first re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true);

logValueList =  ["NullPointerException"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Starting line in Logfile 2" id="75570cef-1a25-431f-8a98-e1971b37fad7"><con:settings/><con:config><script>LogUtils.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)


</script></con:config></con:testStep><con:testStep type="groovy" name="Wait for retry event 2" id="5336216d-9aa1-4bb7-9218-bcc0ac4e0046"><con:settings/><con:config><script>def waitPropValue=context.expand('${#TestCase#waitPropValue}')

log.info "==== Waiting for the retry timeout 2 to expire"
sleep((waitPropValue as Integer)*1000);
log.info "==== Done"
</script></con:config></con:testStep><con:testStep type="groovy" name="Check sending message Log 2" id="96453242-22bc-47dd-a6b9-55f2a2281e6b"><con:settings/><con:config><script>log.info "==== Checking the logs for the second re-send attempt"

def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def logValueList =  ["EbMS3 exception occurred when sending message with ID.*$messageId"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true);

logValueList =  ["NullPointerException"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,false);
</script></con:config></con:testStep><con:testStep type="groovy" name="Check message status-Failure" id="054036fa-dbf6-4d7c-a316-311f529c9efe"><con:settings/><con:config><script>def messageId = testRunner.testCase.getPropertyValue("lastMessageId")

def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE","",messageId)
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Check send attempts-Value" id="d22adccf-fe92-429d-8507-9b797d41bc81"><con:settings/><con:config><script>def side="c2"
def messageId=testRunner.testCase.getPropertyValue("lastMessageId")
def expectedValue=3

def test = new Domibus(log,null,context);
test.checkSendAttemptsValue(side,messageId,expectedValue)
test.finalize();


log.info "DONE"</script></con:config></con:testStep><con:testStep type="groovy" name="Reset Pmode Defaults" id="9402c04d-026f-40ed-a92e-39ef2666840a" disabled="true"><con:settings/><con:config><script>PModeUtils.resetPmodeDefaultRest(context,log,testRunner,)</script></con:config></con:testStep><con:testStep type="groovy" name="Reset C2 properties" id="39796de7-6883-48c3-90c4-9ce912541ba8" disabled="true"><con:settings/><con:config><script>// C2
def custPropName="domibus.msh.retry.cron";
def defPropValue="0/30 * * * * ?";
def propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.monitoring.connection.party.enabled";
defPropValue=" ";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.monitoring.connection.cron";
defPropValue="0 0 0/2 ? * * *";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);


custPropName="domibus.smart.retry.enabled";
defPropValue=" ";
propValue=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
Domibus.changePropertyAtRuntime("C2",custPropName,Domibus.ifEmptyReturnDef(propValue,defPropValue),context,log);
sleep(2000);</script></con:config></con:testStep><con:setupScript>Domibus.checkIfAnySmokeTestsFailed(testRunner, testCase, log)</con:setupScript><con:tearDownScript>def test = new Domibus(log,null,context);
test.cleanDBMessageIDStartsWith(testRunner.testCase.getPropertyValue("lastMessageId"))
test.finalize();
testRunner.testCase.testSteps['Reset Pmode Defaults'].run(testRunner, context);
testRunner.testCase.testSteps['Reset C2 properties'].run(testRunner, context);

Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>waitPropValue</con:name><con:value>65</con:value></con:property><con:property><con:name>c2_default_pmode</con:name><con:value/></con:property><con:property><con:name>domibus.msh.retry.cron</con:name><con:value>0/30 * * * * ?</con:value></con:property><con:property><con:name>domibus.monitoring.connection.party.enabled</con:name><con:value/></con:property><con:property><con:name>domibus.monitoring.connection.cron</con:name><con:value>0 0 0/2 ? * * *</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>22639</con:value></con:property><con:property><con:name>domibus.smart.retry.enabled</con:name><con:value/></con:property><con:property><con:name>c3_default_pmode</con:name><con:value/></con:property><con:property><con:name>lastMessageId</con:name><con:value>dab7560e-45c7-11ed-94b2-2cf05db4a367@domibus.eu</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:setupScript>// Disable role validation
Domibus.changePropertyAtRuntime("C2", "domibus.partyinfo.roles.validation.enabled", "true", context, log);
Domibus.changePropertyAtRuntime("C3", "domibus.partyinfo.roles.validation.enabled", "true", context, log);
sleep(5000);</con:setupScript></con:testSuite><con:testSuite id="6a6973ad-148d-4ac5-bfee-b920f180e0b3" name="Multitenancy-FS-Automated"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="44d870fb-f288-4b4e-8b37-f090e0ce2b04" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set custom properties-Multitenancy4D-Multitenancy2D-Main Branch" id="648cd58c-7443-4182-b33d-f9fe90a8e550"><con:settings/><con:config><script><![CDATA[// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus");

// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus");

// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue_default?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red_default?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom1":{"site":"C2","domainName":"domibus_c2dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom2":{"site":"C2","domainName":"domibus_c2dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom3":{"site":"C2","domainName":"domibus_c2dom3","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom3?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C2Dom4":{"site":"C2","domainName":"domibus_c2dom4","domNo":4,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom4?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom1":{"site":"C3","domainName":"domibus_c3dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom1?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"},
"C3Dom2":{"site":"C3","domainName":"domibus_c3dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c3dom2?useLegacyDatetimeCode=false&serverTimezone=UTC","dbUser":"edelivery","dbPassword":"edelivery"}
}''');

// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false");

// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "4");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");

// Set C2 and C3 deployment paths
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/1-mainBranch/senderMulti/domibus/");
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/1-mainBranch/receiverMulti/domibus/");

testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathBlue", "C:/domibus/1-mainBranch/senderMulti/fs_plugin_data");
testRunner.testCase.testSuite.project.setPropertyValue("fsFilesPathRed", "C:/domibus/1-mainBranch/receiverMulti/fs_plugin_data");

log.info "Update done.";

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="43472c80-5455-4205-99ee-6e276a53c9ae"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "4");
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2");
log.info "multitenancyModeC2 custom property set to 4.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="32e020c0-876d-47fb-8c76-7dfc6ea856fc"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set domains names" id="cdcaef57-1bb6-4993-aeca-2afc14b74da3"><con:settings/><con:config><script>// Set test suite properties with domains names
def test = new Domibus(log,null,context);
test.parseDomainsNamesIntoTSproperty(testRunner);
test.finalize();


</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="51c3f839-6a73-4290-afa5-7790e34e04e9"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Copy domibus-properties files" id="365e7a67-f777-4696-886a-027a9483eaff"><con:settings/><con:config><script>// C2
log.info "===================================================";
log.info " Start copying conf files for C2 domains"
log.info "===================================================";
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\conf\\domibus_C2Dom1-domibus.properties";
def dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\domibus_c2dom1-domibus.properties";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\conf\\domibus_C2Dom2-domibus.properties";
dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\domibus_c2dom2-domibus.properties";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\conf\\a-domibus.properties";
dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\a-domibus.properties";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\conf\\length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc-domibus.properties";
dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc-domibus.properties";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\conf\\default-domibus.properties";
dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\default-domibus.properties";
Domibus.copyFile(source,dest,log);
// ----------------------------------
log.info "===================================================";
log.info " End copying conf files for C2 domains"
log.info "===================================================";

// C3
log.info "---------------------------------------------------";
log.info " Start copying conf files for C3 domains"
log.info "---------------------------------------------------";
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\conf\\domibus_C3Dom1-domibus.properties";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\domibus_c3dom1-domibus.properties";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\conf\\domibus_C3Dom2-domibus.properties";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\domibus_c3dom2-domibus.properties";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\conf\\domibus_C3Dom2-domibus.properties";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\default-domibus.properties";
Domibus.copyFile(source,dest,log);
// ----------------------------------
log.info "---------------------------------------------------";
log.info " End copying conf files for C3 domains"
log.info "---------------------------------------------------";</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="9d1202c2-00d7-4f0d-8b05-9db72464c76e"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Copy Keystores Files" id="be38e24a-3374-4149-820a-44e12217f6fc"><con:settings/><con:config><script>// C2
log.info "===================================================";
log.info " Start copying conf files for C2 domains"
log.info "===================================================";
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_keystore.jks";
def dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\keystores\\gateway_keystore.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_keystore_dom1.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_keystore_dom1.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_keystore_dom2.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_keystore_dom2.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_keystore_dom3.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_keystore_dom3.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_keystore_dom4.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_keystore_dom4.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
log.info "===================================================";
log.info " End copying conf files for C2 domains"
log.info "===================================================";

// C3
log.info "---------------------------------------------------";
log.info " Start copying conf files for C3 domains"
log.info "---------------------------------------------------";
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\keystores\\gateway_keystore.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_keystore.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\keystores\\gateway_keystore_dom1.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_keystore_dom1.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\keystores\\gateway_keystore_dom2.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_keystore_dom2.jks";
Domibus.copyFile(source,dest,log);
log.info "---------------------------------------------------";
log.info " End copying conf files for C3 domains"
log.info "---------------------------------------------------";</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="3c6b055c-a2c1-4f73-bd83-caace3026d40"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Copy truststores files" id="cc61cb48-732b-457b-b87a-a736c3f1e543"><con:settings/><con:config><script>// C2
log.info "===================================================";
log.info " Start copying conf files for C2 domains"
log.info "===================================================";
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_truststore.jks";
def dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\keystores\\gateway_truststore.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_truststore_dom1.jks";
dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\keystores\\gateway_truststore_dom1.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_truststore_dom2.jks";
dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\keystores\\gateway_truststore_dom2.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_truststore_dom3.jks";
dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\keystores\\gateway_truststore_dom3.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C2\\keystores\\gateway_truststore_dom4.jks";
dest = context.expand('${#Project#pathBlue}') +"conf\\domibus\\keystores\\gateway_truststore_dom4.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
log.info "===================================================";
log.info " End copying conf files for C2 domains"
log.info "===================================================";

// C3
log.info "---------------------------------------------------";
log.info " Start copying conf files for C3 domains"
log.info "---------------------------------------------------";
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\keystores\\gateway_truststore.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_truststore.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\keystores\\gateway_truststore_dom1.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_truststore_dom1.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\C3\\keystores\\gateway_truststore_dom2.jks";
dest = context.expand('${#Project#pathRed}') +"conf\\domibus\\keystores\\gateway_truststore_dom2.jks";
Domibus.copyFile(source,dest,log);
// ----------------------------------
log.info "---------------------------------------------------";
log.info " End copying conf files for C3 domains"
log.info "---------------------------------------------------";</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="baf6bbaa-80c8-44a2-8fbe-6d621499e327"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload pmodes" id="7462dc02-d574-4207-bc32-756e4cde28d9"><con:settings/><con:config><script>def superUser=context.expand('${#Project#superAdminUsername}');
def superPassword=context.expand('${#Project#superAdminPassword}');

// C2
log.info "===================================================";
log.info " Start uploading pmodes for C2 domains"
log.info "===================================================";
PModeUtils.uploadPmode("C2","special","\\multitenancy\\C2\\pmodes\\domibus-pmode-blue-dom0.xml",context,log,"Default","successfully",null,superUser,superPassword);
sleep(3000);
// ----------------------------------
PModeUtils.uploadPmode("C2","special","\\multitenancy\\C2\\pmodes\\domibus-pmode-blue-dom1.xml",context,log,Domibus.retDomName("C2","1",testRunner),"successfully",null,superUser,superPassword);
sleep(3000);
// ----------------------------------
PModeUtils.uploadPmode("C2","special","\\multitenancy\\C2\\pmodes\\domibus-pmode-blue-dom2.xml",context,log,Domibus.retDomName("C2","2",testRunner),"successfully",null,superUser,superPassword);
sleep(3000);
// ----------------------------------
PModeUtils.uploadPmode("C2","special","\\multitenancy\\C2\\pmodes\\domibus-pmode-blue-dom3.xml",context,log,Domibus.retDomName("C2","3",testRunner),"successfully",null,superUser,superPassword);
sleep(3000);
// ----------------------------------
PModeUtils.uploadPmode("C2","special","\\multitenancy\\C2\\pmodes\\domibus-pmode-blue-dom4.xml",context,log,Domibus.retDomName("C2","4",testRunner),"successfully",null,superUser,superPassword);
sleep(3000);
// ----------------------------------
log.info "===================================================";
log.info " End uploading pmodes for C2 domains"
log.info "===================================================";

// C3
log.info "---------------------------------------------------";
log.info " Start uploading pmodes for C3 domains"
log.info "---------------------------------------------------";
PModeUtils.uploadPmode("C3","special","\\multitenancy\\C3\\pmodes\\domibus-pmode-red-dom0.xml",context,log,"Default","successfully",null,superUser,superPassword);
sleep(3000);
// ----------------------------------
PModeUtils.uploadPmode("C3","special","\\multitenancy\\C3\\pmodes\\domibus-pmode-red-dom1.xml",context,log,Domibus.retDomName("C3","1",testRunner),"successfully",null,superUser,superPassword);
sleep(3000);
// ----------------------------------
PModeUtils.uploadPmode("C3","special","\\multitenancy\\C3\\pmodes\\domibus-pmode-red-dom2.xml",context,log,Domibus.retDomName("C3","2",testRunner),"successfully",null,superUser,superPassword);
sleep(3000);
// ----------------------------------
log.info "---------------------------------------------------";
log.info " End uploading pmodes for C3 domains"
log.info "---------------------------------------------------";</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="8e6c32cf-e6de-461d-8cb6-8423203d55eb"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload truststores" id="ecbd243a-b3ab-4c17-9bc3-125c372ac562"><con:settings/><con:config><script>def superUser=context.expand('${#Project#superAdminUsername}');
def superPassword=context.expand('${#Project#superAdminPassword}');


// C2
log.info "===================================================";
log.info " Start uploading truststores for C2 domains"
log.info "===================================================";
TruststoreUtils.uploadTruststore("C2","special","\\multitenancy\\C2\\keystores\\gateway_truststore.jks",context,log,"default","successfully","test123",superUser,superPassword);
sleep(3000);
// ----------------------------------
TruststoreUtils.uploadTruststore("C2","special","\\multitenancy\\C2\\keystores\\gateway_truststore_dom1.jks",context,log,Domibus.retDomName("C2","1",testRunner),"successfully","test123",superUser,superPassword);
sleep(3000);
// ----------------------------------
TruststoreUtils.uploadTruststore("C2","special","\\multitenancy\\C2\\keystores\\gateway_truststore_dom2.jks",context,log,Domibus.retDomName("C2","2",testRunner),"successfully","test123",superUser,superPassword);
sleep(3000);
// ----------------------------------
TruststoreUtils.uploadTruststore("C2","special","\\multitenancy\\C2\\keystores\\gateway_truststore_dom3.jks",context,log,Domibus.retDomName("C2","3",testRunner),"successfully","test123",superUser,superPassword);
sleep(3000);
// ----------------------------------
TruststoreUtils.uploadTruststore("C2","special","\\multitenancy\\C2\\keystores\\gateway_truststore_dom4.jks",context,log,Domibus.retDomName("C2","4",testRunner),"successfully","test123",superUser,superPassword);
sleep(3000);
// ----------------------------------
log.info "===================================================";
log.info " End uploading truststores for C2 domains"
log.info "===================================================";

// C3
log.info "---------------------------------------------------";
log.info " Start uploading truststores for C3 domains"
log.info "---------------------------------------------------";
TruststoreUtils.uploadTruststore("C3","special","\\multitenancy\\C3\\keystores\\gateway_truststore.jks",context,log,"default","successfully","test123",superUser,superPassword);
sleep(3000);
// ----------------------------------
TruststoreUtils.uploadTruststore("C3","special","\\multitenancy\\C3\\keystores\\gateway_truststore_dom1.jks",context,log,Domibus.retDomName("C3","1",testRunner),"successfully","test123",superUser,superPassword);
sleep(3000);
// ----------------------------------
TruststoreUtils.uploadTruststore("C3","special","\\multitenancy\\C3\\keystores\\gateway_truststore_dom2.jks",context,log,Domibus.retDomName("C3","2",testRunner),"successfully","test123",superUser,superPassword);
sleep(3000);
// ----------------------------------
log.info "---------------------------------------------------";
log.info " End uploading truststores for C3 domains"
log.info "---------------------------------------------------";</script></con:config></con:testStep><con:testStep type="delay" name="D6" id="16c79421-da25-46bf-af22-29afaaae9c05"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Create users" id="fde4fea4-d839-41f9-93ec-fd81c3536f6c"><con:settings/><con:config><script>def userC1DomDefault=context.expand('${#Project#userC1DomDefault}');
def userC1Dom1=context.expand('${#Project#userC1Dom1}');
def userC1Dom2=context.expand('${#Project#userC1Dom2}');
def userC1Dom2SelfC4=context.expand('${#Project#userC1Dom2SelfC4}');
def userC1Dom3=context.expand('${#Project#userC1Dom3}');
def userC1Dom4=context.expand('${#Project#userC1Dom4}');
def userC4DomDefault=context.expand('${#Project#userC4DomDefault}');
def userC4Dom1=context.expand('${#Project#userC4Dom1}');
def userC4Dom2=context.expand('${#Project#userC4Dom2}');
def usersPassword=context.expand('${#Project#usersPassword}');
def superUser=context.expand('${#Project#superAdminUsername}');
def superPassword=context.expand('${#Project#superAdminPassword}');
def c1OriginalUser=context.expand('${#Project#c1OriginalUser}');
def c4OriginalUser=context.expand('${#Project#c4OriginalUser}');

// Create users in C2
log.info "===================================================";
log.info " Start creating plugin users for C2 domains"
log.info "===================================================";
Domibus.addPluginUser("C2",context,log,Domibus.retDomName("C2","0",testRunner),"ROLE_USER",userC1DomDefault,usersPassword,c1OriginalUser,superUser,superPassword);
Domibus.addPluginUser("C2",context,log,Domibus.retDomName("C2","1",testRunner),"ROLE_USER",userC1Dom1,usersPassword,c1OriginalUser,superUser,superPassword);
Domibus.addPluginUser("C2",context,log,Domibus.retDomName("C2","2",testRunner),"ROLE_USER",userC1Dom2,usersPassword,c1OriginalUser,superUser,superPassword);
Domibus.addPluginUser("C2",context,log,Domibus.retDomName("C2","2",testRunner),"ROLE_USER",userC1Dom2SelfC4,usersPassword,c4OriginalUser,superUser,superPassword);
Domibus.addPluginUser("C2",context,log,Domibus.retDomName("C2","3",testRunner),"ROLE_USER",userC1Dom3,usersPassword,c1OriginalUser,superUser,superPassword);
Domibus.addPluginUser("C2",context,log,Domibus.retDomName("C2","4",testRunner),"ROLE_USER",userC1Dom4,usersPassword,c1OriginalUser,superUser,superPassword);
log.info "===================================================";
log.info " END creating plugin users for C2 domains"
log.info "===================================================";

sleep(3000);

log.info "---------------------------------------------------";
log.info " Start creating plugin users for C3 domains"
log.info "---------------------------------------------------";
// Create users in C3
Domibus.addPluginUser("C3",context,log,Domibus.retDomName("C3","0",testRunner),"ROLE_USER",userC4DomDefault,usersPassword,c4OriginalUser,superUser,superPassword);
Domibus.addPluginUser("C3",context,log,Domibus.retDomName("C3","1",testRunner),"ROLE_USER",userC4Dom1,usersPassword,c4OriginalUser,superUser,superPassword);
Domibus.addPluginUser("C3",context,log,Domibus.retDomName("C3","2",testRunner),"ROLE_USER",userC4Dom2,usersPassword,c4OriginalUser,superUser,superPassword);</script></con:config></con:testStep><con:testStep type="delay" name="D7" id="bda1199c-ad9c-49e8-ab6a-a4f95df5b707"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set messages filters" id="fa3e8526-6973-46e3-812c-138b7f9b474f"><con:settings/><con:config><script>def superUser=context.expand('${#Project#superAdminUsername}');
def superPassword=context.expand('${#Project#superAdminPassword}');

// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"Default",superUser,superPassword);
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,Domibus.retDomName("C2","1",testRunner),superUser,superPassword);
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,Domibus.retDomName("C2","2",testRunner),superUser,superPassword);
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,Domibus.retDomName("C2","3",testRunner),superUser,superPassword);
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,Domibus.retDomName("C2","4",testRunner),superUser,superPassword);

// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"Default",superUser,superPassword);
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,Domibus.retDomName("C3","1",testRunner),superUser,superPassword);
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,Domibus.retDomName("C3","2",testRunner),superUser,superPassword);</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6ba940ef-73d5-4cfd-90cb-b5bbad737133" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX33-Multitenancy-Tenant selection-Outgoing message-Default domain-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configration" id="25a38499-eded-4ce8-b50e-771fe3a842c5" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- general schema is created.
- Multitenancy is configured for C2.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (0,0).
- Plugin security is enabled.
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="c1d0a5b5-dc27-46da-9a75-5048095a9efa"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="93556e3f-4f0d-4039-826c-cc1c8d0686e9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="66e3275f-bb22-4d2a-8075-2a5749f8e19b"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2DomDefault\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2DomDefault\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\default-default\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2DomDefault\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="7344d173-f79a-412f-b1ba-a51987c98444"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="217eabd3-6aec-47b4-8777-1f0d87bf0b3b"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded",,"C2Default","C3Default",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>0</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>4</con:value></con:property></con:properties></con:testCase><con:testCase id="9141457d-efed-407f-911f-ca66327a34dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX34-Multitenancy-Tenant selection-Outgoing message-Default properties-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="f1877e7e-50f7-4f0e-86c7-c6a9d5772466" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain "domibus_C2Dom1" is configured for C2.
- No specific properties present for the domain domibus_C2Dom1 (except for mandatory Keystore/Truststore properties).
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (1,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1".
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="0f7205d7-e47f-4e23-a3ef-04c349c2da95"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Default");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="81d7e07e-9f29-4dca-be32-2c0109d75df9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="3ef86456-94b8-4c60-b3ec-9fcdf0ef8813"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-default\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="4ccf9f84-b8ff-435b-934f-305eee401c9a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="2eae22f2-fc2a-4e5e-a00f-e8004f082caf"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Default",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>4</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>4</con:value></con:property></con:properties></con:testCase><con:testCase id="48b71b39-a3fa-4e17-bdf1-0768278229d6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX35-Multitenancy-Tenant selection-Outgoing message-Select correct-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="902665e0-9c0e-4881-8d08-ff881ccd554f" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain "domibus_C2Dom1" is configured for C2.
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1".
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="4f1f356c-6b48-4c85-bcf5-ef0d59dbb4cf"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Default");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="d28d5198-c7a2-4c7d-a185-24349d2ffcdf"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="31ec43a9-2d0a-4745-ace6-5731728a0127"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);


// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);


// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-default\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="d9d7c197-9188-4038-94f1-e056ed71540d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="d3fe8b9e-850d-4c7a-b23a-19c660e27717"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Default",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>0</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property></con:properties></con:testCase><con:testCase id="baaa06f5-d41b-460a-a1ff-1be9acb9c4c5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX36-Multitenancy-Tenant selection-Outgoing message-Select wrong-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="76c62f06-4396-46b9-8626-bde2e1066400" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain "domibus_C2Dom1" is configured for C2.
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1".
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="3198bf8e-2b74-4d32-b348-aed6c940035f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Default");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="e1d93f1c-10b5-44a8-9661-3c732927e427"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="05a7b3ec-73a9-4c4a-a5e6-0e892b58e052"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom2\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom2\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain2-default\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom2\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="f88584af-55de-49ea-a066-3620b79f1611"><con:settings/><con:config><delay>140000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="89d3f13a-61f2-4367-bdcb-81a8246425f6"><con:settings/><con:config><script>def gap=0;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Default",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>8</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>8</con:value></con:property></con:properties></con:testCase><con:testCase id="d9ec0295-9699-4efd-a24d-479de5053269" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX37-Multitenancy-Tenant selection-Outgoing message-Domain name length-Min-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="e7f9e835-e9de-45b0-a230-0b8f91232096" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain with name "a" is configured for C2.
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (3,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1".
- Create plugin authentication user on C2: "userC1C2Dom3" linked to "originalSender" and domain "a".
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="cc33279d-477a-4e75-a0a2-117b64aa452c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom3","C3Default");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="7811a137-383d-41d2-bd9d-c019e878cab9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="a137a224-fc12-47d8-886d-527264431e1d"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom3\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom3\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain3-default\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom3\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="4fe441fe-77b5-433e-aa37-e2130140be97"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="caf255cd-fd79-412f-b2ea-f78e504dd2b4"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom3","C3Default",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>0</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>8</con:value></con:property></con:properties></con:testCase><con:testCase id="b376abcb-547b-48e9-ad8a-d9142fbb01e1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX38-Multitenancy-Tenant selection-Outgoing message-Domain name length-Max limit-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="e7a10ace-195a-4d43-8848-3a1e1ad691dd" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain with name.length=50 is configured for C2 (domain_equal_max).
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (3,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1".
- Create plugin authentication user on C2: "userC1C2Dom3" linked to "originalSender" and domain "domain_equal_max".
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="3006d6d1-c69d-4d9b-9156-55b2eccc4902"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom4","C3Default");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="e71bf1a2-3f31-4731-a0d9-87a5c4a80d6c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="715716b6-3830-4eba-9582-ec7911de6817"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom4\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom4\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain4-default\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom4\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="d9e1dd97-fba5-417b-936d-40048a89c130"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="f239a97c-38a5-4f0f-87aa-f8f42b3f3b62"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom4","C3Default",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>0</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property></con:properties></con:testCase><con:testCase id="b5eee619-6e8e-418e-ac30-65b84b6496be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX41-Multitenancy-Tenant selection-Outgoing message-Basic flow-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="b8d03de9-c96f-4e38-b40b-53f7af340763" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2".
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - C3Dom2" id="47f5e8fa-c585-4b47-9bee-f5bad30a6b63"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom2");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="a6fe906a-cbd0-4bbc-ad4d-828b210ec78e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="effae5aa-f22f-4147-8d11-b7eed69409d5"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-domain2\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="8cea0b1e-c9e5-40cc-9762-9308d32fe983"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends - C3Dom2" id="5e3d7c2d-a4dd-451c-900e-939856a5cf62"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom2",3,1);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="a88176fc-350e-4d67-b431-529b1c4c3900"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - C3Dom1" id="b52e2800-5cbd-4bcd-bcd5-e397c837c6e7"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom1");</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="3b3b23eb-4711-4430-b3bf-0b2ae66bfd35"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="01ba49e8-6173-49e8-a1c1-bd650812727e"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-domain2\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="25bbd470-249f-470c-bb3c-c9e67633dcf7"><con:settings/><con:config><delay>140000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends - C3Dom1" id="ef33f2fd-9831-4ddd-b66d-7957ec16e529"><con:settings/><con:config><script>def gap=0;
def count1=0;
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom1",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>2</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property></con:properties></con:testCase><con:testCase id="f7140fed-245c-4970-ac21-af05231c56f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX48-Multitenancy-Tenant selection-Incoming message-Domain found-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="2fdf7c1f-4936-4510-8ecd-c09db1b8525a" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2".
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="1b6e4ef9-7c46-421c-a3c9-bca007a37ac4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom2");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="e54c5f2c-fe64-462d-bbf4-1fa14e9bfdc2"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="052aa15f-e6c0-4923-9b36-39bf68429c30"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-domain2\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="967b9e66-6a55-41a8-b773-bb405aa4b6ac"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="657ecd19-b21c-4d38-9cc0-7cac374562a5"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom2",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>4</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>4</con:value></con:property></con:properties></con:testCase><con:testCase id="75c221d6-15b8-44b3-a92a-2b7b00e96952" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX49-Multitenancy-Tenant selection-Incoming message-Domain not found-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="d6328569-5fbd-497a-82f0-145eded49f01" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2".
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="74c07b70-20ec-4899-9857-3d4848a5b539"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom2");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="39eb6c29-663a-4019-8c8e-0a5aa40484c7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="33a99e40-3031-4c8c-add4-3652b558cd32"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-domainVoid\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="36d7d5b2-86c7-4cf5-b84f-efd642713ee5"><con:settings/><con:config><delay>140000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="5a0c77d7-7f54-416e-bc04-60a1ed50417f"><con:settings/><con:config><script>def gap=0;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom2",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>6</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property></con:properties></con:testCase><con:testCase id="a0f50c0a-77e5-4313-9ed6-4fd5de78fea5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX50-Multitenancy-Tenant selection-Incoming message-Domain wrong-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="4ed34cec-833a-433a-9950-174283814d90" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2".
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="381577a9-9ba6-41d8-bb29-cea0ac1a3308"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom1");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="c90089f8-6e71-4d10-8d26-0c7b0a9dd5c2"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="44bbacf6-1ffe-41e0-9d25-38ecbcfc0a98"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-domain1\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="23b2445f-ef06-497d-be7e-455273d99921"><con:settings/><con:config><delay>140000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends" id="ad0f261f-00d9-4d3c-8304-0876e0743f1f"><con:settings/><con:config><script>def gap=0;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom1",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>6</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property></con:properties></con:testCase><con:testCase id="e101114b-29a9-4dcf-b718-0b22d009b478" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX59-Multitenancy-Pull MEP-Basic flow-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="b694b456-e318-4d43-8a3b-5cce166d270b" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2".
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - C3Dom2" id="c7c5c696-6da1-4726-be29-60d4af970fd6"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom2");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="63a77f11-4691-48ca-93c4-e493932eb63d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="1beaa8b6-d209-4e82-b15c-0a7121ec0f2d"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-domain2Pull\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="086131b6-4b24-4acf-baaa-781c49c804aa"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends - C3Dom2" id="9ff80155-721a-48b1-811c-95045dc938ef"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom2",3,1);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="2ed8522c-053b-478f-a497-1385c021abab"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - C3Dom1" id="3e9988a5-a499-4d0e-9e89-15489045513a"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom1");</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="c08b64bd-9fa8-4045-af3f-b418927d2751"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="dbbbe9fd-41f3-4a42-90c7-96a8b01bbf4b"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\Test_file.xml";
def dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\Test_file.xml";
Domibus.copyFile(source,dest,log);

// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\fileSmall.pdf";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\fileSmall.pdf";
Domibus.copyFile(source,dest,log);

// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\multitenancy\\fsplugin\\domain1-domain2Pull\\metadata.xml";
dest = context.expand('${#Project#fsFilesPathBlue}')+"\\C2Dom1\\OUT\\metadata.xml";
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="d6c9fded-e7e6-4839-8ae1-2aa93e8b78b1"><con:settings/><con:config><delay>140000</delay></con:config></con:testStep><con:testStep type="groovy" name="Wait until message exchange ends - C3Dom1" id="692736d6-10a9-4b84-923c-862ad5c71a81"><con:settings/><con:config><script>def gap=0;
def count1=0;
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom1",3,1);</script></con:config></con:testStep><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>10</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property></con:properties></con:testCase><con:testCase id="249dde6f-0b76-423b-b11f-e49eef6ba8a2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomXXX80-EDELIVERY-4354 and EDELIVERY-4385 - Multitenancy" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="48751264-6fec-4033-8168-6c84f8281249" disabled="true"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2".
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner)
</script></con:config></con:testStep><con:testStep type="groovy" name="Save Current cxf log level" id="c2c88a39-2458-46ba-8c98-c6236d875ca7" disabled="true"><con:settings/><con:config><script>def custPropName="org.apache.cxf";
// Get Domibus package log level
def propValueC2=Domibus.getLogLevel("C2",context,log,custPropName);

// Set test case custom property
Domibus.setTestCaseCustProp(custPropName,propValueC2,log,context,testRunner);


</script></con:config></con:testStep><con:testStep type="groovy" name="Set cxf log level to INFO" id="bd7f608e-50b7-4e25-bb14-3b66763a5599" disabled="true"><con:settings/><con:config><script>Domibus.setLogLevel("C2",context,log,"org.apache.cxf","INFO");</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - Default cid" id="8c7fb304-3782-45f1-b5c3-501aa0702877"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - Default cid" id="c4bc6726-3736-4212-a49a-db2524779f66"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SENDER:"domibus-blue-dom1",RECEIVER:"domibus-red-dom2",AGR_TYPE:" ",AGR:"domain1-domain2",SRV_TYPE:"tc8",SRV:"bdx:noprocess",ACTION:"TC8Leg1",MPC:"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/defaultMPC"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","domibus_c2dom1",parametersMap);

</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - Default cid" id="aa338a8a-adfa-40a4-b0a4-e6b558803c9a"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom2",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="831e288a-d81e-4445-a20d-b3609f3eb88b"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test - Default cid" id="56553b6c-e8be-43a3-8c7b-171930728e5e"><con:settings/><con:config><script>def logValueList =  ["PartInfo.*href.*=.*cid:message"];

LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner,true,"domibus_c2dom1");</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="e1d6939b-79ea-4894-8d53-4ff55d24e47b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - cid from metadata file 1" id="d45c9a6e-66b3-47c8-8141-603e5241ca2d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - cid from metadata file 1" id="dcb07733-8116-4dbc-af45-c44c325ddb75"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SENDER:"domibus-blue-dom1",RECEIVER:"domibus-red-dom2",AGR_TYPE:" ",AGR:"domain1-domain2",SRV_TYPE:"tc8",SRV:"bdx:noprocess",ACTION:"TC8Leg1",CID:"cid:messagefrompp",MPC:"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/defaultMPC"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withmime","domibus_c2dom1",parametersMap);</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - cid from metadata file 1" id="6aab77c5-85cf-46bf-b333-b83528acb299"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom2",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="d1f7667d-e4a1-4157-84c3-7c5e81799688"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test - cid from metadata file 1" id="ef64fd70-49e8-4d91-a43d-6c60a01c727c"><con:settings/><con:config><script>def logValueList =  ["PartInfo.*href.*=.*cid:messagefrompp","Property.name.*=.*MimeType.*text/xml"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="ee985e11-d875-45d1-8319-6a4092e4a4ae"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Configure new cid" id="31fce04f-f030-41a3-9c89-8dcf5476573d"><con:settings/><con:config><script>Domibus.changePropertyAtRuntime("C2", "fsplugin.messages.payload.id", "cid:messageDom1", context, log,"domibus_c2dom1");
Domibus.changePropertyAtRuntime("C2", "fsplugin.messages.payload.id", "cid:messageDom2", context, log,"domibus_c2dom2");</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="00d07969-e8d5-47fb-9cb8-8f8d6554a32d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - Dom1 cid" id="fa8653a6-ab96-442e-a050-db8a8fe4fe8f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - Dom1 cid" id="4325a440-c0c3-4c3f-becd-7827ff36ec1c"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SENDER:"domibus-blue-dom1",RECEIVER:"domibus-red-dom2",AGR_TYPE:" ",AGR:"domain1-domain2",SRV_TYPE:"tc8",SRV:"bdx:noprocess",ACTION:"TC8Leg1",MPC:"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/defaultMPC"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"standard","domibus_c2dom1",parametersMap);</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - Dom1 cid" id="a422c715-3f4d-4a0a-a6f6-c75cd9b37e62"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom2",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="b529b383-8d8c-4454-8197-27ea53a6f4c5"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test - Dom1 cid" id="18113913-5f28-4c52-b7ff-ef8f6d5a909e"><con:settings/><con:config><script>def logValueList =  ["PartInfo.*href.*=.*cid:messageDom1"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D6" id="2b64d11b-763d-4c8d-8c2e-4fc88872c2ae"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - cid from metadata file 2" id="6a609c6e-2017-45a1-bea6-fac46a57c338"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","downloaded","C2Dom1","C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - cid from metadata file 2" id="d7d154ae-89ac-4904-9b7e-f46c3079a4e9"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def parametersMap=[SENDER:"domibus-blue-dom1",RECEIVER:"domibus-red-dom2",AGR_TYPE:" ",AGR:"domain1-domain2",SRV_TYPE:"tc8",SRV:"bdx:noprocess",ACTION:"TC8Leg1",CID:"cid:messagefrompp",MPC:"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/defaultMPC"];


FSPluginUtils.submitFSmessage("C2",context,log,testRunner,"withmime","domibus_c2dom1",parametersMap);</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - Dom1 cid from pp" id="f5fb2b86-2dd8-4a3d-978d-db5c54920312"><con:settings/><con:config><script>def gap=2;
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+gap).toString();
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+gap).toString();

def test = new Domibus(log,null,context)
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","downloaded","C2Dom1","C3Dom2",1,1);</script></con:config></con:testStep><con:testStep type="delay" name="D7" id="5671f754-5c2f-4da3-a16e-21d0ceb77f3f"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test - cid from metadata file 2" id="3c48b31a-7a83-479a-8509-391a2af4662e"><con:settings/><con:config><script>def logValueList =  ["PartInfo.*href.*=.*cid:messagefrompp"];
LogUtils.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);
</script></con:config></con:testStep><con:testStep type="groovy" name="Reset log levels" id="4685be37-52cd-4b59-bf64-b73ec9d125f3" disabled="true"><con:settings/><con:config><script>def custPropName="org.apache.cxf";

// C2
def propValueC2=Domibus.getTestCaseCustProp(custPropName,log,context,testRunner);
// Reset log level value
Domibus.setLogLevel("C2",context,log,custPropName,propValueC2);
sleep(2000);
</script></con:config></con:testStep><con:testStep type="groovy" name="Reset cid property" id="b2a2b2b9-86e2-4c9e-aeb3-2d09341f4032" disabled="true"><con:settings/><con:config><script>Domibus.changePropertyAtRuntime("C2", "fsplugin.messages.payload.id", "cid:message", context, log,"domibus_c2dom1");
Domibus.changePropertyAtRuntime("C2", "fsplugin.messages.payload.id", "cid:message", context, log,"domibus_c2dom2");


</script></con:config></con:testStep><con:tearDownScript>testRunner.testCase.testSteps['Reset log levels'].run(testRunner, context);
testRunner.testCase.testSteps['Reset cid property'].run(testRunner, context);</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>10</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>10</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>domainsNamesList</con:name><con:value>{"C30":"default","C20":"default","C32":"domibus_c3dom2","C24":"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","C23":"a","C22":"domibus_c2dom2","C21":"domibus_c2dom1","C31":"domibus_c3dom1"}</con:value></con:property></con:properties></con:testSuite><con:testSuite id="931e7192-aec4-4d0e-8a2a-9184fdbf5d1b" name="SplitandJoin-Auto-Not-for-Bamboo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4a7557bc-2d3a-4e8b-98ec-68f73b72aa44" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean all DB" id="b654e498-bf9f-4a8d-aa2d-d7125d16af60" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDatabaseAll()
test.finalize()

</script></con:config></con:testStep><con:testStep type="groovy" name="Set log level to debug" id="af549cc7-808a-4727-89de-34d9547bd42f"><con:settings/><con:config><script>//----Set Log level to debug-----------
log.info "Set logger level to DEBUG for required classes"

 //Domibus.setLogLevel("C3",context,log,"eu.domibus.core.message.splitandjoin","DEBUG")</script></con:config></con:testStep><con:testStep type="groovy" name="Set message filters" id="a7faa644-080e-430f-a1d4-00556749e490"><con:settings/><con:config><script>//----Set Message filters ---------
log.info "Set FS message filter for sender and receiver on Admin console if not set before"

Domibus.setMessageFilters("sender","backendFSPlugin",context,log);
Domibus.setMessageFilters("receiver","backendFSPlugin",context,log);
</script></con:config></con:testStep><con:testStep type="groovy" name="PMode upload" id="cbdb725f-5807-4ebe-98ef-8d6e10c3b5e0"><con:settings/><con:config><script>import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace.xml"
def joinedPath = Paths.get(context.expand('${#Project#specialPModesPath}'),"/splitandjoin/blue/domibus-pmode-blue.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("sender","special","/splitandjoin/blue/domibus-pmode-blue.xml" + suffix, context, log)

joinedPath = Paths.get(context.expand('${#Project#specialPModesPath}'),"/splitandjoin/red/domibus-pmode-red.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("receiver","special","/splitandjoin/red/domibus-pmode-red.xml" + suffix, context, log)
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e7ad7c73-e5dd-4faf-a970-1fa000a1f840" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ001-Push-Basic Flow-Smal file - payload is smaller than fragment size - only one fragment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="354efe0f-4a6b-46be-9df5-49fd354dfc02"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="7ea61f3d-07d2-4c56-bb0b-46518c5aad57"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="07439267-664a-4ef6-a331-9bf47ebb31df"><con:settings/><con:config><script>def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")

def test = new Domibus(log,null,context)
test.storeLatestMessagesId(testRunner)

FSPluginUtils.createRandomFSFile(log, context,100*1024, inputFileName)
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="aba8b7f5-5a12-4c2f-a530-842df39b9750"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="272852fe-c277-4efa-b67e-ceb88a352e6e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId)

def numberOfFragments=1 
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received
test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="request" id="f0883f36-19fd-47a3-9156-6c30aef82ca9" name="getStatus of orignal message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of orignal message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f4dd5907-1459-4d5c-aa80-d729e679e4d2" name="getStatus of fragment message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of fragment message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_1</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="147c8c24-dc2f-4cf5-8a8c-5b68992c56af" name="getStatus of orignal message on receiver side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of orignal message on receiver side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>DOWNLOADED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="76a62c1a-02c0-47f5-92b3-ad605524c440" name="getStatus of fragment message on receiver side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of fragment message on receiver side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_1</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>RECEIVED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check Files Exist in OUT folder" id="eeb6a6c8-9650-4b94-95f2-1fd3c3052515"><con:settings/><con:config><script>def side="c3";
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4";
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#outFileName}')

def payloadName=["metadata.xml",outFileName];

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>548</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>521</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>6fe66f7b-3218-11ed-94c7-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ001.xml</con:value></con:property><con:property><con:name>outFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property></con:properties></con:testCase><con:testCase id="f778839f-6923-4220-947e-c0451b5c0533" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ002-Push-Basic Flow-Smal file - two fragments" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="20d5e0fc-bbd4-49ba-8789-1191d63a5ed0"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="a89388d6-599d-470b-95ce-157dd19f2efc"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="c0a701c2-dc39-4896-920f-cad1025808a6"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")

test.storeLatestMessagesId(testRunner)

FSPluginUtils.createRandomFSFile(log, context,1536*1024, inputFileName) //1,5 MB with fragment set to 1MB to create exactly 2 fragments
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="340a5083-6867-44c7-b1fd-d34ef19fb84a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="bb388979-0f0c-4ed9-8bd7-21a05559aa64"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId)

def numberOfFragments=2 
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="request" id="4f8b55e9-3c92-49ea-a97b-37289cfcca98" name="getStatus of orignal message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of orignal message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="c7b81f4d-6428-4e87-a531-b0338d3ad4dc" name="getStatus of fragment message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of fragment message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_1</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="0c2eb681-3b5f-48ef-8ce4-a3fa679798ce" name="getStatus of second fragment message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of second fragment message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_2</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8589a74a-6396-46d3-aeda-f58a48556efb" name="getStatus of orignal message on receiver side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of orignal message on receiver side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>DOWNLOADED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="01176f50-c31f-4b90-8334-37dd5f9a57f2" name="getStatus of fragment message on receiver side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of fragment message on receiver side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_1</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>RECEIVED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="9bc3add2-5278-4143-a6a6-d06c93030518" name="getStatus of second fragment message on receiver side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of second fragment message on receiver side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_2</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>RECEIVED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check Files Exist in OUT folder" id="55908488-9118-4193-8cbc-b2006829f8c7"><con:settings/><con:config><script>def side="c3";
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4";
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#outFileName}')

def payloadName=["metadata.xml",outFileName];

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>545</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>519</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>3a43f779-3218-11ed-94c7-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ002.xml</con:value></con:property><con:property><con:name>outFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property></con:properties></con:testCase><con:testCase id="bf4bbba3-c867-418e-a1a0-1c693b3223d6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ003-Push-Basic Flow-Smal file - split to many parts" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="ec682617-87f7-4a12-a4ca-a715769df0f7"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="5b9461bb-958e-4ec2-8120-b554f19a1162"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="99cbe7f1-cc50-43cc-9e76-411d3910a1fe"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)

FSPluginUtils.createRandomFSFile(log, context,(numberOfFragments-1)*1024*1024+1024, inputFileName) //file size (numberOfFragments -1) * 1 MB + 1kB to ensure number of fragments to be exactly equal numberOfFragments 
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="144e111c-07c9-49b6-8dc6-63cd4451fd54"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="fdd98321-831e-4af4-8572-b1872486121e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId)

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="request" id="22c74bcd-d8dc-4da6-86ed-ca93cfd4ca86" name="getStatus of orignal message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of orignal message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8b44cdb8-2a49-4b6d-bf7d-1077106047ff" name="getStatus of first fragment message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of first fragment message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_1</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="eba4bf7e-4a93-440f-80d2-715bce808e19" name="getStatus of last fragment message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of last fragment message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_${#TestCase#numberOfFragments}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="9a58ad10-5de9-44dc-9b66-9525a8dfab35" name="getStatus of orignal message on receiver side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of orignal message on receiver side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>DOWNLOADED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ff902c20-e39b-40f4-9798-c08de32d802e" name="getStatus of first fragment message on receiver side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of first fragment message on receiver side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_1</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>RECEIVED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="fd7badc6-bb77-4e29-a41b-20dc49d735ae" name="getStatus of last fragment message on receiver side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of last fragment message on receiver side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_${#TestCase#numberOfFragments}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>RECEIVED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>495</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>480</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>b4af8f43-31fb-11ed-94c7-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>21</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ003.xml</con:value></con:property></con:properties></con:testCase><con:testCase id="f401582c-06ef-4c59-afa9-4189f53229cb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ004-Push-Basic Flow-Same filename" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="61b5542a-bce8-4a75-800a-0a4c8ef6c760"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - first file" id="96f0984e-fcb7-4aba-a1cb-25e632fcf795"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - first file" id="e66aed28-4ac7-4599-acbd-ec4c0a9eef5d"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")

test.storeLatestMessagesId(testRunner)

FSPluginUtils.createRandomFSFile(log, context,1536*1024, inputFileName) //1,5 MB with fragment set to 1MB to create exactly 2 fragments
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="39a23450-a39d-4c43-bd99-7a96ea8217d9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - first file" id="19b3bb05-f4b4-47eb-8aaf-f5a885b8d5cd"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId)

def numberOfFragments=2 
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="groovy" name="Check Files Exist in OUT folder - first file" id="b2804efb-44a9-4301-9949-1abe6fc901a6"><con:settings/><con:config><script>def side="c3";
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4";
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#outFileName}')

def payloadName=["metadata.xml",outFileName];

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - second file" id="cec35c61-c096-43ed-82e9-63286cc53712"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message - second file" id="37105156-cea2-4dda-ba1d-2afc6daefda2"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = "Test_file_split_DomSJ004.xml"

test.storeLatestMessagesId(testRunner)

FSPluginUtils.createRandomFSFile(log, context,1536*1024, inputFileName) //1,5 MB with fragment set to 1MB to create exactly 2 fragments
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="e8e2f343-1f9b-4a2d-a1ca-fbd4aa8b59f1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - second file" id="50356511-c4fb-44ea-b5c2-6ecdeaeb0143"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId)

def numberOfFragments=2 
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="groovy" name="Check Files Exist in OUT folder - second file" id="932af31f-9187-4bdb-9446-8364f1ae35c4"><con:settings/><con:config><script>def side="c3";
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4";
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#outFileName}')

def payloadName=["metadata.xml",outFileName];

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>542</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>517</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>22696637-3218-11ed-94c7-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ004.xml</con:value></con:property><con:property><con:name>outFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property></con:properties></con:testCase><con:testCase id="9c1ec5b6-a882-4f8d-8567-93f277f743e8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ005-Push-Basic Flow-Special characters in file name" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="aa429ef4-6da2-4ed3-abc5-8e33bf2b300a"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="7d3036cd-6a6a-4a51-833b-be98061543cd"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="976b68fd-994b-4efe-833f-4d00f4504c08"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = "Test_file_split_DomSJ005_gęśla_jaźń_ü.xml"

test.storeLatestMessagesId(testRunner)

FSPluginUtils.createRandomFSFile(log, context,1536*1024, inputFileName) //1,5 MB with fragment set to 1MB to create exactly 2 fragments
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="9a60aa01-b2de-4a6f-8d8f-b7fc63c822f9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="4d5fdec2-08a6-4159-9536-82fa40219ffd"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId)

def numberOfFragments=2 
def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="groovy" name="Check Files Exist in OUT folder" id="01446696-5baa-49f1-81cc-27db8c288874"><con:settings/><con:config><script>def side="c3";
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4";
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#outFileName}')

def payloadName=["metadata.xml",outFileName];

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>550</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>522</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>b76e5b0d-3218-11ed-94c7-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ005_gęśla_jaźń_ü.xml</con:value></con:property><con:property><con:name>outFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property></con:properties></con:testCase><con:testCase id="59965177-194b-4e77-a742-a9a3f0ed78ba" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ006-Push-Basic Flow-Check payload is compressed before split" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="09617a99-6e56-4396-a9cc-e34136b6a342"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="599d2c33-6177-43e1-9199-14ebb212900f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message without compression enabled" id="28fe7b0e-ba9f-4db7-a622-53c29c95f4f0"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)
def parametersMap = [SRV_TYPE:"tc2", ACTION:"TC2Leg1"] // this one is not using compression 

FSPluginUtils.createRandomEmptyFSFile(log, context,(numberOfFragments-1)*1024*1024+1024, inputFileName) //file size (numberOfFragments -1) * 1 MB + 1kB 
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName, parametersMap)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="2f0bb8d6-7e04-4ea0-a73c-2286c297e67f"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId)

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers - very well compressed file" id="04117ed4-6d99-4a5b-b98f-6cd97ccc06ef"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message with compression enabled - very well compressed file" id="aaf1ec35-0aff-4f80-a3fe-7944c0d79a62"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)
//using leg compression enabled

FSPluginUtils.createRandomEmptyFSFile(log, context,(numberOfFragments-1)*1024*1024+1024, inputFileName) //file size (numberOfFragments -1) * 1 MB + 1kB but file would compress very good
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged - very well compressed file" id="42367e94-dfc8-4aed-93e2-19c7f90924de"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def numberOfFragments = 1 // after compression
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId)

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>595</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>560</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>8348098b-321d-11ed-94c7-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>11</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ006.xml</con:value></con:property></con:properties></con:testCase><con:testCase id="bd915b12-f3f7-41af-b6f8-37f5e69b6ba6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ007-Push-Basic Flow-Split for large fragments like 500MB" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="a26e87ad-bb3e-4998-8128-ee602f34a309"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="f7203794-28fc-44af-8356-3db69d13426b"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="cc23a256-fd86-430f-8aa9-3a5e3ae0e9ae"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)
def parametersMap = [SRV_TYPE:"tc3", ACTION:"TC3Leg1"] // this one is not using compression 

FSPluginUtils.createRandomFSFile(log, context,(numberOfFragments-1)*500*1024*1024+1024*1024, inputFileName) //file size (numberOfFragments -1) * 500 MB + 1MB 
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName, parametersMap)

test.waitFindAndUpdateLatestMessageIdIn(testRunner, "C2", 240_000)
test.finalize()

</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="ef972d5f-c35e-453b-9d20-59cb595c5e87"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId,"360")

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="groovy" name="Check Files Exist in OUT folder" id="3d154833-e600-4fc5-936f-9c3eabd64bb0"><con:settings/><con:config><script>def side="c3";
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4";
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#inputFileName}') //inputFileName - because it is manually created

def payloadName=["metadata.xml",outFileName];

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>8</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>950f02aa-3229-11ed-81dc-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>5</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ007.xml</con:value></con:property><con:property><con:name>outputFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property></con:properties></con:testCase><con:testCase id="e0ec430a-c098-4f6c-b03d-ee6bbefaa76e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ008-Push-Manual-Send 128GB file" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="38e4ed98-e14c-4eab-89bd-86918cebd8bd"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="f502a3c8-a48c-418c-844c-ace7e7e310ef"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="1878d40a-10c1-437b-a86b-b9b8004dec97"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)
def parametersMap = [SRV_TYPE:"tc3", ACTION:"TC3Leg1"] // this one is not using compression 

//FSPluginUtils.createRandomFSFile(log, context,(numberOfFragments-1)*500*1024*1024+1024*1024, inputFileName) //file size (numberOfFragments -1) * 500 MB + 1MB 
Domibus.showPopUpForManualConfigurationChange("""\
VEry biig file (128GB+1MB) ${inputFileName} in /resources/PModesandKeystoresSpecialTests/fsPlugin/standard/ fodler for testing requrided 
""", log, testRunner)

FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName, parametersMap)

test.waitFindAndUpdateLatestMessageIdIn(testRunner, "C2", 1_000_000)
test.finalize()

</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="cab2f307-daf2-4a83-968c-3e38e4200ede"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId,"4000")

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="groovy" name="Check Files Exist in OUT folder" id="9aaa50e8-0de5-4ed0-8180-e4ccc4a54433"><con:settings/><con:config><script>def side="c3";
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4";
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#outFileName}')

def payloadName=["metadata.xml",outFileName];

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>8</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>6</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>950f02aa-3229-11ed-81dc-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>256</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ008.xml</con:value></con:property><con:property><con:name>outputFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property></con:properties></con:testCase><con:testCase id="57b6b650-0b69-42d7-a8b5-07d23c1cd33e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ009-Push-Negative Flow-No receipt" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="6ad17d15-31c2-46c4-bcab-563b818cc924"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Change blue Pmode to contains incorrect red endpoint" id="2184dd06-4982-472c-95f5-33228e32712f"><con:settings/><con:config><script>import java.nio.file.Paths
def newFileSuffix =  "_SoapuiStringReplace.xml"
def currentValue=['&lt;party.+name.*=.*"red_gw"[\\s\\S]*?>']
def newValue=['&lt;party name="red_gw" endpoint="http://localhost:8181/domibus/services/msh" allowChunking="false">']
def joinedPath = Paths.get(context.expand('${#Project#specialPModesPath}'),"/splitandjoin/blue/domibus-pmode-blue.xml").toUri()

PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, newFileSuffix)
PModeUtils.updatePmodeParameter(log, context, testRunner,currentValue,newValue,joinedPath, newFileSuffix)
PModeUtils.uploadPmode("C2","special","/splitandjoin/blue/domibus-pmode-blue.xml" + newFileSuffix, context, log)
</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="6c2661c5-940e-4a42-862d-160a0d865e3c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="80932c59-01aa-4962-9bf8-26f3bb14f083"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"WAITING_FOR_RETRY","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="e4652c1f-14f9-472d-bb58-7b73e6a9897f"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)

FSPluginUtils.createRandomFSFile(log, context,(numberOfFragments-1)*1*1024*1024+1024, inputFileName) //file size (numberOfFragments -1) * 1 MB + 1kB 
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="e713a8aa-1fff-4e0a-acfb-11933daec6f3"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.waitForStatus("SEND_ENQUEUED",null, messageId,"360")

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments).toString() //fragments in WAITING_FOR_RETRY state
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+0).toString() // nothing received

test.waitMessagesExchangedNumber(count1,count2,"WAITING_FOR_RETRY","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="0cbb52ff-851b-4952-8455-b3bc60a3d853"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check Files doesn't exist in IN folder of C3" id="41850b14-b96f-45e2-994d-a4286057a315"><con:settings/><con:config><script>def side="c3"
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4"
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#outFileName}')
def checkTrue = false

def payloadName=["metadata.xml",outFileName]

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner,checkTrue)</script></con:config></con:testStep><con:testStep type="groovy" name="Revert - upload default blue Pmode" id="4d1207ba-1351-47a6-9fe5-7e809ef423a7" disabled="true"><con:settings/><con:config><script>// Upload PModes: default Pmode for C2
import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace.xml"
def joinedPath = Paths.get(context.expand('${#Project#specialPModesPath}'),"/splitandjoin/blue/domibus-pmode-blue.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("C2","special","/splitandjoin/blue/domibus-pmode-blue.xml" + suffix, context, log)
</script></con:config></con:testStep><con:tearDownScript>testRunner.testCase.testSteps['Revert - upload default blue Pmode'].run(testRunner, context)

def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>6</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>14</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>d952f6c2-3232-11ed-81dc-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>3</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ009.xml</con:value></con:property><con:property><con:name>outputFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property></con:properties></con:testCase><con:testCase id="5361b50d-2777-4d02-b353-a04afbd180f8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ010-Push-Negative Flow-Leg not matched-not existing Action" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="39930f63-3005-4aed-9785-cee3a6a3ecf3"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="33e653bf-0078-47fb-bce8-2f9d086ed338"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="20ee4d1e-d4e1-4302-9b42-857f1fa10bf7"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="f3027421-befd-4b75-9c4c-f343322d5f0f"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="38051f29-df12-4fad-8993-a0e0238d1986"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)
def parametersMap = [ACTION:"NotExistingLegAction"] // not existing action 

FSPluginUtils.createRandomFSFile(log, context,(numberOfFragments-1)*1*1024*1024+1024, inputFileName) //file size (numberOfFragments -1) * 1 MB + 1MB 
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName, parametersMap)

test.finalize()

</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="1ce60aed-19e5-4c26-9389-1e2e0f146488"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Copy of Check Error Status" id="861cd533-85e4-40af-933c-593acf53ef2c"><con:settings/><con:config><script>def payloadNumber = 1 
FSPluginUtils.checkFSpayloadPresentFAILED("c2", context, log, testRunner, payloadNumber)</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="67dfc104-1def-470e-9b45-9d1cbad1af92"><con:settings/><con:config><script>def test = new Domibus(log,null,context)

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+0).toString() 
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+0).toString()

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="5088e139-5820-4712-9fa6-44853584b83e"><con:settings/><con:config><script>def logValueList =  ["No matching action found"]
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner)</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>18</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>14</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>d952f6c2-3232-11ed-81dc-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>2</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ010.xml</con:value></con:property><con:property><con:name>outputFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>6951</con:value></con:property></con:properties></con:testCase><con:testCase id="81eb1153-2af3-400a-9d1c-8821bd37876a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ011-Push-Basic Flow-Self sending - bug - stil not supported" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="4358d84f-cac2-4372-a8c1-2e7602c46309"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="eb36e017-faed-4ef4-ba47-65dea2197819"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received","C2","C2");</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message without compression enabled" id="b12a8cbc-0cb9-4723-b052-1574933e76ac"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)
def parametersMap = [RECEIVER:"domibus-blue"] // this one is not using compression 

FSPluginUtils.createRandomEmptyFSFile(log, context,(numberOfFragments-1)*1024*1024+1024, inputFileName) //file size (numberOfFragments -1) * 1 MB + 1kB 
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName, parametersMap)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="89bb7adf-dff5-40ed-9533-9f6924de9851"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED", messageId, null, null, "C2", "C2")

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+numberOfFragments+1).toString() //orginal msg + number of fragments that file was split
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+numberOfFragments).toString() // only original message state change to Downloaded not Received

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C2Default",1,1)</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>18</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>0</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>dc509ae0-323c-11ed-81dc-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>2</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ011.xml</con:value></con:property></con:properties></con:testCase><con:testCase id="2393d4b3-cda0-4af8-964d-d18e842234ab" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ012-Push-Negative Flow-Corrupted metadata.xml file" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="00cb0751-c10d-461c-bac5-962c405ecc97"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="5c8f8563-60cb-467a-a167-0fe00463e4b9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set initial messages numbers" id="b90e6b46-93d0-4994-a264-8eb5a1d75fb6"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.countCurrentMessagesNumber(testRunner,"acknowledged","received");</script></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line C2" id="e2806c54-8ffd-4b9e-a66b-fae216facdbd"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="7e6e2dfd-0b8e-4878-ad8e-e2d3d9f2f0b3"><con:settings/><con:config><script><![CDATA[// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)
def parametersMap = [ACTION:"</Action></Action><<<<<<<>>>"] // any change that cause metadata.xml file to be corrupted 

FSPluginUtils.createRandomFSFile(log, context,(numberOfFragments-1)*1*1024*1024+1024, inputFileName) //file size (numberOfFragments -1) * 1 MB + 1MB 
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName, parametersMap)

test.finalize()

]]></script></con:config></con:testStep><con:testStep type="delay" name="D1" id="7371337e-5644-4306-8899-548aac5968a9"><con:settings/><con:config><delay>20000</delay></con:config></con:testStep><con:testStep type="groovy" name="Copy of Check Error Status" id="b80999cb-217d-40c9-81e5-82bd77864f68"><con:settings/><con:config><script>def payloadNumber = 1 
FSPluginUtils.checkFSpayloadPresentFAILED("c2", context, log, testRunner, payloadNumber)</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="71ec85bf-dc56-4073-a696-a83cf16b2abc"><con:settings/><con:config><script>def test = new Domibus(log,null,context)

def count1=((context.expand('${#TestCase#propertyCountC2}').toInteger())+0).toString() 
def count2=((context.expand('${#TestCase#propertyCountC3}').toInteger())+0).toString()

test.waitMessagesExchangedNumber(count1,count2,"acknowledged","received","C2Default","C3Default",1,1)</script></con:config></con:testStep><con:testStep type="groovy" name="Check C2 log file" id="b37cab4e-599b-4e6d-9bae-c40b129030d1"><con:settings/><con:config><script>def logValueList =  ["Invalid metadata file: javax.xml.bind.UnmarshalException"]
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner)</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>23</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>18</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>b4656e6e-3242-11ed-81dc-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>2</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ012.xml</con:value></con:property><con:property><con:name>outputFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property><con:property><con:name>skipNumberOfLines</con:name><con:value>12367</con:value></con:property></con:properties></con:testCase><con:testCase id="49a9ea3e-2233-4e56-94a2-355692c5aa2b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomSJ013-Push-Negative Flow-Not matching Pmode on receiver side" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Clean FS plugin folders" id="2a6c1c91-ed34-4630-b0a6-8c91c5455c2f"><con:settings/><con:config><script>FSPluginUtils.cleanFSPluginFolders("c2",context,log,testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Change blue Pmode to contains incorrect red endpoint" id="ee030f8e-d053-4d7b-b8a6-0e610bdb6660"><con:settings/><con:config><script>import java.nio.file.Paths
def newFileSuffix =  "_SoapuiStringReplace.xml"
def currentValue=['action name="tc1Action" value="TC1Leg1"']
def newValue=['action name="tc1Action" value="BAD_TC1Leg1"']
def joinedPath = Paths.get(context.expand('${#Project#specialPModesPath}'),"/splitandjoin/red/domibus-pmode-red.xml").toUri()

PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, newFileSuffix)
PModeUtils.updatePmodeParameter(log, context, testRunner,currentValue,newValue,joinedPath, newFileSuffix)
PModeUtils.uploadPmode("receiver","special","/splitandjoin/red/domibus-pmode-red.xml" + newFileSuffix, context, log)
</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="4b68294a-dac1-428c-a03a-dd04c82d9589"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="24e44040-5883-4906-bea2-dc1c5816a75a"><con:settings/><con:config><script>// parametersMap keys must be: [SENDER:"...",RECEIVER:"...",AGR_TYPE:"...",AGR:"...",SRV_TYPE:"...",SRV:"...",ACTION:"...",CID:"...",PAY_NAME:"...",MIME:"...",OR_SENDER:"...",FIN_RECEIVER:"..."]
def test = new Domibus(log,null,context)
def inputFileName = testRunner.testCase.getPropertyValue("inputFileName")
def numberOfFragments = testRunner.testCase.getPropertyValue("numberOfFragments").toInteger()
test.storeLatestMessagesId(testRunner)

FSPluginUtils.createRandomFSFile(log, context,(numberOfFragments-1)*1*1024*1024+1024, inputFileName) //file size (numberOfFragments -1) * 1 MB + 1kB 
FSPluginUtils.submitSplitAndJoinMessage("C2", context, log, testRunner, inputFileName)

test.waitFindAndUpdateLatestMessageIdIn(testRunner)
test.finalize()

</script></con:config></con:testStep><con:testStep type="groovy" name="Check Message Exchanged" id="9f738cb0-ca02-4317-968c-da9fb7630b68"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
test.waitForStatus("SEND_ENQUEUED",null, messageId,"30")
</script></con:config></con:testStep><con:testStep type="groovy" name="Check Files doesn't exist in IN folder of C3" id="c3743a6d-ccf6-44fc-b7d4-73e574f0c4c8"><con:settings/><con:config><script>def side="c3"
def finalRecipient="urn_oasis_names_tc_ebcore_partyid-type_unregistered_C4"
def messageId = testRunner.testCase.getPropertyValue("lastMessageId")
def outFileName = context.expand('${#TestCase#outFileName}')
def checkTrue = false

def payloadName=["metadata.xml",outFileName]

FSPluginUtils.checkFSpayloadPresentIN(side,finalRecipient,messageId,payloadName,"default",context,log,testRunner,checkTrue)</script></con:config></con:testStep><con:testStep type="request" id="8ca3d7ac-0949-49a9-b314-66188ee40e19" name="getStatus of orignal message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of orignal message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>SEND_ENQUEUED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ffab27d5-e8f8-4349-81b6-5ca36f4248d0" name="getStatus of fragment message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of fragment message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_1</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>WAITING_FOR_RETRY</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="104fa160-dde3-4cc2-a389-6d892929ffb1" name="getStatus of second fragment message on sender side"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>WebServicePluginSoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus of second fragment message on sender side" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5916d0fe-a309-446d-a469-455665f21424"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/wsplugin</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:eu="http://eu.domibus.wsplugin/">
   <soap:Header/>
   <soap:Body>
      <eu:statusRequest>
         <messageID>${#TestCase#lastMessageId}_2</messageID>
      </eu:statusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fe2d8d67-ae9c-4b30-9e1a-f917d2541843" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e916d346-f202-4893-bac7-b5a3800b2312" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="881eed42-0bfa-4240-82dc-5f8c3394d328" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3f4fab27-b157-4d49-8e26-2031fc68b626" name="Contains"><con:configuration><token>WAITING_FOR_RETRY</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://eu.domibus.wsplugin/WebServicePluginInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Revert - upload default red Pmode" id="1844d2b4-a892-4639-a4d0-f491c9a48498" disabled="true"><con:settings/><con:config><script>// Upload PModes: default Pmode for C3
import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace.xml"
def joinedPath = Paths.get(context.expand('${#Project#specialPModesPath}'),"/splitandjoin/red/domibus-pmode-red.xml").toUri()
PModeUtils.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix)
PModeUtils.uploadPmode("C3","special","/splitandjoin/red/domibus-pmode-red.xml" + suffix, context, log)
</script></con:config></con:testStep><con:tearDownScript>testRunner.testCase.testSteps['Revert - upload default red Pmode'].run(testRunner, context)

def test = new Domibus(log,null,context)
//test.cleanDBMessageIDStartsWith(context.expand('${#TestCase#lastMessageId}'))

test.finalize()
//Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>propertyCountC2</con:name><con:value>6</con:value></con:property><con:property><con:name>propertyCountC3</con:name><con:value>18</con:value></con:property><con:property><con:name>lastMessageId</con:name><con:value>b4656e6e-3242-11ed-81dc-0a0027000006@domibus.eu</con:value></con:property><con:property><con:name>numberOfFragments</con:name><con:value>2</con:value></con:property><con:property><con:name>inputFileName</con:name><con:value>Test_file_split_DomSJ013.xml</con:value></con:property><con:property><con:name>outputFileName</con:name><con:value>Test_file_${#TestCase#inputFileName}</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:requirements/><con:properties><con:property><con:name>localUrl</con:name><con:value>http://localhost:8280/domibus</con:value></con:property><con:property><con:name>remoteUrl</con:name><con:value>http://localhost:8180/domibus</con:value></con:property><con:property><con:name>greenUrl</con:name><con:value>http://localhost:8280/domibus</con:value></con:property><con:property><con:name>thirdGateway</con:name><con:value>false</con:value></con:property><con:property><con:name>multitenancyModeC2</con:name><con:value>0</con:value></con:property><con:property><con:name>multitenancyModeC3</con:name><con:value>0</con:value></con:property><con:property><con:name>updateReport</con:name><con:value>false</con:value></con:property><con:property><con:name>pathBlue</con:name><con:value>c:/ec/501/blue/domibus/</con:value></con:property><con:property><con:name>pathRed</con:name><con:value>c:/ec/501/red/domibus/</con:value></con:property><con:property><con:name>pathGreen</con:name><con:value>c:/ec/4211/green/domibus/</con:value></con:property><con:property><con:name>pathExeSender</con:name><con:value>${#Project#pathBlue}bin/</con:value></con:property><con:property><con:name>pathExeReceiver</con:name><con:value>${#Project#pathRed}bin/</con:value></con:property><con:property><con:name>pathExeGreen</con:name><con:value>${#Project#pathGreen}/bin/</con:value></con:property><con:property><con:name>reportFilePath</con:name><con:value>${projectDir}/reports/Domibus_3_3_2_test_results.xlsx</con:value></con:property><con:property><con:name>defaultPModesPath</con:name><con:value>${projectDir}/resources/PModesandKeystoresDefault</con:value></con:property><con:property><con:name>specialPModesPath</con:name><con:value>${projectDir}/resources/PModesandKeystoresSpecialTests</con:value></con:property><con:property><con:name>subPathToDomibusProperties</con:name><con:value>conf/domibus/domibus.properties</con:value></con:property><con:property><con:name>tempFilesDir</con:name><con:value>${projectDir}/</con:value></con:property><con:property><con:name>pdfAttachment</con:name><con:value>${projectDir}/resources/fileSmall.pdf </con:value></con:property><con:property><con:name>moreThan100mbAttachment</con:name><con:value>${projectDir}/resources/videoplayback_mp4.pdf</con:value></con:property><con:property><con:name>adminC1Default</con:name><con:value>adminC1Default</con:value></con:property><con:property><con:name>adminC4Default</con:name><con:value>adminC4Default</con:value></con:property><con:property><con:name>defaultBlueDomainID</con:name><con:value>C2Default</con:value></con:property><con:property><con:name>defaultRedDomainId</con:name><con:value>C3Default</con:value></con:property><con:property><con:name>defaultGreenDomainID</con:name><con:value>thirdDefault</con:value></con:property><con:property><con:name>allDomainsProperties</con:name><con:value>{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_501_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}, "C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_501_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC","dbUser":"root","dbPassword":"root"}}</con:value></con:property><con:property><con:name>adminDefaultPassword</con:name><con:value>DomibusEdel-12345</con:value></con:property><con:property><con:name>superAdminUsername</con:name><con:value>super</con:value></con:property><con:property><con:name>superAdminPassword</con:name><con:value>DomibusEdel-12345</con:value></con:property><con:property><con:name>defaultAdminUsername</con:name><con:value>admin</con:value></con:property><con:property><con:name>defaultAdminPassword</con:name><con:value>DomibusEdel-12345</con:value></con:property><con:property><con:name>unsecureLoginAllowed</con:name><con:value>true</con:value></con:property><con:property><con:name>multitenancyModeThird</con:name><con:value>0</con:value></con:property><con:property><con:name>unsecureLoginAllowedC2</con:name><con:value>true</con:value></con:property><con:property><con:name>unsecureLoginAllowedC3</con:name><con:value>true</con:value></con:property><con:property><con:name>logsPathBlue</con:name><con:value>${#Project#pathBlue}logs/</con:value></con:property><con:property><con:name>logsPathRed</con:name><con:value>${#Project#pathRed}logs/</con:value></con:property><con:property><con:name>logsPathGreen</con:name><con:value>${#Project#pathGreen}logs/</con:value></con:property><con:property><con:name>databaseBlue</con:name><con:value>mysql</con:value></con:property><con:property><con:name>driverBlue</con:name><con:value>com.mysql.cj.jdbc.Driver</con:value></con:property><con:property><con:name>jdbcUrlBlue</con:name><con:value>jdbc:mysql://localhost:3306/domibus_blue?useLegacyDatetimeCode=false&amp;serverTimezone=UTC</con:value></con:property><con:property><con:name>blueDbUser</con:name><con:value>root</con:value></con:property><con:property><con:name>blueDbPassword</con:name><con:value>root</con:value></con:property><con:property><con:name>databaseRed</con:name><con:value>mysql</con:value></con:property><con:property><con:name>driverRed</con:name><con:value>com.mysql.cj.jdbc.Driver</con:value></con:property><con:property><con:name>jdbcUrlRed</con:name><con:value>jdbc:mysql://localhost:3306/domibus_red?useLegacyDatetimeCode=false&amp;serverTimezone=UTC</con:value></con:property><con:property><con:name>redDbUser</con:name><con:value>root</con:value></con:property><con:property><con:name>redDbPassword</con:name><con:value>root</con:value></con:property><con:property><con:name>payloadsPath</con:name><con:value>C:/ec/soapui/resources</con:value></con:property><con:property><con:name>adminC1Dom1Default</con:name><con:value>userC1C2Dom1</con:value></con:property><con:property><con:name>adminC1Dom2Default</con:name><con:value>userC1C2Dom2</con:value></con:property><con:property><con:name>adminC4Dom1Default</con:name><con:value>userC4C3Dom1</con:value></con:property><con:property><con:name>adminC4Dom2Default</con:name><con:value>userC4C3Dom2</con:value></con:property><con:property><con:name>userC1DomDefault</con:name><con:value>userC1DomDefault</con:value></con:property><con:property><con:name>userC1Dom1</con:name><con:value>userC1Dom1</con:value></con:property><con:property><con:name>userC1Dom2</con:name><con:value>userC1Dom2</con:value></con:property><con:property><con:name>userC1Dom2SelfC4</con:name><con:value>userC1Dom2SelfC4</con:value></con:property><con:property><con:name>userC1Dom3</con:name><con:value>userC1Dom3</con:value></con:property><con:property><con:name>userC1Dom4</con:name><con:value>userC1Dom4</con:value></con:property><con:property><con:name>userC4DomDefault</con:name><con:value>userC4DomDefault</con:value></con:property><con:property><con:name>userC4Dom1</con:name><con:value>userC4Dom1</con:value></con:property><con:property><con:name>userC4Dom2</con:name><con:value>userC4Dom2</con:value></con:property><con:property><con:name>usersPassword</con:name><con:value>DomibusEdel-12345</con:value></con:property><con:property><con:name>c1OriginalUser</con:name><con:value>urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</con:value></con:property><con:property><con:name>c4OriginalUser</con:name><con:value>urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</con:value></con:property><con:property><con:name>fsFilesPathBlue</con:name><con:value>c:/ec/501/blue/domibus/fs_plugin</con:value></con:property><con:property><con:name>fsFilesPathRed</con:name><con:value>c:/ec/501/red/domibus/fs_plugin</con:value></con:property><con:property><con:name>fsFilesPathGreen</con:name><con:value>C:/domibus/1-mainBranch/greenReceiver/fs_plugin_data</con:value></con:property><con:property><con:name>fsMetadataStandard</con:name><con:value><![CDATA[<UserMessage mpc="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/mpcPushStandard" xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">    <PartyInfo>       <From>          <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</PartyId>          <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</Role>       </From>       <!--Optional:-->       <To>          <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</PartyId>          <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</Role>       </To>    </PartyInfo>    <CollaborationInfo>       <!--You may enter the following 4 items in any order-->       <!--Optional:-->       <AgreementRef type="DUM">DummyAgr</AgreementRef>       <Service type="tc20">bdx:noprocess</Service>       <Action>TC20Leg1</Action>    </CollaborationInfo>    <MessageProperties>       <!--1 or more repetitions:-->       <!--originalSender and finalRecipient are mandatory-->       <Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</Property>       <Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</Property>    </MessageProperties> </UserMessage>]]></con:value></con:property><con:property><con:name>fsMetadataWithMimeType</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" ?> <UserMessage mpc="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/mpcPushStandard" xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">     <PartyInfo>         <From>             <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</PartyId>             <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</Role>         </From>         <!--Optional:-->         <To>             <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</PartyId>             <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</Role>         </To>     </PartyInfo>     <CollaborationInfo>         <!--You may enter the following 4 items in any order-->         <!--Optional:-->         <AgreementRef type="DUM">DummyAgr</AgreementRef>         <Service type="tc20">bdx:noprocess</Service>         <Action>TC20Leg1</Action>             </CollaborationInfo>     <MessageProperties>         <!--1 or more repetitions:-->         <!--originalSender and finalRecipient are mandatory-->         <Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</Property>         <Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</Property>     </MessageProperties>     <PayloadInfo>         <PartInfo href="cid:messagefrompp">             <PartProperties>                 <Property name="MimeType">text/xml</Property>             </PartProperties>         </PartInfo>     </PayloadInfo> </UserMessage>]]></con:value></con:property><con:property><con:name>fsMetadataWithPayloadName</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" ?> <UserMessage mpc="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/mpcPushStandard" xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">     <PartyInfo>         <From>             <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</PartyId>             <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</Role>         </From>         <!--Optional:-->         <To>             <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</PartyId>             <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</Role>         </To>     </PartyInfo>     <CollaborationInfo>         <!--You may enter the following 4 items in any order-->         <!--Optional:-->         <AgreementRef type="DUM">DummyAgr</AgreementRef>         <Service type="tc20">bdx:noprocess</Service>         <Action>TC20Leg1</Action>             </CollaborationInfo>     <MessageProperties>         <!--1 or more repetitions:-->         <!--originalSender and finalRecipient are mandatory-->         <Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</Property>         <Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</Property>     </MessageProperties>     <PayloadInfo>         <PartInfo href="cid:messagefrompp">             <PartProperties>                 <ns:Property name="PayloadName">PayloadName.xml</ns:Property>             </PartProperties>         </PartInfo>     </PayloadInfo> </UserMessage>]]></con:value></con:property><con:property><con:name>fsMetadataWithProcessingType</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" ?> <UserMessage mpc="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/mpcPushStandard" xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">    <PartyInfo>       <From>          <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</PartyId>          <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</Role>       </From>       <!--Optional:-->       <To>          <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</PartyId>          <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</Role>       </To>    </PartyInfo>    <CollaborationInfo>       <!--You may enter the following 4 items in any order-->       <!--Optional:-->       <AgreementRef type="DUM">DummyAgr</AgreementRef>       <Service type="tc20">bdx:noprocess</Service>       <Action>TC20Leg1</Action>    </CollaborationInfo>    <MessageProperties>       <!--1 or more repetitions:-->       <!--originalSender and finalRecipient are mandatory-->       <Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</Property>       <Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</Property>    </MessageProperties>    <PayloadInfo>       <PartInfo href="cid:messagefrompp">          <PartProperties>             <Property name="MimeType">text/xml</Property>          </PartProperties>       </PartInfo>    </PayloadInfo>    <!--Optional: PUSH per default-->    <ProcessingType>PUSH</ProcessingType> </UserMessage>]]></con:value></con:property><con:property><con:name>splitMetadataStandard</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" ?> <UserMessage xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">     <PartyInfo>         <From>             <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</PartyId>             <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</Role>         </From>         <To>             <PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</PartyId>             <Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</Role>         </To>     </PartyInfo>     <CollaborationInfo>         <Service type="tc1">bdx:noprocess</Service>         <Action>TC1Leg1</Action>     </CollaborationInfo>     <MessageProperties>         <Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</Property>         <Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</Property>     </MessageProperties> </UserMessage>]]></con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>