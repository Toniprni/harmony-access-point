<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    <!-- properties - to be used in column definitions -->
    <include file="../../../../common/changelog-properties-v2.xml" relativeToChangelogFile="true"/>

    <changeSet author="maierga" id="Partition populated tables" dbms="oracle">
        <sqlFile path="src/main/resources/db/archive/5.0/partitioning/oracle/partitions-procedures-5.0.sql"
                 endDelimiter="\n/"/>
        <sql>
            CREATE OR REPLACE PROCEDURE PARTITION_USER_MESSAGE(schema_name IN VARCHAR2) IS
            BEGIN
                DECLARE
                    tmp_table   VARCHAR2(100) := schema_name || '.TMP_TB_USER_MESSAGE ';
                    time_format VARCHAR2(100) := 'HH24:MI:SS';
                    num_errors  PLS_INTEGER;
                BEGIN
                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' Starting for schema_name=' || schema_name);

                    EXECUTE IMMEDIATE
                            'CREATE TABLE ' || tmp_table ||
                            '   PARTITION BY RANGE (ID_PK) (PARTITION P19700000 VALUES LESS THAN (19700102)) ' ||
                            '   AS SELECT * FROM ' || schema_name || '.TB_USER_MESSAGE WHERE 1 = 0';
                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) ||
                                         ' Temporary table with 1970 partition created');

                    PARTITIONSGEN(-7, tmp_table);

                    PARTITIONSGEN(-6, tmp_table);

                    PARTITIONSGEN(-5, tmp_table);

                    PARTITIONSGEN(-4, tmp_table);

                    PARTITIONSGEN(-3, tmp_table);

                    PARTITIONSGEN(-2, tmp_table);

                    PARTITIONSGEN(-1, tmp_table);

                    PARTITIONSGEN(0, tmp_table);

                    PARTITIONSGEN(1, tmp_table);

                    PARTITIONSGEN(2, tmp_table);

                    PARTITIONSGEN(3, tmp_table);

                    PARTITIONSGEN(4, tmp_table);

                    PARTITIONSGEN(5, tmp_table);

                    PARTITIONSGEN(6, tmp_table);

                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) ||
                                         ' Hourly partitions created for 7 days in the past and 7 days in the future');

                    FOR q IN (
                        SELECT 'alter table "' || owner || '"."' || table_name || '" DROP CONSTRAINT "' ||
                               CONSTRAINT_NAME || '"' AS sql_text
                        FROM dba_constraints
                        WHERE table_name = 'TMP_TB_USER_MESSAGE'
                        )
                        LOOP
                            DBMS_OUTPUT.put_line(q.sql_text);
                            EXECUTE IMMEDIATE q.sql_text;
                        END LOOP;

                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) ||
                                         ' Initializing table redefinition process...');
                    DBMS_REDEFINITION.start_redef_table(schema_name,
                                                        'TB_USER_MESSAGE',
                                                        'TMP_TB_USER_MESSAGE');
                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' done');

                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' Copying table dependent objects...');
                    DBMS_REDEFINITION.COPY_TABLE_DEPENDENTS(schema_name,
                                                            'TB_USER_MESSAGE',
                                                            'TMP_TB_USER_MESSAGE',
                                                            DBMS_REDEFINITION.CONS_ORIG_PARAMS,
                                                            TRUE,
                                                            TRUE,
                                                            TRUE,
                                                            FALSE,
                                                            num_errors);
                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' done (Number of errors=' || num_errors ||
                                         ')');

                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) ||
                                         ' Resynchronizing with the original table...');
                    DBMS_REDEFINITION.SYNC_INTERIM_TABLE(schema_name,
                                                         'TB_USER_MESSAGE',
                                                         'TMP_TB_USER_MESSAGE');
                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' done');

                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' Completing the redefinition process...');
                    DBMS_REDEFINITION.FINISH_REDEF_TABLE(schema_name,
                                                         'TB_USER_MESSAGE',
                                                         'TMP_TB_USER_MESSAGE');
                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' done');

                    EXECUTE IMMEDIATE 'DROP TABLE ' || tmp_table || ' CASCADE CONSTRAINTS PURGE';
                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' Dropped temporary table');
                    DBMS_OUTPUT.put_line(TO_CHAR(SYSDATE, time_format) || ' SUCCESS');

                    ALTER TABLE TB_MESSAGE_ACKNW MODIFY PARTITION BY REFERENCE ( FK_MSG_ACK_USER_MSG );
                    ALTER TABLE TB_MESSAGE_ACKNW_PROP MODIFY PARTITION BY REFERENCE ( FK_MSG_ACK_PROP_MSG_ACK );
                    ALTER TABLE TB_SJ_MESSAGE_GROUP MODIFY PARTITION BY REFERENCE ( FK_MSG_FG_GROUP_UM ) UPDATE INDEXES
                    (IDX_SJ_MG_ROLE_FK LOCAL);
                    ALTER TABLE TB_SJ_MESSAGE_FRAGMENT MODIFY PARTITION BY REFERENCE ( FK_SJ_MSG_FG_USER_MSG )
                    UPDATE INDEXES (IDX_FK_SJ_MSG_FG_GROUP LOCAL);
                    ALTER TABLE TB_USER_MESSAGE_LOG MODIFY PARTITION BY REFERENCE ( FK_MSG_LOG_MSG_ID ) UPDATE INDEXES
                    (IDX_USER_LOG_RECEIVED LOCAL, IDX_MESSAGE_LOG_TZ_OFFSET LOCAL, IDX_MSG_ARCHIVED LOCAL, IDX_MSG_EXPORTED LOCAL, IDX_MSG_ACKNOWLEDGED LOCAL, IDX_MSG_PROCESSING_TYPE LOCAL, IDX_MESSAGE_LOG_MSG_STATUS_ID LOCAL, IDX_MESSAGE_LOG_MSG_ROLE_ID LOCAL, IDX_MSG_LOG_NOTIF_STATUS_ID LOCAL);
                    ALTER TABLE TB_PART_INFO MODIFY PARTITION BY REFERENCE ( FK_PART_INFO_USER_MSG );
                    ALTER TABLE TB_PART_PROPERTIES MODIFY PARTITION BY REFERENCE ( FK_PART_PROPS_PART_INFO )
                    UPDATE INDEXES (IDX_PART_PROPS_PART_PROP LOCAL);
                    ALTER TABLE TB_MESSAGE_PROPERTIES MODIFY PARTITION BY REFERENCE ( FK_MSG_PROPS_USER_MSG );
                    ALTER TABLE TB_USER_MESSAGE_RAW MODIFY PARTITION BY REFERENCE ( FK_MSG_RAW_USER_MSG );
                    ALTER TABLE TB_SIGNAL_MESSAGE MODIFY PARTITION BY REFERENCE ( FK_TB_SIGNAL_USER_MSG ) UPDATE INDEXES
                    (IDX_SIG_MESS_REF_TO_MESS_ID LOCAL, IDX_SIG_MESS_SIGNAL_MESS_ID LOCAL);
                    ALTER TABLE TB_SIGNAL_MESSAGE_LOG MODIFY PARTITION BY REFERENCE ( FK_SIGNAL_LOG_SIGNAL_ID )
                    UPDATE INDEXES
                    (IDX_SIGNAL_LOG_MSG_STATUS_ID LOCAL, IDX_SIGNAL_LOG_MSG_ROLE_ID LOCAL, IDX_SIGNAL_LOG_RECEIVED LOCAL);
                    ALTER TABLE TB_RECEIPT MODIFY PARTITION BY REFERENCE ( FK_TB_RECEIPT_SIGNAL_MSG );
                    ALTER TABLE TB_SIGNAL_MESSAGE_RAW MODIFY PARTITION BY REFERENCE ( FK_SIGNAL_MSG_RAW_SIGNAL_MSG );
                    ALTER TABLE TB_SEND_ATTEMPT MODIFY PARTITION BY REFERENCE ( FK_SEND_ATTEMPT_USER_MSG );
                    ALTER TABLE TB_ERROR_LOG MODIFY PARTITION BY REFERENCE ( FK_ERROR_LOG_MSG_ID ) UPDATE INDEXES
                    (IDX_ERROR_LOG_MSH_ROLE_ID LOCAL, IDX_MESSAGE_IN_ERROR_ID LOCAL, IDX_SIGNAL_MESSAGE_ID LOCAL);

                END;
            END;
            /
        </sql>



        <sqlFile path="src/main/resources/db/archive/5.0/partitioning/oracle/create-partitions-job-5.0.sql"
                 endDelimiter="\n/"/>

    </changeSet>

</databaseChangeLog>
