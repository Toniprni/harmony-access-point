<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <!-- properties - to be used in column definitions -->
    <include file="common/changelog-properties.xml" relativeToChangelogFile="true"/>

    <changeSet author="Francois Gautier" id="EDELIVERY-2427">
        <comment>WS Plugin specific tables for backend dispatch</comment>
        <createTable tableName="WS_PLUGIN_TB_BACKEND_MESSAGE_LOG">
            <column name="ID_PK" type="BIGINT" autoIncrement="true" remarks="Primary key identifying the record of the table">
                <constraints primaryKey="true" primaryKeyName="PK_WS_PLUGIN_TB_BACKEND_MESSAGE_LOG"/>
            </column>

            <column defaultValueComputed="${now}" name="CREATION_TIME" type="TIMESTAMP" remarks="The date and time when this record was created">
                <constraints nullable="false"/>
            </column>
            <column defaultValueComputed="${current_db_user}" name="CREATED_BY" type="VARCHAR(255)" remarks="The user who created this record">
                <constraints nullable="false"/>
            </column>
            <column name="MODIFICATION_TIME" type="TIMESTAMP" remarks="The date and time when this record was last modified"/>
            <column name="MODIFIED_BY" type="VARCHAR(255)" remarks="The user who last modified this record"/>

            <column name="MESSAGE_ID" type="VARCHAR(255)" remarks="ID of the domibus message log">
                <constraints nullable="false"/>
            </column>
            <column name="FINAL_RECIPIENT" type="VARCHAR(255)" remarks="Final recipient of the domibus message"/>
            <column name="ORIGINAL_SENDER" type="VARCHAR(255)" remarks="Original sender of the domibus message"/>

            <column name="BACKEND_MESSAGE_STATUS" type="VARCHAR(255)" remarks="The status describing the state of the backend message"/>
            <column name="BACKEND_MESSAGE_TYPE" type="VARCHAR(255)" remarks="The type describing the kind backend message"/>

            <column name="RULE_NAME" type="VARCHAR(255)" remarks="Name of the rule used for dispatching"/>
            <column name="SENT" type="DATETIME" remarks="DateTime when the message had been dispatched">
                <constraints nullable="false"/>
            </column>
            <column name="FAILED" type="DATETIME" remarks="DateTime when the message had failed"/>

            <column name="SEND_ATTEMPTS" type="INT" remarks="Number of attempts sent"/>
            <column name="SEND_ATTEMPTS_MAX" type="INT" remarks="Number of attempts maximal"/>
            <column name="NEXT_ATTEMPT" type="DATETIME" remarks="DateTime for the next attempt"/>

            <column name="SCHEDULED" type="BOOLEAN" remarks="true if the backend message is already scheduled to be sent"/>
        </createTable>
    </changeSet>
    
    <changeSet id="EDELIVERY-4808" author="Catalin Enache">
        <addColumn tableName="WS_PLUGIN_TB_MESSAGE_LOG">
            <column name="CONVERSATION_ID" type="VARCHAR(255)" remarks="Conversation ID of the Domibus message"/>
            <column name="REF_TO_MESSAGE_ID" type="VARCHAR(255)" remarks="Reference to Message ID of the Domibus message"/>
            <column name="FROM_PARTY_ID" type="VARCHAR(255)" remarks="From Party ID of the Domibus message"/>
            <column name="ORIGINAL_SENDER" type="VARCHAR(255)" remarks="Original sender of the Domibus message"/>
        </addColumn>
    </changeSet>

    <changeSet author="Ion Perpegel" id="EDELIVERY-7472">
        <comment>split plugin user unique constraints in 2</comment>
        <dropUniqueConstraint uniqueColumns="USERNAME,CERTIFICATE_ID" constraintName="UQ_PLUGIN_USER"
                             tableName="TB_AUTHENTICATION_ENTRY"/>
        <addUniqueConstraint columnNames="USERNAME" constraintName="UQ_PLUGIN_USER_NAME"
                             tableName="TB_AUTHENTICATION_ENTRY"/>
        <addUniqueConstraint columnNames="CERTIFICATE_ID" constraintName="UQ_PLUGIN_USER_CERT"
                             tableName="TB_AUTHENTICATION_ENTRY"/>

    </changeSet>

    <changeSet author="Ion Perpegel" id="EDELIVERY-7677">
        <comment>adding columns for action and service</comment>
        <addColumn tableName="TB_MESSAGE_UI">
            <column name="ACTION" type="VARCHAR(255)" remarks="The action of the collaboration of the message"/>
            <column name="SERVICE_TYPE" type="VARCHAR(255)" remarks="The service type of the collaboration of the message"/>
            <column name="SERVICE_VALUE" type="VARCHAR(255)" remarks="The service value of the collaboration of the message"/>
        </addColumn>

        <createIndex indexName="IDX_MSG_UI_ACTION" tableName="TB_MESSAGE_UI">
            <column name="ACTION"/>
        </createIndex>

        <createIndex indexName="IDX_MSG_UI_SRV_TYPE" tableName="TB_MESSAGE_UI">
            <column name="SERVICE_TYPE"/>
        </createIndex>

        <createIndex indexName="IDX_MSG_UI_SRV_VAL" tableName="TB_MESSAGE_UI">
            <column name="SERVICE_VALUE"/>
        </createIndex>
    </changeSet>
    
    <changeSet id="EDELIVERY-7668"  author="Catalin Enache">
        <createTable tableName="TB_VERSION" remarks="Stores Domibus version">
            <column name="VERSION" type="VARCHAR(30)" remarks="Domibus Version"/>
            <column name="BUILD_TIME" type="VARCHAR(30)" remarks="Domibus BuildTime"/>
            <column name="CREATION_TIME" type="TIMESTAMP" defaultValueComputed="${now}" remarks="The date and time when this record was created">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addUniqueConstraint columnNames="VERSION" tableName="TB_VERSION" constraintName="UQ_VERSION" />
    </changeSet>

    <!-- this file must be included in every future changelog-xx-delta.xml -->
    <include file="common/changelog-version-inserts.xml" relativeToChangelogFile="true"/>

    <changeSet id="EDELIVERY-7677" author="Ion Perpegel" dbms="oracle">
        <comment>re-create UI Replication view cause of the added columns: action,service</comment>
        <createView
                replaceIfExists="true"
                viewName="V_MESSAGE_UI_DIFF">
            SELECT
            message_id,
            message_status,
            notification_status,
            msh_role,
            message_type,
            deleted,
            received,
            send_attempts,
            send_attempts_max,
            next_attempt,
            conversation_id,
            from_id,
            to_id,
            from_scheme,
            to_scheme,
            ref_to_message_id,
            failed,
            restored,
            message_subtype,
            action,
            service_type,
            service_value
            FROM
            (
            SELECT
            message_log.message_id,
            message_log.message_status,
            message_log.notification_status,
            message_log.msh_role,
            message_log.message_type,
            message_log.deleted,
            message_log.received,
            message_log.send_attempts,
            message_log.send_attempts_max,
            message_log.next_attempt,
            user_message.coll_info_convers_id AS conversation_id,
            partyid5_.value AS from_id,
            partyid6_.value AS to_id,
            property.value AS from_scheme,
            property2.value AS to_scheme,
            message_info.ref_to_message_id,
            message_log.failed,
            message_log.restored,
            message_log.message_subtype,
            user_message.collaboration_info_action AS action,
            user_message.service_type,
            user_message.service_value
            FROM
            tb_message_log message_log
            LEFT OUTER JOIN tb_message_info message_info ON message_log.message_id =
            message_info.message_id,tb_user_message user_message
            LEFT OUTER JOIN tb_property property ON user_message.id_pk = property.messageproperties_id
            LEFT OUTER JOIN tb_property property2 ON user_message.id_pk = property2.messageproperties_id
            LEFT OUTER JOIN tb_party_id partyid5_ ON user_message.id_pk = partyid5_.from_id
            LEFT OUTER JOIN tb_party_id partyid6_ ON user_message.id_pk = partyid6_.to_id
            WHERE
            user_message.messageinfo_id_pk = message_info.id_pk
            AND property.name = 'originalSender'
            AND property2.name = 'finalRecipient'
            UNION
            SELECT
            message_log.message_id,
            message_log.message_status,
            message_log.notification_status,
            message_log.msh_role,
            message_log.message_type,
            message_log.deleted,
            message_log.received,
            message_log.send_attempts,
            message_log.send_attempts_max,
            message_log.next_attempt,
            '' AS conversation_id,
            partyid7_.value AS from_id,
            partyid8_.value AS to_id,
            property.value AS from_scheme,
            property2.value AS to_scheme,
            message_info.ref_to_message_id,
            message_log.failed,
            message_log.restored,
            message_log.message_subtype,
            null as action,
            null as service_type,
            null as service_value
            FROM
            tb_message_log message_log
            CROSS JOIN tb_messaging messaging
            INNER JOIN tb_signal_message signalmess2_ ON messaging.signal_message_id = signalmess2_.id_pk
            LEFT OUTER JOIN tb_message_info message_info ON signalmess2_.messageinfo_id_pk = message_info.id_pk
            INNER JOIN tb_user_message user_message ON messaging.user_message_id = user_message.id_pk
            LEFT OUTER JOIN tb_property property ON user_message.id_pk = property.messageproperties_id
            LEFT OUTER JOIN tb_property property2 ON user_message.id_pk = property2.messageproperties_id
            LEFT OUTER JOIN tb_party_id partyid7_ ON user_message.id_pk = partyid7_.from_id
            LEFT OUTER JOIN tb_party_id partyid8_ ON user_message.id_pk = partyid8_.to_id
            CROSS JOIN tb_message_info message_info2
            WHERE
            user_message.messageinfo_id_pk = message_info2.id_pk
            AND message_info.message_id = message_log.message_id
            AND message_info.ref_to_message_id = message_info2.message_id
            AND property.name = 'originalSender'
            AND property2.name = 'finalRecipient'
            ) result WHERE result.received BETWEEN systimestamp - INTERVAL '48' HOUR AND systimestamp + INTERVAL '1'
            HOUR
            MINUS
            SELECT
            message_id,
            message_status,
            notification_status,
            msh_role,
            message_type,
            deleted,
            received,
            send_attempts,
            send_attempts_max,
            next_attempt,
            conversation_id,
            from_id,
            to_id,
            from_scheme,
            to_scheme,
            ref_to_message_id,
            failed,
            restored,
            message_subtype,
            action,
            service_type,
            service_value
            FROM
            TB_MESSAGE_UI WHERE
            received BETWEEN systimestamp - INTERVAL '48' HOUR AND systimestamp + INTERVAL '1' HOUR
        </createView>
    </changeSet>
    <changeSet id="EDELIVERY-7677" author="Ion Perpegel" dbms="mysql">
        <comment>re-create UI Replication view cause of the added columns: action,service</comment>
        <createView
                replaceIfExists="true"
                viewName="V_MESSAGE_UI_DIFF">
            SELECT
            message_log.MESSAGE_ID,
            message_log.MESSAGE_STATUS,
            message_log.NOTIFICATION_STATUS,
            message_log.MSH_ROLE,
            message_log.MESSAGE_TYPE,
            message_log.DELETED,
            message_log.RECEIVED,
            message_log.SEND_ATTEMPTS,
            message_log.SEND_ATTEMPTS_MAX,
            message_log.NEXT_ATTEMPT,
            user_message.COLL_INFO_CONVERS_ID AS CONVERSATION_ID,
            partyid5_.VALUE AS FROM_ID,
            partyid6_.VALUE AS TO_ID,
            property3_.VALUE AS FROM_SCHEME,
            property4_.VALUE AS TO_SCHEME,
            message_info.REF_TO_MESSAGE_ID,
            message_log.FAILED,
            message_log.RESTORED,
            message_log.MESSAGE_SUBTYPE,
            user_message.COLLABORATION_INFO_ACTION AS ACTION,
            user_message.SERVICE_TYPE,
            user_message.SERVICE_VALUE
            FROM
            TB_MESSAGE_LOG message_log
            LEFT OUTER JOIN TB_MESSAGE_INFO message_info ON message_log.MESSAGE_ID = message_info.MESSAGE_ID
            CROSS JOIN TB_USER_MESSAGE user_message
            LEFT OUTER JOIN TB_PROPERTY property3_ ON user_message.ID_PK = property3_.MESSAGEPROPERTIES_ID
            LEFT OUTER JOIN TB_PROPERTY property4_ ON user_message.ID_PK = property4_.MESSAGEPROPERTIES_ID
            LEFT OUTER JOIN TB_PARTY_ID partyid5_ ON user_message.ID_PK = partyid5_.FROM_ID
            LEFT OUTER JOIN TB_PARTY_ID partyid6_ ON user_message.ID_PK = partyid6_.TO_ID

            LEFT JOIN TB_MESSAGE_UI flat_table ON message_log.message_id &lt;=&gt; flat_table.message_id
            AND message_log.message_Status &lt;=&gt; flat_table.message_status
            AND message_log.NOTIFICATION_STATUS &lt;=&gt; flat_table.NOTIFICATION_STATUS
            AND message_log.MSH_ROLE &lt;=&gt; flat_table.MSH_ROLE
            AND message_log.MESSAGE_TYPE &lt;=&gt; flat_table.MESSAGE_TYPE
            AND message_log.DELETED &lt;=&gt; flat_table.DELETED
            AND message_log.RECEIVED &lt;=&gt; flat_table.RECEIVED
            AND message_log.SEND_ATTEMPTS &lt;=&gt; flat_table.SEND_ATTEMPTS
            AND message_log.SEND_ATTEMPTS_MAX &lt;=&gt; flat_table.SEND_ATTEMPTS_MAX
            AND message_log.NEXT_ATTEMPT &lt;=&gt; flat_table.NEXT_ATTEMPT
            AND user_message.COLL_INFO_CONVERS_ID &lt;=&gt; flat_table.CONVERSATION_ID
            AND partyid5_.VALUE &lt;=&gt; flat_table.FROM_ID
            AND partyid6_.VALUE &lt;=&gt; flat_table.TO_ID
            AND property3_.VALUE &lt;=&gt; flat_table.FROM_SCHEME
            AND property4_.VALUE &lt;=&gt; flat_table.TO_SCHEME
            AND message_info.REF_TO_MESSAGE_ID &lt;=&gt; flat_table.REF_TO_MESSAGE_ID
            AND message_log.FAILED &lt;=&gt; flat_table.FAILED
            AND message_log.RESTORED &lt;=&gt; flat_table.RESTORED
            AND message_log.MESSAGE_SUBTYPE &lt;=&gt; flat_table.MESSAGE_SUBTYPE
            AND user_message.COLLABORATION_INFO_ACTION &lt;=&gt; flat_table.ACTION
            AND user_message.SERVICE_TYPE &lt;=&gt; flat_table.SERVICE_TYPE
            AND user_message.SERVICE_VALUE &lt;=&gt; flat_table.SERVICE_VALUE
            WHERE
            user_message.messageInfo_ID_PK = message_info.ID_PK
            AND property3_.NAME = 'originalSender'
            AND property4_.NAME = 'finalRecipient'
            AND message_log.received BETWEEN DATE_SUB(NOW(), INTERVAL 48 HOUR) AND DATE_ADD(NOW(), INTERVAL 1 HOUR)
            AND flat_table.message_id IS NULL

            UNION

            SELECT
            message_log.MESSAGE_ID,
            message_log.MESSAGE_STATUS,
            message_log.NOTIFICATION_STATUS,
            message_log.MSH_ROLE,
            message_log.MESSAGE_TYPE,
            message_log.DELETED,
            message_log.RECEIVED,
            message_log.SEND_ATTEMPTS,
            message_log.SEND_ATTEMPTS_MAX,
            message_log.NEXT_ATTEMPT,
            '' AS CONVERSATION_ID,
            partyid7_.VALUE AS FROM_ID,
            partyid8_.VALUE AS TO_ID,
            property5_.VALUE AS FROM_SCHEME,
            property6_.VALUE AS TO_SCHEME,
            messageinf4_.REF_TO_MESSAGE_ID,
            message_log.FAILED,
            message_log.RESTORED,
            message_log.MESSAGE_SUBTYPE,
            NULL AS ACTION,
            NULL AS SERVICE_TYPE,
            NULL AS SERVICE_VALUE
            FROM
            TB_MESSAGE_LOG message_log
            CROSS JOIN TB_MESSAGING messaging
            INNER JOIN TB_SIGNAL_MESSAGE signalmess2_ ON messaging.SIGNAL_MESSAGE_ID = signalmess2_.ID_PK
            LEFT OUTER JOIN TB_MESSAGE_INFO messageinf4_ ON signalmess2_.messageInfo_ID_PK = messageinf4_.ID_PK
            INNER JOIN TB_USER_MESSAGE usermessag3_ ON messaging.USER_MESSAGE_ID = usermessag3_.ID_PK
            LEFT OUTER JOIN TB_PROPERTY property5_ ON usermessag3_.ID_PK = property5_.MESSAGEPROPERTIES_ID
            LEFT OUTER JOIN TB_PROPERTY property6_ ON usermessag3_.ID_PK = property6_.MESSAGEPROPERTIES_ID
            LEFT OUTER JOIN TB_PARTY_ID partyid7_ ON usermessag3_.ID_PK = partyid7_.FROM_ID
            LEFT OUTER JOIN TB_PARTY_ID partyid8_ ON usermessag3_.ID_PK = partyid8_.TO_ID
            CROSS JOIN TB_MESSAGE_INFO messageinf11_

            LEFT JOIN TB_MESSAGE_UI flat_table ON message_log.message_id &lt;=&gt; flat_table.message_id
            AND message_log.message_Status &lt;=&gt; flat_table.message_status
            AND message_log.NOTIFICATION_STATUS &lt;=&gt; flat_table.NOTIFICATION_STATUS
            AND message_log.MSH_ROLE &lt;=&gt; flat_table.MSH_ROLE
            AND message_log.MESSAGE_TYPE &lt;=&gt; flat_table.MESSAGE_TYPE
            AND message_log.DELETED &lt;=&gt; flat_table.DELETED
            AND message_log.RECEIVED &lt;=&gt; flat_table.RECEIVED
            AND message_log.SEND_ATTEMPTS &lt;=&gt; flat_table.SEND_ATTEMPTS
            AND message_log.SEND_ATTEMPTS_MAX &lt;=&gt; flat_table.SEND_ATTEMPTS_MAX
            AND message_log.NEXT_ATTEMPT &lt;=&gt; flat_table.NEXT_ATTEMPT
            AND '' &lt;=&gt; flat_table.CONVERSATION_ID
            AND partyid7_.VALUE &lt;=&gt; flat_table.FROM_ID
            AND partyid8_.VALUE &lt;=&gt; flat_table.TO_ID
            AND property5_.VALUE &lt;=&gt; flat_table.FROM_SCHEME
            AND property6_.VALUE &lt;=&gt; flat_table.TO_SCHEME
            AND messageinf4_.REF_TO_MESSAGE_ID &lt;=&gt; flat_table.REF_TO_MESSAGE_ID
            AND message_log.FAILED &lt;=&gt; flat_table.FAILED
            AND message_log.RESTORED &lt;=&gt; flat_table.RESTORED
            AND message_log.MESSAGE_SUBTYPE &lt;=&gt; flat_table.MESSAGE_SUBTYPE
            WHERE
            usermessag3_.messageInfo_ID_PK = messageinf11_.ID_PK
            AND messageinf4_.MESSAGE_ID = message_log.MESSAGE_ID
            AND messageinf4_.REF_TO_MESSAGE_ID = messageinf11_.MESSAGE_ID
            AND property5_.NAME = 'originalSender'
            AND property6_.NAME = 'finalRecipient'
            AND message_log.received BETWEEN DATE_SUB(NOW(), INTERVAL 48 HOUR) AND DATE_ADD(NOW(), INTERVAL 1 HOUR)
            AND flat_table.message_id IS NULL;
        </createView>
    </changeSet>
</databaseChangeLog>