-- *****************************************************************************************************
-- Domibus 4.2.7 to 5.0 data time migration to UTC package
--
-- Main entry point is the procedure 'migrate_multitenancy'. To be executed into a begin/end; block
--
-- Parameters to be provided:
--  TIMEZONE: the timezone ID in which the date time values have been previously saved (e.g. 'Europe/Brussels')
-- *****************************************************************************************************
CREATE OR REPLACE PACKAGE MIGRATE_42_TO_50_utc_conversion IS

    PROCEDURE migrate_multitenancy(TIMEZONE IN VARCHAR2);

END MIGRATE_42_TO_50_utc_conversion;
/

CREATE OR REPLACE PACKAGE BODY MIGRATE_42_TO_50_utc_conversion IS

    PROCEDURE migrate_multitenancy(TIMEZONE IN VARCHAR2) IS
    BEGIN

        UPDATE TB_ALERT
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_ALERT
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_ALERT
        SET NEXT_ATTEMPT = SYS_EXTRACT_UTC(FROM_TZ(NEXT_ATTEMPT, TIMEZONE))
        WHERE NEXT_ATTEMPT IS NOT NULL;

        UPDATE TB_ALERT
        SET PROCESSED_TIME = SYS_EXTRACT_UTC(FROM_TZ(PROCESSED_TIME, TIMEZONE))
        WHERE PROCESSED_TIME IS NOT NULL;

        UPDATE TB_ALERT
        SET REPORTING_TIME = SYS_EXTRACT_UTC(FROM_TZ(REPORTING_TIME, TIMEZONE))
        WHERE REPORTING_TIME IS NOT NULL;

        UPDATE TB_ALERT
        SET REPORTING_TIME_FAILURE = SYS_EXTRACT_UTC(FROM_TZ(REPORTING_TIME_FAILURE, TIMEZONE))
        WHERE REPORTING_TIME_FAILURE IS NOT NULL;

        UPDATE TB_COMMAND
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_COMMAND
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_COMMAND_PROPERTY
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_COMMAND_PROPERTY
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_EVENT
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_EVENT
        SET LAST_ALERT_DATE = SYS_EXTRACT_UTC(FROM_TZ(LAST_ALERT_DATE, TIMEZONE))
        WHERE LAST_ALERT_DATE IS NOT NULL;

        UPDATE TB_EVENT
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_EVENT
        SET REPORTING_TIME = SYS_EXTRACT_UTC(FROM_TZ(REPORTING_TIME, TIMEZONE))
        WHERE REPORTING_TIME IS NOT NULL;

        UPDATE TB_EVENT_ALERT
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_EVENT_ALERT
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_EVENT_PROPERTY
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_EVENT_PROPERTY
        SET DATE_VALUE = SYS_EXTRACT_UTC(FROM_TZ(DATE_VALUE, TIMEZONE))
        WHERE DATE_VALUE IS NOT NULL;

        UPDATE TB_EVENT_PROPERTY
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_REV_CHANGES
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_REV_CHANGES
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_REV_INFO
        SET REVISION_DATE = SYS_EXTRACT_UTC(FROM_TZ(REVISION_DATE, TIMEZONE))
        WHERE REVISION_DATE IS NOT NULL;

        UPDATE TB_USER
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_USER
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_USER
        SET PASSWORD_CHANGE_DATE = SYS_EXTRACT_UTC(FROM_TZ(PASSWORD_CHANGE_DATE, TIMEZONE))
        WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

        UPDATE TB_USER
        SET SUSPENSION_DATE = SYS_EXTRACT_UTC(FROM_TZ(SUSPENSION_DATE, TIMEZONE))
        WHERE SUSPENSION_DATE IS NOT NULL;

        UPDATE TB_USER_AUD
        SET PASSWORD_CHANGE_DATE = SYS_EXTRACT_UTC(FROM_TZ(PASSWORD_CHANGE_DATE, TIMEZONE))
        WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

        UPDATE TB_USER_DOMAIN
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_USER_DOMAIN
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_USER_PASSWORD_HISTORY
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_USER_PASSWORD_HISTORY
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_USER_PASSWORD_HISTORY
        SET PASSWORD_CHANGE_DATE = SYS_EXTRACT_UTC(FROM_TZ(PASSWORD_CHANGE_DATE, TIMEZONE))
        WHERE PASSWORD_CHANGE_DATE IS NOT NULL;

        UPDATE TB_USER_ROLE
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_USER_ROLE
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_USER_ROLES
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        UPDATE TB_USER_ROLES
        SET MODIFICATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(MODIFICATION_TIME, TIMEZONE))
        WHERE MODIFICATION_TIME IS NOT NULL;

        UPDATE TB_VERSION
        SET CREATION_TIME = SYS_EXTRACT_UTC(FROM_TZ(CREATION_TIME, TIMEZONE))
        WHERE CREATION_TIME IS NOT NULL;

        COMMIT;
    END migrate_multitenancy;

END MIGRATE_42_TO_50_utc_conversion;
/