<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <!-- properties - to be used in column definitions -->
    <include file="common/changelog-properties-v2.xml" relativeToChangelogFile="true"/>

    <changeSet author="Razvan Cretu" id="EDELIVERY-9563">
        <createTable tableName="TB_PARTY_STATUS">
            <column name="ID_PK" type="BIGINT" autoIncrement="true">
                <constraints primaryKey="true" primaryKeyName="PK_PARTY_STATUS"/>
            </column>
            <column name="PARTY_NAME" type="VARCHAR(100)">
                <constraints nullable="false"/>
            </column>
            <column name="CONNECTIVITY_STATUS" type="VARCHAR(50)">
                <constraints nullable="false"/>
            </column>
            <column defaultValueComputed="${now}" name="CREATION_TIME" type="TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column defaultValueComputed="${current_db_user}" name="CREATED_BY" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="MODIFICATION_TIME" type="TIMESTAMP"/>
            <column name="MODIFIED_BY" type="VARCHAR(255)"/>
        </createTable>
        <addUniqueConstraint columnNames="PARTY_NAME" constraintName="UK_PARTY_NAME" tableName="TB_PARTY_STATUS"/>
    </changeSet>

    <changeSet author="Razvan Cretu" id="EDELIVERY-9594_awareness_initial_interval">
        <addColumn tableName="TB_PM_RECEPTION_AWARENESS">
            <column name="INITIAL_INTERVAL" type="INT" defaultValueNumeric="0"/>
        </addColumn>
    </changeSet>

    <changeSet author="Razvan Cretu" id="EDELIVERY-9594_awareness_mult_factor">
        <addColumn tableName="TB_PM_RECEPTION_AWARENESS">
            <column name="MULTIPLYING_FACTOR" type="INT" defaultValueNumeric="0"/>
        </addColumn>
    </changeSet>

    <changeSet dbms="mysql,h2" author="Ion Perpegel" id="EDELIVERY-7368-self-sending">
        <!--drop existing-->
        <dropUniqueConstraint constraintName="UK_USER_MSG_MESSAGE_ID" tableName="TB_USER_MESSAGE" />
        <dropIndex indexName="IDX_USER_MSG_MESSAGE_ID" tableName="TB_USER_MESSAGE" />
    </changeSet>
    <changeSet dbms="oracle" author="Ion Perpegel" id="EDELIVERY-7368-self-sending">
        <!--drop existing-->
        <dropUniqueConstraint constraintName="UK_USER_MSG_MESSAGE_ID" tableName="TB_USER_MESSAGE" />
    </changeSet>
    <changeSet author="Ion Perpegel" id="EDELIVERY-7368-self-sending">
        <!--For User Messages-->
        <!--add column-->
        <addColumn tableName="TB_USER_MESSAGE">
            <column name="MSH_ROLE_ID_FK" type="BIGINT"/>
        </addColumn>
        <!--fill in with data the special message-->
        <sql dbms="mysql">
            INSERT IGNORE INTO TB_D_MSH_ROLE
                (ID_PK, ROLE)
            VALUES
                (${default_id_pk}0000000001,'SENDING');
        </sql>

        <sql dbms="oracle">
            INSERT INTO TB_D_MSH_ROLE
                (ID_PK, ROLE)
            SELECT
                (${default_id_pk}0000000001,'SENDING')
            FROM DUAL
            WHERE NOT EXISTS (SELECT *
                             FROM TB_D_MSH_ROLE t
                             where (t.ROLE = 'SENDING'));
        </sql>

        <sql>
            UPDATE TB_USER_MESSAGE t1
            SET t1.MSH_ROLE_ID_FK = (SELECT t2.ID_PK FROM TB_D_MSH_ROLE t2 WHERE t2.ROLE='SENDING')
            WHERE t1.ID_PK = ${default_id_pk}
        </sql>
        
        <!--fill in with data for all the others-->
        <sql dbms="mysql">
            SET @OLD_SQL_SAFE_UPDATES = @@SQL_SAFE_UPDATES;
            SET SQL_SAFE_UPDATES = 0;

            UPDATE TB_USER_MESSAGE t1
                INNER JOIN TB_USER_MESSAGE_LOG t2 ON t1.ID_PK = t2.ID_PK
                    SET t1.MSH_ROLE_ID_FK = t2.MSH_ROLE_ID_FK;

            SET SQL_SAFE_UPDATES = @OLD_SQL_SAFE_UPDATES;
        </sql>
        <sql dbms="oracle">
            UPDATE TB_USER_MESSAGE t1
            SET (MSH_ROLE_ID_FK) = (SELECT t2.MSH_ROLE_ID_FK
                                FROM TB_USER_MESSAGE_LOG t2
                                WHERE t1.ID_PK = t2.ID_PK)
            WHERE EXISTS ( SELECT 1
                          FROM TB_USER_MESSAGE_LOG t2
                          WHERE t1.ID_PK = t2.ID_PK )
        </sql>
        <!--add back updated constraints-->
        <addNotNullConstraint columnDataType="BIGINT" columnName="MSH_ROLE_ID_FK"  tableName="TB_USER_MESSAGE" />
        <addForeignKeyConstraint baseColumnNames="MSH_ROLE_ID_FK" baseTableName="TB_USER_MESSAGE"
                                 constraintName="FK_USER_MSG_MSH_ROLE" deferrable="false" initiallyDeferred="false"
                                 onDelete="RESTRICT" onUpdate="RESTRICT" referencedColumnNames="ID_PK"
                                 referencedTableName="TB_D_MSH_ROLE" />
        <addUniqueConstraint columnNames="MESSAGE_ID, MSH_ROLE_ID_FK" constraintName="UK_USER_MSG_MESSAGE_ID" tableName="TB_USER_MESSAGE" />
        <createIndex indexName="IDX_USER_MSG_MESSAGE_ID" tableName="TB_USER_MESSAGE">
            <column name="MESSAGE_ID" />
            <column name="MSH_ROLE_ID_FK" />
        </createIndex>

        <!--For Signal Messages-->
        <!--drop existing-->
        <dropIndex indexName="IDX_SIG_MESS_SIGNAL_MESS_ID" tableName="TB_SIGNAL_MESSAGE" />
        <!--add column-->
        <addColumn tableName="TB_SIGNAL_MESSAGE">
            <column name="MSH_ROLE_ID_FK" type="BIGINT" />
        </addColumn>
        <!--fill in with data-->
        <sql dbms="mysql">
            SET @OLD_SQL_SAFE_UPDATES = @@SQL_SAFE_UPDATES;
            SET SQL_SAFE_UPDATES = 0;
            UPDATE TB_SIGNAL_MESSAGE t1
                INNER JOIN TB_SIGNAL_MESSAGE_LOG t2 ON t1.ID_PK = t2.ID_PK
                SET t1.MSH_ROLE_ID_FK = t2.MSH_ROLE_ID_FK;
            SET SQL_SAFE_UPDATES = @OLD_SQL_SAFE_UPDATES;
        </sql>
        <sql dbms="oracle">
            UPDATE TB_SIGNAL_MESSAGE t1
            SET (MSH_ROLE_ID_FK) = (SELECT t2.MSH_ROLE_ID_FK
                                    FROM TB_SIGNAL_MESSAGE_LOG t2
                                    WHERE t1.ID_PK = t2.ID_PK)
            WHERE EXISTS ( SELECT 1
                           FROM TB_SIGNAL_MESSAGE_LOG t2
                           WHERE t1.ID_PK = t2.ID_PK )
        </sql>
        <!--add back updated constraints-->
        <createIndex indexName="IDX_SIG_MESS_SIGNAL_MESS_ID" tableName="TB_SIGNAL_MESSAGE">
            <column name="SIGNAL_MESSAGE_ID"/>
            <column name="MSH_ROLE_ID_FK" />
        </createIndex>
        <addNotNullConstraint columnDataType="BIGINT" columnName="MSH_ROLE_ID_FK" tableName="TB_SIGNAL_MESSAGE" />
        <addForeignKeyConstraint baseColumnNames="MSH_ROLE_ID_FK" baseTableName="TB_SIGNAL_MESSAGE"
                                 constraintName="FK_SIGNAL_MSH_ROLE" deferrable="false" initiallyDeferred="false"
                                 onDelete="RESTRICT" onUpdate="RESTRICT" referencedColumnNames="ID_PK"
                                 referencedTableName="TB_D_MSH_ROLE" />
    </changeSet>

</databaseChangeLog>
